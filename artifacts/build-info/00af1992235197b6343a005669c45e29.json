{
	"id": "00af1992235197b6343a005669c45e29",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/nabla.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./IERC20Metadata.sol\";\r\n// import {Context} from \"./Context.sol\";\r\nimport {IERC20Errors} from \"./draft-IERC6093.sol\";\r\nimport {Pausable} from \"./Pausable.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\n\r\n\r\n\r\ncontract NABLASYSTEMS is Initializable, IERC20, IERC20Metadata, IERC20Errors, Pausable{\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n    address private _owner;\r\n\r\n\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    function initialize(string memory name_, string memory symbol_) public {\r\n                \r\n        \r\n        \r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _owner = msg.sender; // Set the owner as the deployer\r\n        _totalSupply = 1000000000 * 10**_decimals; // 1 billion tokens\r\n        _balances[_owner] = _totalSupply;\r\n        emit Transfer(address(0), _owner, _totalSupply);\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual override  whenNotPaused returns (bool) {\r\n        \r\n        _transfer(msg.sender, to, value); // Allow msg.sender to transfer tokens\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address ownerAllow, address spender) public view virtual returns (uint256) {\r\n        return _allowances[ownerAllow][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        \r\n        _approve(msg.sender, spender, value); // Use msg.sender as the owner\r\n        return true;\r\n    }\r\n\r\n    function mint(address account, uint256 value) public onlyOwner whenNotPaused {\r\n    _mint(account, value);\r\n}\r\n    modifier onlyOwner() {\r\n        \r\n        require(msg.sender == _owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual  override whenNotPaused returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    // Function to retrieve the owner address\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n\r\n\r\n    // Function to transfer ownership\r\n        function transferOwnership(address newOwner) public onlyOwner {\r\n            require(newOwner != address(0), \"New owner is the zero address\");\r\n            emit OwnershipTransferred(_owner, newOwner); // Emit event\r\n            _owner = newOwner;\r\n        }\r\n     /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        \r\n        \r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n        emit Transfer(address(0), account, value); // Emit minting transfer\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) public  {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address approveOwn, address spender, uint256 value) internal {\r\n        _approve(approveOwn, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address approveOwn, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (approveOwn == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[approveOwn][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(approveOwn, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address allowanceAdr, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(allowanceAdr, spender);\r\n        if (currentAllowance < type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(allowanceAdr, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n\r\n      \r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n        // Function to pause the contract (only by owner)\r\n    function pauseContract() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    // Function to unpause the contract (only by owner)\r\n    function unpauseContract() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n}"
			},
			"contracts/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    function initialize () public {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}"
			},
			"contracts/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}"
			},
			"contracts/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xf835db18ee1e1a300b59475595dd90c7dbd6b6b5915d2c757abe9a6ad354a608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37487cc9dd89b75dc19366b84e1996eed23312e13b5b14ded452b801c9192671\",\"dweb:/ipfs/QmbFrBJ4RaRp5yBGvhQyjpaAqvzx1DHJ1VXU1ERwHxDtvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x23e6fd4345638753dded4bc89e6e019356eb7643b550eafae56dc88632e1f517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec87872cc0a4e15930c250d17e091fd22ac48118136241f3b07dfe350583be8\",\"dweb:/ipfs/QmXHjVwbiSi3RMt9awiWYntKBGi7qrM8tMcmb92Qc4LRCz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x23e6fd4345638753dded4bc89e6e019356eb7643b550eafae56dc88632e1f517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec87872cc0a4e15930c250d17e091fd22ac48118136241f3b07dfe350583be8\",\"dweb:/ipfs/QmXHjVwbiSi3RMt9awiWYntKBGi7qrM8tMcmb92Qc4LRCz\"]},\"contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x34f462b71426c5f4d3bfed6a9d4b3a3b80c5a7bf3b68d64c3683654337fa4287\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37eafdf3b8adcadac4c7b0018c564d6110e9d07d99a21039544240c9fd323f9f\",\"dweb:/ipfs/QmPuuFcofEXax4t872srhA5548umhucpHFmnExBDWHxMzk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"initialize()": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialize()": "8129fc1c",
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"initialize()\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xf835db18ee1e1a300b59475595dd90c7dbd6b6b5915d2c757abe9a6ad354a608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37487cc9dd89b75dc19366b84e1996eed23312e13b5b14ded452b801c9192671\",\"dweb:/ipfs/QmbFrBJ4RaRp5yBGvhQyjpaAqvzx1DHJ1VXU1ERwHxDtvy\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0xaa8f89f2fd0611b7fc05f7c54b376a048bf97af6c7bf5fe843f29ffabd336ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c12ffe7a57afa15402cc1d22e9cafc4b8de006fff519ac319a6d1b524f00f82f\",\"dweb:/ipfs/QmYbEeipTro3Gkj5X8Dxsh9C59UtqKPvqfv7mdmQEH47Hd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 583,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/draft-IERC6093.sol\":{\"keccak256\":\"0xf7981dc5818a66ce9106400d672d1b89c3ef2a3824572e98435f8a68825f569c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d686da8d731d90aa7116d949b58dea537acef1a63f23e3369d2f0a7a6a3d5af6\",\"dweb:/ipfs/QmTu51rPgjHzuGnZmrVbLD6pLiMAa8Yj8cAVJJJkUYXZwj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/draft-IERC6093.sol\":{\"keccak256\":\"0xf7981dc5818a66ce9106400d672d1b89c3ef2a3824572e98435f8a68825f569c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d686da8d731d90aa7116d949b58dea537acef1a63f23e3369d2f0a7a6a3d5af6\",\"dweb:/ipfs/QmTu51rPgjHzuGnZmrVbLD6pLiMAa8Yj8cAVJJJkUYXZwj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/draft-IERC6093.sol\":{\"keccak256\":\"0xf7981dc5818a66ce9106400d672d1b89c3ef2a3824572e98435f8a68825f569c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d686da8d731d90aa7116d949b58dea537acef1a63f23e3369d2f0a7a6a3d5af6\",\"dweb:/ipfs/QmTu51rPgjHzuGnZmrVbLD6pLiMAa8Yj8cAVJJJkUYXZwj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/nabla.sol": {
				"NABLASYSTEMS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "_burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ownerAllow",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpauseContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"_burn(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, lowering the total supply. Relies on the `_update` mechanism. Emits a {Transfer} event with `to` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead"
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"initialize()": {
								"details": "Initializes the contract in unpaused state."
							},
							"initialize(string,string)": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/nabla.sol\":1193:12956  contract NABLASYSTEMS is Initializable, IERC20, IERC20Metadata, IERC20Errors, Pausable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/nabla.sol\":1193:12956  contract NABLASYSTEMS is Initializable, IERC20, IERC20Metadata, IERC20Errors, Pausable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6161eb18\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb33712c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x6161eb18\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x439766ce\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4cd88b76\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/nabla.sol\":2275:2366  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":4622:4819  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":3382:3481  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":5678:5951  function transferFrom(address from, address to, uint256 value) public virtual  override whenNotPaused returns (bool) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":3226:3317  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":4827:4936  function mint(address account, uint256 value) public onlyOwner whenNotPaused {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/nabla.sol\":12740:12811  function pauseContract() external onlyOwner {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/nabla.sol\":1790:2205  function initialize(string memory name_, string memory symbol_) public {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Pausable.sol\":1088:1174  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":9539:9749  function _burn(address account, uint256 value) public  {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/nabla.sol\":3544:3662  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":924:988  function initialize () public {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/nabla.sol\":6006:6085  function owner() public view returns (address) {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":2485:2580  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":3867:4088  function transfer(address to, uint256 value) public virtual override  whenNotPaused returns (bool) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":12876:12951  function unpauseContract() external onlyOwner {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/nabla.sol\":4151:4303  function allowance(address ownerAllow, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nabla.sol\":6140:6397  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/nabla.sol\":2275:2366  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"contracts/nabla.sol\":2320:2333  string memory */\n      0x60\n        /* \"contracts/nabla.sol\":2353:2358  _name */\n      0x04\n        /* \"contracts/nabla.sol\":2346:2358  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":2275:2366  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":4622:4819  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"contracts/nabla.sol\":4695:4699  bool */\n      0x00\n        /* \"contracts/nabla.sol\":4722:4758  _approve(msg.sender, spender, value) */\n      tag_98\n        /* \"contracts/nabla.sol\":4731:4741  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4743:4750  spender */\n      dup5\n        /* \"contracts/nabla.sol\":4752:4757  value */\n      dup5\n        /* \"contracts/nabla.sol\":4722:4730  _approve */\n      tag_99\n        /* \"contracts/nabla.sol\":4722:4758  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/nabla.sol\":4807:4811  true */\n      0x01\n        /* \"contracts/nabla.sol\":4800:4811  return true */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":4622:4819  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":3382:3481  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"contracts/nabla.sol\":3434:3441  uint256 */\n      0x00\n        /* \"contracts/nabla.sol\":3461:3473  _totalSupply */\n      sload(0x03)\n        /* \"contracts/nabla.sol\":3454:3473  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":3382:3481  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":5678:5951  function transferFrom(address from, address to, uint256 value) public virtual  override whenNotPaused returns (bool) {... */\n    tag_41:\n        /* \"contracts/nabla.sol\":5789:5793  bool */\n      0x00\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      tag_102\n        /* \"contracts/Pausable.sol\":1414:1420  paused */\n      tag_57\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Pausable.sol\":1413:1422  !paused() */\n      iszero\n        /* \"contracts/Pausable.sol\":1405:1443  require(!paused(), \"Pausable: paused\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/nabla.sol\":5806:5821  address spender */\n      0x00\n        /* \"contracts/nabla.sol\":5824:5836  _msgSender() */\n      tag_107\n        /* \"contracts/nabla.sol\":5824:5834  _msgSender */\n      tag_108\n        /* \"contracts/nabla.sol\":5824:5836  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/nabla.sol\":5806:5836  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":5847:5884  _spendAllowance(from, spender, value) */\n      tag_109\n        /* \"contracts/nabla.sol\":5863:5867  from */\n      dup6\n        /* \"contracts/nabla.sol\":5869:5876  spender */\n      dup3\n        /* \"contracts/nabla.sol\":5878:5883  value */\n      dup6\n        /* \"contracts/nabla.sol\":5847:5862  _spendAllowance */\n      tag_110\n        /* \"contracts/nabla.sol\":5847:5884  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/nabla.sol\":5895:5921  _transfer(from, to, value) */\n      tag_111\n        /* \"contracts/nabla.sol\":5905:5909  from */\n      dup6\n        /* \"contracts/nabla.sol\":5911:5913  to */\n      dup6\n        /* \"contracts/nabla.sol\":5915:5920  value */\n      dup6\n        /* \"contracts/nabla.sol\":5895:5904  _transfer */\n      tag_112\n        /* \"contracts/nabla.sol\":5895:5921  _transfer(from, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/nabla.sol\":5939:5943  true */\n      0x01\n        /* \"contracts/nabla.sol\":5932:5943  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/nabla.sol\":5678:5951  function transferFrom(address from, address to, uint256 value) public virtual  override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":3226:3317  function decimals() public view virtual returns (uint8) {... */\n    tag_44:\n        /* \"contracts/nabla.sol\":3275:3280  uint8 */\n      0x00\n        /* \"contracts/nabla.sol\":1473:1475  18 */\n      0x12\n        /* \"contracts/nabla.sol\":3293:3309  return _decimals */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":3226:3317  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":4827:4936  function mint(address account, uint256 value) public onlyOwner whenNotPaused {... */\n    tag_49:\n        /* \"contracts/nabla.sol\":5006:5012  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5002  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/nabla.sol\":4984:5050  require(msg.sender == _owner, \"Only owner can call this function\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      tag_119\n        /* \"contracts/Pausable.sol\":1414:1420  paused */\n      tag_57\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Pausable.sol\":1413:1422  !paused() */\n      iszero\n        /* \"contracts/Pausable.sol\":1405:1443  require(!paused(), \"Pausable: paused\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_105\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/nabla.sol\":4911:4932  _mint(account, value) */\n      tag_123\n        /* \"contracts/nabla.sol\":4917:4924  account */\n      dup3\n        /* \"contracts/nabla.sol\":4926:4931  value */\n      dup3\n        /* \"contracts/nabla.sol\":4911:4916  _mint */\n      tag_124\n        /* \"contracts/nabla.sol\":4911:4932  _mint(account, value) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/nabla.sol\":4827:4936  function mint(address account, uint256 value) public onlyOwner whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":12740:12811  function pauseContract() external onlyOwner {... */\n    tag_51:\n        /* \"contracts/nabla.sol\":5006:5012  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5002  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/nabla.sol\":4984:5050  require(msg.sender == _owner, \"Only owner can call this function\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_117\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/nabla.sol\":12795:12803  _pause() */\n      tag_129\n        /* \"contracts/nabla.sol\":12795:12801  _pause */\n      tag_130\n        /* \"contracts/nabla.sol\":12795:12803  _pause() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/nabla.sol\":12740:12811  function pauseContract() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/nabla.sol\":1790:2205  function initialize(string memory name_, string memory symbol_) public {... */\n    tag_55:\n        /* \"contracts/nabla.sol\":1918:1923  name_ */\n      dup2\n        /* \"contracts/nabla.sol\":1910:1915  _name */\n      0x04\n        /* \"contracts/nabla.sol\":1910:1923  _name = name_ */\n      swap1\n      dup2\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      pop\n        /* \"contracts/nabla.sol\":1944:1951  symbol_ */\n      dup1\n        /* \"contracts/nabla.sol\":1934:1941  _symbol */\n      0x05\n        /* \"contracts/nabla.sol\":1934:1951  _symbol = symbol_ */\n      swap1\n      dup2\n      tag_134\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      pop\n        /* \"contracts/nabla.sol\":1971:1981  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":1962:1968  _owner */\n      0x06\n      0x00\n        /* \"contracts/nabla.sol\":1962:1981  _owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":1473:1475  18 */\n      0x12\n        /* \"contracts/nabla.sol\":2053:2055  10 */\n      0x0a\n        /* \"contracts/nabla.sol\":2053:2066  10**_decimals */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/nabla.sol\":2040:2050  1000000000 */\n      0x3b9aca00\n        /* \"contracts/nabla.sol\":2040:2066  1000000000 * 10**_decimals */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/nabla.sol\":2025:2037  _totalSupply */\n      0x03\n        /* \"contracts/nabla.sol\":2025:2066  _totalSupply = 1000000000 * 10**_decimals */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":2117:2129  _totalSupply */\n      sload(0x03)\n        /* \"contracts/nabla.sol\":2097:2106  _balances */\n      0x01\n        /* \"contracts/nabla.sol\":2097:2114  _balances[_owner] */\n      0x00\n        /* \"contracts/nabla.sol\":2107:2113  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":2097:2114  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nabla.sol\":2097:2129  _balances[_owner] = _totalSupply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":2166:2172  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":2145:2187  Transfer(address(0), _owner, _totalSupply) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":2162:2163  0 */\n      0x00\n        /* \"contracts/nabla.sol\":2145:2187  Transfer(address(0), _owner, _totalSupply) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/nabla.sol\":2174:2186  _totalSupply */\n      sload(0x03)\n        /* \"contracts/nabla.sol\":2145:2187  Transfer(address(0), _owner, _totalSupply) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nabla.sol\":1790:2205  function initialize(string memory name_, string memory symbol_) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":1088:1174  function paused() public view virtual returns (bool) {... */\n    tag_57:\n        /* \"contracts/Pausable.sol\":1135:1139  bool */\n      0x00\n        /* \"contracts/Pausable.sol\":1159:1166  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":1152:1166  return _paused */\n      swap1\n      pop\n        /* \"contracts/Pausable.sol\":1088:1174  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":9539:9749  function _burn(address account, uint256 value) public  {... */\n    tag_61:\n        /* \"contracts/nabla.sol\":9628:9629  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9609:9630  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":9609:9616  account */\n      dup3\n        /* \"contracts/nabla.sol\":9609:9630  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":9605:9696  if (account == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"contracts/nabla.sol\":9681:9682  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9654:9684  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":9605:9696  if (account == address(0)) {... */\n    tag_142:\n        /* \"contracts/nabla.sol\":9706:9741  _update(account, address(0), value) */\n      tag_144\n        /* \"contracts/nabla.sol\":9714:9721  account */\n      dup3\n        /* \"contracts/nabla.sol\":9731:9732  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9735:9740  value */\n      dup4\n        /* \"contracts/nabla.sol\":9706:9713  _update */\n      tag_145\n        /* \"contracts/nabla.sol\":9706:9741  _update(account, address(0), value) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/nabla.sol\":9539:9749  function _burn(address account, uint256 value) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":3544:3662  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"contracts/nabla.sol\":3609:3616  uint256 */\n      0x00\n        /* \"contracts/nabla.sol\":3636:3645  _balances */\n      0x01\n        /* \"contracts/nabla.sol\":3636:3654  _balances[account] */\n      0x00\n        /* \"contracts/nabla.sol\":3646:3653  account */\n      dup4\n        /* \"contracts/nabla.sol\":3636:3654  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/nabla.sol\":3629:3654  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":3544:3662  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":924:988  function initialize () public {... */\n    tag_68:\n        /* \"contracts/Pausable.sol\":975:980  false */\n      0x00\n        /* \"contracts/Pausable.sol\":965:972  _paused */\n      dup1\n      0x00\n        /* \"contracts/Pausable.sol\":965:980  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":924:988  function initialize () public {... */\n      jump\t// out\n        /* \"contracts/nabla.sol\":6006:6085  function owner() public view returns (address) {... */\n    tag_70:\n        /* \"contracts/nabla.sol\":6044:6051  address */\n      0x00\n        /* \"contracts/nabla.sol\":6071:6077  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6064:6077  return _owner */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":6006:6085  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":2485:2580  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"contracts/nabla.sol\":2532:2545  string memory */\n      0x60\n        /* \"contracts/nabla.sol\":2565:2572  _symbol */\n      0x05\n        /* \"contracts/nabla.sol\":2558:2572  return _symbol */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_92\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_92\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":2485:2580  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":3867:4088  function transfer(address to, uint256 value) public virtual override  whenNotPaused returns (bool) {... */\n    tag_78:\n        /* \"contracts/nabla.sol\":3960:3964  bool */\n      0x00\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      tag_156\n        /* \"contracts/Pausable.sol\":1414:1420  paused */\n      tag_57\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/Pausable.sol\":1413:1422  !paused() */\n      iszero\n        /* \"contracts/Pausable.sol\":1405:1443  require(!paused(), \"Pausable: paused\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_105\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/nabla.sol\":3987:4019  _transfer(msg.sender, to, value) */\n      tag_160\n        /* \"contracts/nabla.sol\":3997:4007  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4009:4011  to */\n      dup5\n        /* \"contracts/nabla.sol\":4013:4018  value */\n      dup5\n        /* \"contracts/nabla.sol\":3987:3996  _transfer */\n      tag_112\n        /* \"contracts/nabla.sol\":3987:4019  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/nabla.sol\":4076:4080  true */\n      0x01\n        /* \"contracts/nabla.sol\":4069:4080  return true */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":3867:4088  function transfer(address to, uint256 value) public virtual override  whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":12876:12951  function unpauseContract() external onlyOwner {... */\n    tag_81:\n        /* \"contracts/nabla.sol\":5006:5012  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5002  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/nabla.sol\":4984:5050  require(msg.sender == _owner, \"Only owner can call this function\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_117\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/nabla.sol\":12933:12943  _unpause() */\n      tag_165\n        /* \"contracts/nabla.sol\":12933:12941  _unpause */\n      tag_166\n        /* \"contracts/nabla.sol\":12933:12943  _unpause() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/nabla.sol\":12876:12951  function unpauseContract() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/nabla.sol\":4151:4303  function allowance(address ownerAllow, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"contracts/nabla.sol\":4236:4243  uint256 */\n      0x00\n        /* \"contracts/nabla.sol\":4263:4274  _allowances */\n      0x02\n        /* \"contracts/nabla.sol\":4263:4286  _allowances[ownerAllow] */\n      0x00\n        /* \"contracts/nabla.sol\":4275:4285  ownerAllow */\n      dup5\n        /* \"contracts/nabla.sol\":4263:4286  _allowances[ownerAllow] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nabla.sol\":4263:4295  _allowances[ownerAllow][spender] */\n      0x00\n        /* \"contracts/nabla.sol\":4287:4294  spender */\n      dup4\n        /* \"contracts/nabla.sol\":4263:4295  _allowances[ownerAllow][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/nabla.sol\":4256:4295  return _allowances[ownerAllow][spender] */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":4151:4303  function allowance(address ownerAllow, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":6140:6397  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_89:\n        /* \"contracts/nabla.sol\":5006:5012  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":4992:5002  msg.sender */\n      caller\n        /* \"contracts/nabla.sol\":4992:5012  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/nabla.sol\":4984:5050  require(msg.sender == _owner, \"Only owner can call this function\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_117\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/nabla.sol\":6245:6246  0 */\n      0x00\n        /* \"contracts/nabla.sol\":6225:6247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6225:6233  newOwner */\n      dup2\n        /* \"contracts/nabla.sol\":6225:6247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":6217:6281  require(newOwner != address(0), \"New owner is the zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/nabla.sol\":6330:6338  newOwner */\n      dup1\n        /* \"contracts/nabla.sol\":6301:6339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6322:6328  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6301:6339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nabla.sol\":6377:6385  newOwner */\n      dup1\n        /* \"contracts/nabla.sol\":6368:6374  _owner */\n      0x06\n      0x00\n        /* \"contracts/nabla.sol\":6368:6385  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":6140:6397  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":10302:10442  function _approve(address approveOwn, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"contracts/nabla.sol\":10392:10434  _approve(approveOwn, spender, value, true) */\n      tag_176\n        /* \"contracts/nabla.sol\":10401:10411  approveOwn */\n      dup4\n        /* \"contracts/nabla.sol\":10413:10420  spender */\n      dup4\n        /* \"contracts/nabla.sol\":10422:10427  value */\n      dup4\n        /* \"contracts/nabla.sol\":10429:10433  true */\n      0x01\n        /* \"contracts/nabla.sol\":10392:10400  _approve */\n      tag_177\n        /* \"contracts/nabla.sol\":10392:10434  _approve(approveOwn, spender, value, true) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/nabla.sol\":10302:10442  function _approve(address approveOwn, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":603:701  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"contracts/Context.sol\":656:663  address */\n      0x00\n        /* \"contracts/Context.sol\":683:693  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":676:693  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":603:701  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nabla.sol\":12064:12571  function _spendAllowance(address allowanceAdr, address spender, uint256 value) internal virtual {... */\n    tag_110:\n        /* \"contracts/nabla.sol\":12171:12195  uint256 currentAllowance */\n      0x00\n        /* \"contracts/nabla.sol\":12198:12230  allowance(allowanceAdr, spender) */\n      tag_180\n        /* \"contracts/nabla.sol\":12208:12220  allowanceAdr */\n      dup5\n        /* \"contracts/nabla.sol\":12222:12229  spender */\n      dup5\n        /* \"contracts/nabla.sol\":12198:12207  allowance */\n      tag_85\n        /* \"contracts/nabla.sol\":12198:12230  allowance(allowanceAdr, spender) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/nabla.sol\":12171:12230  uint256 currentAllowance = allowance(allowanceAdr, spender) */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":12264:12281  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/nabla.sol\":12245:12261  currentAllowance */\n      dup2\n        /* \"contracts/nabla.sol\":12245:12281  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/nabla.sol\":12241:12564  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/nabla.sol\":12321:12326  value */\n      dup2\n        /* \"contracts/nabla.sol\":12302:12318  currentAllowance */\n      dup2\n        /* \"contracts/nabla.sol\":12302:12326  currentAllowance < value */\n      lt\n        /* \"contracts/nabla.sol\":12298:12430  if (currentAllowance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/nabla.sol\":12381:12388  spender */\n      dup3\n        /* \"contracts/nabla.sol\":12390:12406  currentAllowance */\n      dup2\n        /* \"contracts/nabla.sol\":12408:12413  value */\n      dup4\n        /* \"contracts/nabla.sol\":12354:12414  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":12298:12430  if (currentAllowance < value) {... */\n    tag_182:\n        /* \"contracts/nabla.sol\":12473:12537  _approve(allowanceAdr, spender, currentAllowance - value, false) */\n      tag_185\n        /* \"contracts/nabla.sol\":12482:12494  allowanceAdr */\n      dup5\n        /* \"contracts/nabla.sol\":12496:12503  spender */\n      dup5\n        /* \"contracts/nabla.sol\":12524:12529  value */\n      dup5\n        /* \"contracts/nabla.sol\":12505:12521  currentAllowance */\n      dup5\n        /* \"contracts/nabla.sol\":12505:12529  currentAllowance - value */\n      sub\n        /* \"contracts/nabla.sol\":12531:12536  false */\n      0x00\n        /* \"contracts/nabla.sol\":12473:12481  _approve */\n      tag_177\n        /* \"contracts/nabla.sol\":12473:12537  _approve(allowanceAdr, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/nabla.sol\":12241:12564  if (currentAllowance < type(uint256).max) {... */\n    tag_181:\n        /* \"contracts/nabla.sol\":12160:12571  {... */\n      pop\n        /* \"contracts/nabla.sol\":12064:12571  function _spendAllowance(address allowanceAdr, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":6781:7089  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_112:\n        /* \"contracts/nabla.sol\":6881:6882  0 */\n      0x00\n        /* \"contracts/nabla.sol\":6865:6883  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6865:6869  from */\n      dup4\n        /* \"contracts/nabla.sol\":6865:6883  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":6861:6949  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"contracts/nabla.sol\":6934:6935  0 */\n      0x00\n        /* \"contracts/nabla.sol\":6907:6937  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":6861:6949  if (from == address(0)) {... */\n    tag_187:\n        /* \"contracts/nabla.sol\":6977:6978  0 */\n      0x00\n        /* \"contracts/nabla.sol\":6963:6979  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":6963:6965  to */\n      dup3\n        /* \"contracts/nabla.sol\":6963:6979  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":6959:7047  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"contracts/nabla.sol\":7032:7033  0 */\n      0x00\n        /* \"contracts/nabla.sol\":7003:7035  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":6959:7047  if (to == address(0)) {... */\n    tag_189:\n        /* \"contracts/nabla.sol\":7057:7081  _update(from, to, value) */\n      tag_191\n        /* \"contracts/nabla.sol\":7065:7069  from */\n      dup4\n        /* \"contracts/nabla.sol\":7071:7073  to */\n      dup4\n        /* \"contracts/nabla.sol\":7075:7080  value */\n      dup4\n        /* \"contracts/nabla.sol\":7057:7064  _update */\n      tag_145\n        /* \"contracts/nabla.sol\":7057:7081  _update(from, to, value) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/nabla.sol\":6781:7089  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/nabla.sol\":8901:9211  function _mint(address account, uint256 value) internal {... */\n    tag_124:\n        /* \"contracts/nabla.sol\":9011:9012  0 */\n      0x00\n        /* \"contracts/nabla.sol\":8992:9013  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":8992:8999  account */\n      dup3\n        /* \"contracts/nabla.sol\":8992:9013  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":8988:9081  if (account == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"contracts/nabla.sol\":9066:9067  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9037:9069  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":8988:9081  if (account == address(0)) {... */\n    tag_193:\n        /* \"contracts/nabla.sol\":9091:9126  _update(address(0), account, value) */\n      tag_195\n        /* \"contracts/nabla.sol\":9107:9108  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9111:9118  account */\n      dup4\n        /* \"contracts/nabla.sol\":9120:9125  value */\n      dup4\n        /* \"contracts/nabla.sol\":9091:9098  _update */\n      tag_145\n        /* \"contracts/nabla.sol\":9091:9126  _update(address(0), account, value) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/nabla.sol\":9163:9170  account */\n      dup2\n        /* \"contracts/nabla.sol\":9142:9178  Transfer(address(0), account, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":9159:9160  0 */\n      0x00\n        /* \"contracts/nabla.sol\":9142:9178  Transfer(address(0), account, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/nabla.sol\":9172:9177  value */\n      dup4\n        /* \"contracts/nabla.sol\":9142:9178  Transfer(address(0), account, value) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nabla.sol\":8901:9211  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":1888:2006  function _pause() internal virtual whenNotPaused {... */\n    tag_130:\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      tag_198\n        /* \"contracts/Pausable.sol\":1414:1420  paused */\n      tag_57\n        /* \"contracts/Pausable.sol\":1414:1422  paused() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/Pausable.sol\":1413:1422  !paused() */\n      iszero\n        /* \"contracts/Pausable.sol\":1405:1443  require(!paused(), \"Pausable: paused\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_105\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/Pausable.sol\":1958:1962  true */\n      0x01\n        /* \"contracts/Pausable.sol\":1948:1955  _paused */\n      0x00\n      dup1\n        /* \"contracts/Pausable.sol\":1948:1962  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":1978:1998  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/Pausable.sol\":1985:1997  _msgSender() */\n      tag_202\n        /* \"contracts/Pausable.sol\":1985:1995  _msgSender */\n      tag_108\n        /* \"contracts/Pausable.sol\":1985:1997  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/Pausable.sol\":1978:1998  Paused(_msgSender()) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":1888:2006  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/nabla.sol\":7413:8548  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_145:\n        /* \"contracts/nabla.sol\":7519:7520  0 */\n      0x00\n        /* \"contracts/nabla.sol\":7503:7521  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":7503:7507  from */\n      dup4\n        /* \"contracts/nabla.sol\":7503:7521  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":7499:8051  if (from == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"contracts/nabla.sol\":7657:7662  value */\n      dup1\n        /* \"contracts/nabla.sol\":7641:7653  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/nabla.sol\":7641:7662  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":7499:8051  if (from == address(0)) {... */\n      jump(tag_208)\n    tag_205:\n        /* \"contracts/nabla.sol\":7695:7714  uint256 fromBalance */\n      0x00\n        /* \"contracts/nabla.sol\":7717:7726  _balances */\n      0x01\n        /* \"contracts/nabla.sol\":7717:7732  _balances[from] */\n      0x00\n        /* \"contracts/nabla.sol\":7727:7731  from */\n      dup6\n        /* \"contracts/nabla.sol\":7717:7732  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/nabla.sol\":7695:7732  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/nabla.sol\":7765:7770  value */\n      dup2\n        /* \"contracts/nabla.sol\":7751:7762  fromBalance */\n      dup2\n        /* \"contracts/nabla.sol\":7751:7770  fromBalance < value */\n      lt\n        /* \"contracts/nabla.sol\":7747:7864  if (fromBalance < value) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/nabla.sol\":7823:7827  from */\n      dup4\n        /* \"contracts/nabla.sol\":7829:7840  fromBalance */\n      dup2\n        /* \"contracts/nabla.sol\":7842:7847  value */\n      dup4\n        /* \"contracts/nabla.sol\":7798:7848  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":7747:7864  if (fromBalance < value) {... */\n    tag_209:\n        /* \"contracts/nabla.sol\":8019:8024  value */\n      dup2\n        /* \"contracts/nabla.sol\":8005:8016  fromBalance */\n      dup2\n        /* \"contracts/nabla.sol\":8005:8024  fromBalance - value */\n      sub\n        /* \"contracts/nabla.sol\":7987:7996  _balances */\n      0x01\n        /* \"contracts/nabla.sol\":7987:8002  _balances[from] */\n      0x00\n        /* \"contracts/nabla.sol\":7997:8001  from */\n      dup7\n        /* \"contracts/nabla.sol\":7987:8002  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nabla.sol\":7987:8024  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":7680:8051  {... */\n      pop\n        /* \"contracts/nabla.sol\":7499:8051  if (from == address(0)) {... */\n    tag_208:\n        /* \"contracts/nabla.sol\":8081:8082  0 */\n      0x00\n        /* \"contracts/nabla.sol\":8067:8083  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":8067:8069  to */\n      dup3\n        /* \"contracts/nabla.sol\":8067:8083  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":8063:8498  if (to == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"contracts/nabla.sol\":8249:8254  value */\n      dup1\n        /* \"contracts/nabla.sol\":8233:8245  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/nabla.sol\":8233:8254  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":8063:8498  if (to == address(0)) {... */\n      jump(tag_212)\n    tag_211:\n        /* \"contracts/nabla.sol\":8466:8471  value */\n      dup1\n        /* \"contracts/nabla.sol\":8449:8458  _balances */\n      0x01\n        /* \"contracts/nabla.sol\":8449:8462  _balances[to] */\n      0x00\n        /* \"contracts/nabla.sol\":8459:8461  to */\n      dup5\n        /* \"contracts/nabla.sol\":8449:8462  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/nabla.sol\":8449:8471  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":8063:8498  if (to == address(0)) {... */\n    tag_212:\n        /* \"contracts/nabla.sol\":8530:8532  to */\n      dup2\n        /* \"contracts/nabla.sol\":8515:8540  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":8524:8528  from */\n      dup4\n        /* \"contracts/nabla.sol\":8515:8540  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/nabla.sol\":8534:8539  value */\n      dup4\n        /* \"contracts/nabla.sol\":8515:8540  Transfer(from, to, value) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nabla.sol\":7413:8548  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":2147:2267  function _unpause() internal virtual whenPaused {... */\n    tag_166:\n        /* \"contracts/Pausable.sol\":1691:1699  paused() */\n      tag_215\n        /* \"contracts/Pausable.sol\":1691:1697  paused */\n      tag_57\n        /* \"contracts/Pausable.sol\":1691:1699  paused() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/Pausable.sol\":1683:1724  require(paused(), \"Pausable: not paused\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/Pausable.sol\":2216:2221  false */\n      0x00\n        /* \"contracts/Pausable.sol\":2206:2213  _paused */\n      dup1\n      0x00\n        /* \"contracts/Pausable.sol\":2206:2221  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":2237:2259  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/Pausable.sol\":2246:2258  _msgSender() */\n      tag_220\n        /* \"contracts/Pausable.sol\":2246:2256  _msgSender */\n      tag_108\n        /* \"contracts/Pausable.sol\":2246:2258  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Pausable.sol\":2237:2259  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":2147:2267  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/nabla.sol\":11309:11772  function _approve(address approveOwn, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_177:\n        /* \"contracts/nabla.sol\":11449:11450  0 */\n      0x00\n        /* \"contracts/nabla.sol\":11427:11451  approveOwn == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":11427:11437  approveOwn */\n      dup5\n        /* \"contracts/nabla.sol\":11427:11451  approveOwn == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":11423:11519  if (approveOwn == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"contracts/nabla.sol\":11504:11505  0 */\n      0x00\n        /* \"contracts/nabla.sol\":11475:11507  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":11423:11519  if (approveOwn == address(0)) {... */\n    tag_223:\n        /* \"contracts/nabla.sol\":11552:11553  0 */\n      0x00\n        /* \"contracts/nabla.sol\":11533:11554  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":11533:11540  spender */\n      dup4\n        /* \"contracts/nabla.sol\":11533:11554  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/nabla.sol\":11529:11621  if (spender == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"contracts/nabla.sol\":11606:11607  0 */\n      0x00\n        /* \"contracts/nabla.sol\":11578:11609  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/nabla.sol\":11529:11621  if (spender == address(0)) {... */\n    tag_225:\n        /* \"contracts/nabla.sol\":11666:11671  value */\n      dup2\n        /* \"contracts/nabla.sol\":11631:11642  _allowances */\n      0x02\n        /* \"contracts/nabla.sol\":11631:11654  _allowances[approveOwn] */\n      0x00\n        /* \"contracts/nabla.sol\":11643:11653  approveOwn */\n      dup7\n        /* \"contracts/nabla.sol\":11631:11654  _allowances[approveOwn] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nabla.sol\":11631:11663  _allowances[approveOwn][spender] */\n      0x00\n        /* \"contracts/nabla.sol\":11655:11662  spender */\n      dup6\n        /* \"contracts/nabla.sol\":11631:11663  _allowances[approveOwn][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nabla.sol\":11631:11671  _allowances[approveOwn][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/nabla.sol\":11686:11695  emitEvent */\n      dup1\n        /* \"contracts/nabla.sol\":11682:11765  if (emitEvent) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/nabla.sol\":11738:11745  spender */\n      dup3\n        /* \"contracts/nabla.sol\":11717:11753  Approval(approveOwn, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nabla.sol\":11726:11736  approveOwn */\n      dup5\n        /* \"contracts/nabla.sol\":11717:11753  Approval(approveOwn, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/nabla.sol\":11747:11752  value */\n      dup5\n        /* \"contracts/nabla.sol\":11717:11753  Approval(approveOwn, spender, value) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nabla.sol\":11682:11765  if (emitEvent) {... */\n    tag_227:\n        /* \"contracts/nabla.sol\":11309:11772  function _approve(address approveOwn, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_229:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_230:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_231:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_291:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_232:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_233:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_296\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_229\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":818:889   */\n      tag_297\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_298\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_231\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":988:1017   */\n      tag_299\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_232\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_27:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_301\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_233\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_234:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_235:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_236:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_237:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_238:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_307\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_237\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_239:\n        /* \"#utility.yul\":1983:2007   */\n      tag_309\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_238\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_310:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_240:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_312\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_239\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_241:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_242:\n        /* \"#utility.yul\":2339:2363   */\n      tag_315\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_241\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_316:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_243:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_318\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_242\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_30:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_321\n      tag_235\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2632:2751   */\n    tag_320:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_322\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_240\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_323\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_243\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_244:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_245:\n        /* \"#utility.yul\":3196:3217   */\n      tag_326\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_244\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_33:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_328\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_245\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_246:\n        /* \"#utility.yul\":3533:3557   */\n      tag_330\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_241\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_37:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_332\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_246\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_40:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_335\n      tag_235\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3908:4027   */\n    tag_334:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_336\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_337\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_240\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_338\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_243\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_247:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_248:\n        /* \"#utility.yul\":4598:4620   */\n      tag_341\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_247\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_46:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_343\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_248\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4970   */\n    tag_249:\n        /* \"#utility.yul\":4962:4963   */\n      0x00\n        /* \"#utility.yul\":4959:4960   */\n      dup1\n        /* \"#utility.yul\":4952:4964   */\n      revert\n        /* \"#utility.yul\":4976:5093   */\n    tag_250:\n        /* \"#utility.yul\":5085:5086   */\n      0x00\n        /* \"#utility.yul\":5082:5083   */\n      dup1\n        /* \"#utility.yul\":5075:5087   */\n      revert\n        /* \"#utility.yul\":5099:5279   */\n    tag_251:\n        /* \"#utility.yul\":5147:5224   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5144:5145   */\n      0x00\n        /* \"#utility.yul\":5137:5225   */\n      mstore\n        /* \"#utility.yul\":5244:5248   */\n      0x41\n        /* \"#utility.yul\":5241:5242   */\n      0x04\n        /* \"#utility.yul\":5234:5249   */\n      mstore\n        /* \"#utility.yul\":5268:5272   */\n      0x24\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5273   */\n      revert\n        /* \"#utility.yul\":5285:5566   */\n    tag_252:\n        /* \"#utility.yul\":5368:5395   */\n      tag_348\n        /* \"#utility.yul\":5390:5394   */\n      dup3\n        /* \"#utility.yul\":5368:5395   */\n      tag_232\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5360:5366   */\n      dup2\n        /* \"#utility.yul\":5356:5396   */\n      add\n        /* \"#utility.yul\":5498:5504   */\n      dup2\n        /* \"#utility.yul\":5486:5496   */\n      dup2\n        /* \"#utility.yul\":5483:5505   */\n      lt\n        /* \"#utility.yul\":5462:5480   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5450:5460   */\n      dup3\n        /* \"#utility.yul\":5447:5481   */\n      gt\n        /* \"#utility.yul\":5444:5506   */\n      or\n        /* \"#utility.yul\":5441:5529   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5509:5527   */\n      tag_350\n      tag_251\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5441:5529   */\n    tag_349:\n        /* \"#utility.yul\":5549:5559   */\n      dup1\n        /* \"#utility.yul\":5545:5547   */\n      0x40\n        /* \"#utility.yul\":5538:5560   */\n      mstore\n        /* \"#utility.yul\":5328:5566   */\n      pop\n        /* \"#utility.yul\":5285:5566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5572:5701   */\n    tag_253:\n        /* \"#utility.yul\":5606:5612   */\n      0x00\n        /* \"#utility.yul\":5633:5653   */\n      tag_352\n      tag_234\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5623:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5662:5695   */\n      tag_353\n        /* \"#utility.yul\":5690:5694   */\n      dup3\n        /* \"#utility.yul\":5682:5688   */\n      dup3\n        /* \"#utility.yul\":5662:5695   */\n      tag_252\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5572:5701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5707:6015   */\n    tag_254:\n        /* \"#utility.yul\":5769:5773   */\n      0x00\n        /* \"#utility.yul\":5859:5877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5851:5857   */\n      dup3\n        /* \"#utility.yul\":5848:5878   */\n      gt\n        /* \"#utility.yul\":5845:5901   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5881:5899   */\n      tag_356\n      tag_251\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5845:5901   */\n    tag_355:\n        /* \"#utility.yul\":5919:5948   */\n      tag_357\n        /* \"#utility.yul\":5941:5947   */\n      dup3\n        /* \"#utility.yul\":5919:5948   */\n      tag_232\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5911:5948   */\n      swap1\n      pop\n        /* \"#utility.yul\":6003:6007   */\n      0x20\n        /* \"#utility.yul\":5997:6001   */\n      dup2\n        /* \"#utility.yul\":5993:6008   */\n      add\n        /* \"#utility.yul\":5985:6008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5707:6015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6021:6167   */\n    tag_255:\n        /* \"#utility.yul\":6118:6124   */\n      dup3\n        /* \"#utility.yul\":6113:6116   */\n      dup2\n        /* \"#utility.yul\":6108:6111   */\n      dup4\n        /* \"#utility.yul\":6095:6125   */\n      calldatacopy\n        /* \"#utility.yul\":6159:6160   */\n      0x00\n        /* \"#utility.yul\":6150:6156   */\n      dup4\n        /* \"#utility.yul\":6145:6148   */\n      dup4\n        /* \"#utility.yul\":6141:6157   */\n      add\n        /* \"#utility.yul\":6134:6161   */\n      mstore\n        /* \"#utility.yul\":6021:6167   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6173:6598   */\n    tag_256:\n        /* \"#utility.yul\":6251:6256   */\n      0x00\n        /* \"#utility.yul\":6276:6342   */\n      tag_360\n        /* \"#utility.yul\":6292:6341   */\n      tag_361\n        /* \"#utility.yul\":6334:6340   */\n      dup5\n        /* \"#utility.yul\":6292:6341   */\n      tag_254\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6276:6342   */\n      tag_253\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6267:6342   */\n      swap1\n      pop\n        /* \"#utility.yul\":6365:6371   */\n      dup3\n        /* \"#utility.yul\":6358:6363   */\n      dup2\n        /* \"#utility.yul\":6351:6372   */\n      mstore\n        /* \"#utility.yul\":6403:6407   */\n      0x20\n        /* \"#utility.yul\":6396:6401   */\n      dup2\n        /* \"#utility.yul\":6392:6408   */\n      add\n        /* \"#utility.yul\":6441:6444   */\n      dup5\n        /* \"#utility.yul\":6432:6438   */\n      dup5\n        /* \"#utility.yul\":6427:6430   */\n      dup5\n        /* \"#utility.yul\":6423:6439   */\n      add\n        /* \"#utility.yul\":6420:6445   */\n      gt\n        /* \"#utility.yul\":6417:6529   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6448:6527   */\n      tag_363\n      tag_250\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6417:6529   */\n    tag_362:\n        /* \"#utility.yul\":6538:6592   */\n      tag_364\n        /* \"#utility.yul\":6585:6591   */\n      dup5\n        /* \"#utility.yul\":6580:6583   */\n      dup3\n        /* \"#utility.yul\":6575:6578   */\n      dup6\n        /* \"#utility.yul\":6538:6592   */\n      tag_255\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6257:6598   */\n      pop\n        /* \"#utility.yul\":6173:6598   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6618:6958   */\n    tag_257:\n        /* \"#utility.yul\":6674:6679   */\n      0x00\n        /* \"#utility.yul\":6723:6726   */\n      dup3\n        /* \"#utility.yul\":6716:6720   */\n      0x1f\n        /* \"#utility.yul\":6708:6714   */\n      dup4\n        /* \"#utility.yul\":6704:6721   */\n      add\n        /* \"#utility.yul\":6700:6727   */\n      slt\n        /* \"#utility.yul\":6690:6812   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":6731:6810   */\n      tag_367\n      tag_249\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6690:6812   */\n    tag_366:\n        /* \"#utility.yul\":6848:6854   */\n      dup2\n        /* \"#utility.yul\":6835:6855   */\n      calldataload\n        /* \"#utility.yul\":6873:6952   */\n      tag_368\n        /* \"#utility.yul\":6948:6951   */\n      dup5\n        /* \"#utility.yul\":6940:6946   */\n      dup3\n        /* \"#utility.yul\":6933:6937   */\n      0x20\n        /* \"#utility.yul\":6925:6931   */\n      dup7\n        /* \"#utility.yul\":6921:6938   */\n      add\n        /* \"#utility.yul\":6873:6952   */\n      tag_256\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6864:6952   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6958   */\n      pop\n        /* \"#utility.yul\":6618:6958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6964:7798   */\n    tag_54:\n        /* \"#utility.yul\":7052:7058   */\n      0x00\n        /* \"#utility.yul\":7060:7066   */\n      dup1\n        /* \"#utility.yul\":7109:7111   */\n      0x40\n        /* \"#utility.yul\":7097:7106   */\n      dup4\n        /* \"#utility.yul\":7088:7095   */\n      dup6\n        /* \"#utility.yul\":7084:7107   */\n      sub\n        /* \"#utility.yul\":7080:7112   */\n      slt\n        /* \"#utility.yul\":7077:7196   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7115:7194   */\n      tag_371\n      tag_235\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7077:7196   */\n    tag_370:\n        /* \"#utility.yul\":7263:7264   */\n      0x00\n        /* \"#utility.yul\":7252:7261   */\n      dup4\n        /* \"#utility.yul\":7248:7265   */\n      add\n        /* \"#utility.yul\":7235:7266   */\n      calldataload\n        /* \"#utility.yul\":7293:7311   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7285:7291   */\n      dup2\n        /* \"#utility.yul\":7282:7312   */\n      gt\n        /* \"#utility.yul\":7279:7396   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":7315:7394   */\n      tag_373\n      tag_236\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7279:7396   */\n    tag_372:\n        /* \"#utility.yul\":7420:7483   */\n      tag_374\n        /* \"#utility.yul\":7475:7482   */\n      dup6\n        /* \"#utility.yul\":7466:7472   */\n      dup3\n        /* \"#utility.yul\":7455:7464   */\n      dup7\n        /* \"#utility.yul\":7451:7473   */\n      add\n        /* \"#utility.yul\":7420:7483   */\n      tag_257\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7410:7483   */\n      swap3\n      pop\n        /* \"#utility.yul\":7206:7493   */\n      pop\n        /* \"#utility.yul\":7560:7562   */\n      0x20\n        /* \"#utility.yul\":7549:7558   */\n      dup4\n        /* \"#utility.yul\":7545:7563   */\n      add\n        /* \"#utility.yul\":7532:7564   */\n      calldataload\n        /* \"#utility.yul\":7591:7609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7583:7589   */\n      dup2\n        /* \"#utility.yul\":7580:7610   */\n      gt\n        /* \"#utility.yul\":7577:7694   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7613:7692   */\n      tag_376\n      tag_236\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7577:7694   */\n    tag_375:\n        /* \"#utility.yul\":7718:7781   */\n      tag_377\n        /* \"#utility.yul\":7773:7780   */\n      dup6\n        /* \"#utility.yul\":7764:7770   */\n      dup3\n        /* \"#utility.yul\":7753:7762   */\n      dup7\n        /* \"#utility.yul\":7749:7771   */\n      add\n        /* \"#utility.yul\":7718:7781   */\n      tag_257\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7708:7781   */\n      swap2\n      pop\n        /* \"#utility.yul\":7503:7791   */\n      pop\n        /* \"#utility.yul\":6964:7798   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7804:8133   */\n    tag_64:\n        /* \"#utility.yul\":7863:7869   */\n      0x00\n        /* \"#utility.yul\":7912:7914   */\n      0x20\n        /* \"#utility.yul\":7900:7909   */\n      dup3\n        /* \"#utility.yul\":7891:7898   */\n      dup5\n        /* \"#utility.yul\":7887:7910   */\n      sub\n        /* \"#utility.yul\":7883:7915   */\n      slt\n        /* \"#utility.yul\":7880:7999   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7918:7997   */\n      tag_380\n      tag_235\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7880:7999   */\n    tag_379:\n        /* \"#utility.yul\":8038:8039   */\n      0x00\n        /* \"#utility.yul\":8063:8116   */\n      tag_381\n        /* \"#utility.yul\":8108:8115   */\n      dup5\n        /* \"#utility.yul\":8099:8105   */\n      dup3\n        /* \"#utility.yul\":8088:8097   */\n      dup6\n        /* \"#utility.yul\":8084:8106   */\n      add\n        /* \"#utility.yul\":8063:8116   */\n      tag_240\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8053:8116   */\n      swap2\n      pop\n        /* \"#utility.yul\":8009:8126   */\n      pop\n        /* \"#utility.yul\":7804:8133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8139:8257   */\n    tag_258:\n        /* \"#utility.yul\":8226:8250   */\n      tag_383\n        /* \"#utility.yul\":8244:8249   */\n      dup2\n        /* \"#utility.yul\":8226:8250   */\n      tag_238\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8221:8224   */\n      dup3\n        /* \"#utility.yul\":8214:8251   */\n      mstore\n        /* \"#utility.yul\":8139:8257   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8263:8485   */\n    tag_72:\n        /* \"#utility.yul\":8356:8360   */\n      0x00\n        /* \"#utility.yul\":8394:8396   */\n      0x20\n        /* \"#utility.yul\":8383:8392   */\n      dup3\n        /* \"#utility.yul\":8379:8397   */\n      add\n        /* \"#utility.yul\":8371:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8407:8478   */\n      tag_385\n        /* \"#utility.yul\":8475:8476   */\n      0x00\n        /* \"#utility.yul\":8464:8473   */\n      dup4\n        /* \"#utility.yul\":8460:8477   */\n      add\n        /* \"#utility.yul\":8451:8457   */\n      dup5\n        /* \"#utility.yul\":8407:8478   */\n      tag_258\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8263:8485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8491:8965   */\n    tag_84:\n        /* \"#utility.yul\":8559:8565   */\n      0x00\n        /* \"#utility.yul\":8567:8573   */\n      dup1\n        /* \"#utility.yul\":8616:8618   */\n      0x40\n        /* \"#utility.yul\":8604:8613   */\n      dup4\n        /* \"#utility.yul\":8595:8602   */\n      dup6\n        /* \"#utility.yul\":8591:8614   */\n      sub\n        /* \"#utility.yul\":8587:8619   */\n      slt\n        /* \"#utility.yul\":8584:8703   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8622:8701   */\n      tag_388\n      tag_235\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8584:8703   */\n    tag_387:\n        /* \"#utility.yul\":8742:8743   */\n      0x00\n        /* \"#utility.yul\":8767:8820   */\n      tag_389\n        /* \"#utility.yul\":8812:8819   */\n      dup6\n        /* \"#utility.yul\":8803:8809   */\n      dup3\n        /* \"#utility.yul\":8792:8801   */\n      dup7\n        /* \"#utility.yul\":8788:8810   */\n      add\n        /* \"#utility.yul\":8767:8820   */\n      tag_240\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8757:8820   */\n      swap3\n      pop\n        /* \"#utility.yul\":8713:8830   */\n      pop\n        /* \"#utility.yul\":8869:8871   */\n      0x20\n        /* \"#utility.yul\":8895:8948   */\n      tag_390\n        /* \"#utility.yul\":8940:8947   */\n      dup6\n        /* \"#utility.yul\":8931:8937   */\n      dup3\n        /* \"#utility.yul\":8920:8929   */\n      dup7\n        /* \"#utility.yul\":8916:8938   */\n      add\n        /* \"#utility.yul\":8895:8948   */\n      tag_240\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8885:8948   */\n      swap2\n      pop\n        /* \"#utility.yul\":8840:8958   */\n      pop\n        /* \"#utility.yul\":8491:8965   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8971:9151   */\n    tag_259:\n        /* \"#utility.yul\":9019:9096   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9016:9017   */\n      0x00\n        /* \"#utility.yul\":9009:9097   */\n      mstore\n        /* \"#utility.yul\":9116:9120   */\n      0x22\n        /* \"#utility.yul\":9113:9114   */\n      0x04\n        /* \"#utility.yul\":9106:9121   */\n      mstore\n        /* \"#utility.yul\":9140:9144   */\n      0x24\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9130:9145   */\n      revert\n        /* \"#utility.yul\":9157:9477   */\n    tag_92:\n        /* \"#utility.yul\":9201:9207   */\n      0x00\n        /* \"#utility.yul\":9238:9239   */\n      0x02\n        /* \"#utility.yul\":9232:9236   */\n      dup3\n        /* \"#utility.yul\":9228:9240   */\n      div\n        /* \"#utility.yul\":9218:9240   */\n      swap1\n      pop\n        /* \"#utility.yul\":9285:9286   */\n      0x01\n        /* \"#utility.yul\":9279:9283   */\n      dup3\n        /* \"#utility.yul\":9275:9287   */\n      and\n        /* \"#utility.yul\":9306:9324   */\n      dup1\n        /* \"#utility.yul\":9296:9377   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":9362:9366   */\n      0x7f\n        /* \"#utility.yul\":9354:9360   */\n      dup3\n        /* \"#utility.yul\":9350:9367   */\n      and\n        /* \"#utility.yul\":9340:9367   */\n      swap2\n      pop\n        /* \"#utility.yul\":9296:9377   */\n    tag_393:\n        /* \"#utility.yul\":9424:9426   */\n      0x20\n        /* \"#utility.yul\":9416:9422   */\n      dup3\n        /* \"#utility.yul\":9413:9427   */\n      lt\n        /* \"#utility.yul\":9393:9411   */\n      dup2\n        /* \"#utility.yul\":9390:9428   */\n      sub\n        /* \"#utility.yul\":9387:9471   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":9443:9461   */\n      tag_395\n      tag_259\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9387:9471   */\n    tag_394:\n        /* \"#utility.yul\":9208:9477   */\n      pop\n        /* \"#utility.yul\":9157:9477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9483:9649   */\n    tag_260:\n        /* \"#utility.yul\":9623:9641   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":9619:9620   */\n      0x00\n        /* \"#utility.yul\":9611:9617   */\n      dup3\n        /* \"#utility.yul\":9607:9621   */\n      add\n        /* \"#utility.yul\":9600:9642   */\n      mstore\n        /* \"#utility.yul\":9483:9649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9655:10021   */\n    tag_261:\n        /* \"#utility.yul\":9797:9800   */\n      0x00\n        /* \"#utility.yul\":9818:9885   */\n      tag_398\n        /* \"#utility.yul\":9882:9884   */\n      0x10\n        /* \"#utility.yul\":9877:9880   */\n      dup4\n        /* \"#utility.yul\":9818:9885   */\n      tag_230\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9811:9885   */\n      swap2\n      pop\n        /* \"#utility.yul\":9894:9987   */\n      tag_399\n        /* \"#utility.yul\":9983:9986   */\n      dup3\n        /* \"#utility.yul\":9894:9987   */\n      tag_260\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10012:10014   */\n      0x20\n        /* \"#utility.yul\":10007:10010   */\n      dup3\n        /* \"#utility.yul\":10003:10015   */\n      add\n        /* \"#utility.yul\":9996:10015   */\n      swap1\n      pop\n        /* \"#utility.yul\":9655:10021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10446   */\n    tag_105:\n        /* \"#utility.yul\":10193:10197   */\n      0x00\n        /* \"#utility.yul\":10231:10233   */\n      0x20\n        /* \"#utility.yul\":10220:10229   */\n      dup3\n        /* \"#utility.yul\":10216:10234   */\n      add\n        /* \"#utility.yul\":10208:10234   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10289   */\n      dup2\n        /* \"#utility.yul\":10274:10278   */\n      dup2\n        /* \"#utility.yul\":10270:10290   */\n      sub\n        /* \"#utility.yul\":10266:10267   */\n      0x00\n        /* \"#utility.yul\":10255:10264   */\n      dup4\n        /* \"#utility.yul\":10251:10268   */\n      add\n        /* \"#utility.yul\":10244:10291   */\n      mstore\n        /* \"#utility.yul\":10308:10439   */\n      tag_401\n        /* \"#utility.yul\":10434:10438   */\n      dup2\n        /* \"#utility.yul\":10308:10439   */\n      tag_261\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10300:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10027:10446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10452:10672   */\n    tag_262:\n        /* \"#utility.yul\":10592:10626   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":10588:10589   */\n      0x00\n        /* \"#utility.yul\":10580:10586   */\n      dup3\n        /* \"#utility.yul\":10576:10590   */\n      add\n        /* \"#utility.yul\":10569:10627   */\n      mstore\n        /* \"#utility.yul\":10661:10664   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10656:10658   */\n      0x20\n        /* \"#utility.yul\":10648:10654   */\n      dup3\n        /* \"#utility.yul\":10644:10659   */\n      add\n        /* \"#utility.yul\":10637:10665   */\n      mstore\n        /* \"#utility.yul\":10452:10672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10678:11044   */\n    tag_263:\n        /* \"#utility.yul\":10820:10823   */\n      0x00\n        /* \"#utility.yul\":10841:10908   */\n      tag_404\n        /* \"#utility.yul\":10905:10907   */\n      0x21\n        /* \"#utility.yul\":10900:10903   */\n      dup4\n        /* \"#utility.yul\":10841:10908   */\n      tag_230\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10834:10908   */\n      swap2\n      pop\n        /* \"#utility.yul\":10917:11010   */\n      tag_405\n        /* \"#utility.yul\":11006:11009   */\n      dup3\n        /* \"#utility.yul\":10917:11010   */\n      tag_262\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11035:11037   */\n      0x40\n        /* \"#utility.yul\":11030:11033   */\n      dup3\n        /* \"#utility.yul\":11026:11038   */\n      add\n        /* \"#utility.yul\":11019:11038   */\n      swap1\n      pop\n        /* \"#utility.yul\":10678:11044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11050:11469   */\n    tag_117:\n        /* \"#utility.yul\":11216:11220   */\n      0x00\n        /* \"#utility.yul\":11254:11256   */\n      0x20\n        /* \"#utility.yul\":11243:11252   */\n      dup3\n        /* \"#utility.yul\":11239:11257   */\n      add\n        /* \"#utility.yul\":11231:11257   */\n      swap1\n      pop\n        /* \"#utility.yul\":11303:11312   */\n      dup2\n        /* \"#utility.yul\":11297:11301   */\n      dup2\n        /* \"#utility.yul\":11293:11313   */\n      sub\n        /* \"#utility.yul\":11289:11290   */\n      0x00\n        /* \"#utility.yul\":11278:11287   */\n      dup4\n        /* \"#utility.yul\":11274:11291   */\n      add\n        /* \"#utility.yul\":11267:11314   */\n      mstore\n        /* \"#utility.yul\":11331:11462   */\n      tag_407\n        /* \"#utility.yul\":11457:11461   */\n      dup2\n        /* \"#utility.yul\":11331:11462   */\n      tag_263\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11323:11462   */\n      swap1\n      pop\n        /* \"#utility.yul\":11050:11469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11475:11616   */\n    tag_264:\n        /* \"#utility.yul\":11524:11528   */\n      0x00\n        /* \"#utility.yul\":11547:11550   */\n      dup2\n        /* \"#utility.yul\":11539:11550   */\n      swap1\n      pop\n        /* \"#utility.yul\":11570:11573   */\n      dup2\n        /* \"#utility.yul\":11567:11568   */\n      0x00\n        /* \"#utility.yul\":11560:11574   */\n      mstore\n        /* \"#utility.yul\":11604:11608   */\n      0x20\n        /* \"#utility.yul\":11601:11602   */\n      0x00\n        /* \"#utility.yul\":11591:11609   */\n      keccak256\n        /* \"#utility.yul\":11583:11609   */\n      swap1\n      pop\n        /* \"#utility.yul\":11475:11616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11622:11715   */\n    tag_265:\n        /* \"#utility.yul\":11659:11665   */\n      0x00\n        /* \"#utility.yul\":11706:11708   */\n      0x20\n        /* \"#utility.yul\":11701:11703   */\n      0x1f\n        /* \"#utility.yul\":11694:11699   */\n      dup4\n        /* \"#utility.yul\":11690:11704   */\n      add\n        /* \"#utility.yul\":11686:11709   */\n      div\n        /* \"#utility.yul\":11676:11709   */\n      swap1\n      pop\n        /* \"#utility.yul\":11622:11715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11721:11828   */\n    tag_266:\n        /* \"#utility.yul\":11765:11773   */\n      0x00\n        /* \"#utility.yul\":11815:11820   */\n      dup3\n        /* \"#utility.yul\":11809:11813   */\n      dup3\n        /* \"#utility.yul\":11805:11821   */\n      shl\n        /* \"#utility.yul\":11784:11821   */\n      swap1\n      pop\n        /* \"#utility.yul\":11721:11828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11834:12227   */\n    tag_267:\n        /* \"#utility.yul\":11903:11909   */\n      0x00\n        /* \"#utility.yul\":11953:11954   */\n      0x08\n        /* \"#utility.yul\":11941:11951   */\n      dup4\n        /* \"#utility.yul\":11937:11955   */\n      mul\n        /* \"#utility.yul\":11976:12073   */\n      tag_412\n        /* \"#utility.yul\":12006:12072   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11995:12004   */\n      dup3\n        /* \"#utility.yul\":11976:12073   */\n      tag_266\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12094:12133   */\n      tag_413\n        /* \"#utility.yul\":12124:12132   */\n      dup7\n        /* \"#utility.yul\":12113:12122   */\n      dup4\n        /* \"#utility.yul\":12094:12133   */\n      tag_266\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12082:12133   */\n      swap6\n      pop\n        /* \"#utility.yul\":12166:12170   */\n      dup1\n        /* \"#utility.yul\":12162:12171   */\n      not\n        /* \"#utility.yul\":12155:12160   */\n      dup5\n        /* \"#utility.yul\":12151:12172   */\n      and\n        /* \"#utility.yul\":12142:12172   */\n      swap4\n      pop\n        /* \"#utility.yul\":12215:12219   */\n      dup1\n        /* \"#utility.yul\":12205:12213   */\n      dup7\n        /* \"#utility.yul\":12201:12220   */\n      and\n        /* \"#utility.yul\":12194:12199   */\n      dup5\n        /* \"#utility.yul\":12191:12221   */\n      or\n        /* \"#utility.yul\":12181:12221   */\n      swap3\n      pop\n        /* \"#utility.yul\":11910:12227   */\n      pop\n      pop\n        /* \"#utility.yul\":11834:12227   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12233:12293   */\n    tag_268:\n        /* \"#utility.yul\":12261:12264   */\n      0x00\n        /* \"#utility.yul\":12282:12287   */\n      dup2\n        /* \"#utility.yul\":12275:12287   */\n      swap1\n      pop\n        /* \"#utility.yul\":12233:12293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12299:12441   */\n    tag_269:\n        /* \"#utility.yul\":12349:12358   */\n      0x00\n        /* \"#utility.yul\":12382:12435   */\n      tag_416\n        /* \"#utility.yul\":12400:12434   */\n      tag_417\n        /* \"#utility.yul\":12409:12433   */\n      tag_418\n        /* \"#utility.yul\":12427:12432   */\n      dup5\n        /* \"#utility.yul\":12409:12433   */\n      tag_241\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12400:12434   */\n      tag_268\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12382:12435   */\n      tag_241\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12369:12435   */\n      swap1\n      pop\n        /* \"#utility.yul\":12299:12441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12447:12522   */\n    tag_270:\n        /* \"#utility.yul\":12490:12493   */\n      0x00\n        /* \"#utility.yul\":12511:12516   */\n      dup2\n        /* \"#utility.yul\":12504:12516   */\n      swap1\n      pop\n        /* \"#utility.yul\":12447:12522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12528:12797   */\n    tag_271:\n        /* \"#utility.yul\":12638:12677   */\n      tag_421\n        /* \"#utility.yul\":12669:12676   */\n      dup4\n        /* \"#utility.yul\":12638:12677   */\n      tag_269\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12699:12790   */\n      tag_422\n        /* \"#utility.yul\":12748:12789   */\n      tag_423\n        /* \"#utility.yul\":12772:12788   */\n      dup3\n        /* \"#utility.yul\":12748:12789   */\n      tag_270\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12740:12746   */\n      dup5\n        /* \"#utility.yul\":12733:12737   */\n      dup5\n        /* \"#utility.yul\":12727:12738   */\n      sload\n        /* \"#utility.yul\":12699:12790   */\n      tag_267\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12693:12697   */\n      dup3\n        /* \"#utility.yul\":12686:12791   */\n      sstore\n        /* \"#utility.yul\":12604:12797   */\n      pop\n        /* \"#utility.yul\":12528:12797   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:12876   */\n    tag_272:\n        /* \"#utility.yul\":12848:12851   */\n      0x00\n        /* \"#utility.yul\":12803:12876   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12882:13071   */\n    tag_273:\n        /* \"#utility.yul\":12959:12991   */\n      tag_426\n      tag_272\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13000:13065   */\n      tag_427\n        /* \"#utility.yul\":13058:13064   */\n      dup2\n        /* \"#utility.yul\":13050:13056   */\n      dup5\n        /* \"#utility.yul\":13044:13048   */\n      dup5\n        /* \"#utility.yul\":13000:13065   */\n      tag_271\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12935:13071   */\n      pop\n        /* \"#utility.yul\":12882:13071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13077:13263   */\n    tag_274:\n        /* \"#utility.yul\":13137:13257   */\n    tag_429:\n        /* \"#utility.yul\":13154:13157   */\n      dup2\n        /* \"#utility.yul\":13147:13152   */\n      dup2\n        /* \"#utility.yul\":13144:13158   */\n      lt\n        /* \"#utility.yul\":13137:13257   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":13208:13247   */\n      tag_432\n        /* \"#utility.yul\":13245:13246   */\n      0x00\n        /* \"#utility.yul\":13238:13243   */\n      dup3\n        /* \"#utility.yul\":13208:13247   */\n      tag_273\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13181:13182   */\n      0x01\n        /* \"#utility.yul\":13174:13179   */\n      dup2\n        /* \"#utility.yul\":13170:13183   */\n      add\n        /* \"#utility.yul\":13161:13183   */\n      swap1\n      pop\n        /* \"#utility.yul\":13137:13257   */\n      jump(tag_429)\n    tag_431:\n        /* \"#utility.yul\":13077:13263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13269:13812   */\n    tag_275:\n        /* \"#utility.yul\":13370:13372   */\n      0x1f\n        /* \"#utility.yul\":13365:13368   */\n      dup3\n        /* \"#utility.yul\":13362:13373   */\n      gt\n        /* \"#utility.yul\":13359:13805   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":13404:13442   */\n      tag_435\n        /* \"#utility.yul\":13436:13441   */\n      dup2\n        /* \"#utility.yul\":13404:13442   */\n      tag_264\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13488:13517   */\n      tag_436\n        /* \"#utility.yul\":13506:13516   */\n      dup5\n        /* \"#utility.yul\":13488:13517   */\n      tag_265\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13478:13486   */\n      dup2\n        /* \"#utility.yul\":13474:13518   */\n      add\n        /* \"#utility.yul\":13671:13673   */\n      0x20\n        /* \"#utility.yul\":13659:13669   */\n      dup6\n        /* \"#utility.yul\":13656:13674   */\n      lt\n        /* \"#utility.yul\":13653:13702   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":13692:13700   */\n      dup2\n        /* \"#utility.yul\":13677:13700   */\n      swap1\n      pop\n        /* \"#utility.yul\":13653:13702   */\n    tag_437:\n        /* \"#utility.yul\":13715:13795   */\n      tag_438\n        /* \"#utility.yul\":13771:13793   */\n      tag_439\n        /* \"#utility.yul\":13789:13792   */\n      dup6\n        /* \"#utility.yul\":13771:13793   */\n      tag_265\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13761:13769   */\n      dup4\n        /* \"#utility.yul\":13757:13794   */\n      add\n        /* \"#utility.yul\":13744:13755   */\n      dup3\n        /* \"#utility.yul\":13715:13795   */\n      tag_274\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13374:13805   */\n      pop\n      pop\n        /* \"#utility.yul\":13359:13805   */\n    tag_434:\n        /* \"#utility.yul\":13269:13812   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13818:13935   */\n    tag_276:\n        /* \"#utility.yul\":13872:13880   */\n      0x00\n        /* \"#utility.yul\":13922:13927   */\n      dup3\n        /* \"#utility.yul\":13916:13920   */\n      dup3\n        /* \"#utility.yul\":13912:13928   */\n      shr\n        /* \"#utility.yul\":13891:13928   */\n      swap1\n      pop\n        /* \"#utility.yul\":13818:13935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13941:14110   */\n    tag_277:\n        /* \"#utility.yul\":13985:13991   */\n      0x00\n        /* \"#utility.yul\":14018:14069   */\n      tag_442\n        /* \"#utility.yul\":14066:14067   */\n      0x00\n        /* \"#utility.yul\":14062:14068   */\n      not\n        /* \"#utility.yul\":14054:14059   */\n      dup5\n        /* \"#utility.yul\":14051:14052   */\n      0x08\n        /* \"#utility.yul\":14047:14060   */\n      mul\n        /* \"#utility.yul\":14018:14069   */\n      tag_276\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14014:14070   */\n      not\n        /* \"#utility.yul\":14099:14103   */\n      dup1\n        /* \"#utility.yul\":14093:14097   */\n      dup4\n        /* \"#utility.yul\":14089:14104   */\n      and\n        /* \"#utility.yul\":14079:14104   */\n      swap2\n      pop\n        /* \"#utility.yul\":13992:14110   */\n      pop\n        /* \"#utility.yul\":13941:14110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14115:14410   */\n    tag_278:\n        /* \"#utility.yul\":14191:14195   */\n      0x00\n        /* \"#utility.yul\":14337:14366   */\n      tag_444\n        /* \"#utility.yul\":14362:14365   */\n      dup4\n        /* \"#utility.yul\":14356:14360   */\n      dup4\n        /* \"#utility.yul\":14337:14366   */\n      tag_277\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14329:14366   */\n      swap2\n      pop\n        /* \"#utility.yul\":14399:14402   */\n      dup3\n        /* \"#utility.yul\":14396:14397   */\n      0x02\n        /* \"#utility.yul\":14392:14403   */\n      mul\n        /* \"#utility.yul\":14386:14390   */\n      dup3\n        /* \"#utility.yul\":14383:14404   */\n      or\n        /* \"#utility.yul\":14375:14404   */\n      swap1\n      pop\n        /* \"#utility.yul\":14115:14410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14415:15810   */\n    tag_133:\n        /* \"#utility.yul\":14532:14569   */\n      tag_446\n        /* \"#utility.yul\":14565:14568   */\n      dup3\n        /* \"#utility.yul\":14532:14569   */\n      tag_229\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14634:14652   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14626:14632   */\n      dup2\n        /* \"#utility.yul\":14623:14653   */\n      gt\n        /* \"#utility.yul\":14620:14676   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":14656:14674   */\n      tag_448\n      tag_251\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14620:14676   */\n    tag_447:\n        /* \"#utility.yul\":14700:14738   */\n      tag_449\n        /* \"#utility.yul\":14732:14736   */\n      dup3\n        /* \"#utility.yul\":14726:14737   */\n      sload\n        /* \"#utility.yul\":14700:14738   */\n      tag_92\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14785:14852   */\n      tag_450\n        /* \"#utility.yul\":14845:14851   */\n      dup3\n        /* \"#utility.yul\":14837:14843   */\n      dup3\n        /* \"#utility.yul\":14831:14835   */\n      dup6\n        /* \"#utility.yul\":14785:14852   */\n      tag_275\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14879:14880   */\n      0x00\n        /* \"#utility.yul\":14903:14907   */\n      0x20\n        /* \"#utility.yul\":14890:14907   */\n      swap1\n      pop\n        /* \"#utility.yul\":14935:14937   */\n      0x1f\n        /* \"#utility.yul\":14927:14933   */\n      dup4\n        /* \"#utility.yul\":14924:14938   */\n      gt\n        /* \"#utility.yul\":14952:14953   */\n      0x01\n        /* \"#utility.yul\":14947:15565   */\n      dup2\n      eq\n      tag_452\n      jumpi\n        /* \"#utility.yul\":15609:15610   */\n      0x00\n        /* \"#utility.yul\":15626:15632   */\n      dup5\n        /* \"#utility.yul\":15623:15700   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":15675:15684   */\n      dup3\n        /* \"#utility.yul\":15670:15673   */\n      dup8\n        /* \"#utility.yul\":15666:15685   */\n      add\n        /* \"#utility.yul\":15660:15686   */\n      mload\n        /* \"#utility.yul\":15651:15686   */\n      swap1\n      pop\n        /* \"#utility.yul\":15623:15700   */\n    tag_453:\n        /* \"#utility.yul\":15726:15793   */\n      tag_454\n        /* \"#utility.yul\":15786:15792   */\n      dup6\n        /* \"#utility.yul\":15779:15784   */\n      dup3\n        /* \"#utility.yul\":15726:15793   */\n      tag_278\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15720:15724   */\n      dup7\n        /* \"#utility.yul\":15713:15794   */\n      sstore\n        /* \"#utility.yul\":15582:15804   */\n      pop\n        /* \"#utility.yul\":14917:15804   */\n      jump(tag_451)\n        /* \"#utility.yul\":14947:15565   */\n    tag_452:\n        /* \"#utility.yul\":14999:15003   */\n      0x1f\n        /* \"#utility.yul\":14995:15004   */\n      not\n        /* \"#utility.yul\":14987:14993   */\n      dup5\n        /* \"#utility.yul\":14983:15005   */\n      and\n        /* \"#utility.yul\":15033:15070   */\n      tag_455\n        /* \"#utility.yul\":15065:15069   */\n      dup7\n        /* \"#utility.yul\":15033:15070   */\n      tag_264\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15092:15093   */\n      0x00\n        /* \"#utility.yul\":15106:15314   */\n    tag_456:\n        /* \"#utility.yul\":15120:15127   */\n      dup3\n        /* \"#utility.yul\":15117:15118   */\n      dup2\n        /* \"#utility.yul\":15114:15128   */\n      lt\n        /* \"#utility.yul\":15106:15314   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":15199:15208   */\n      dup5\n        /* \"#utility.yul\":15194:15197   */\n      dup10\n        /* \"#utility.yul\":15190:15209   */\n      add\n        /* \"#utility.yul\":15184:15210   */\n      mload\n        /* \"#utility.yul\":15176:15182   */\n      dup3\n        /* \"#utility.yul\":15169:15211   */\n      sstore\n        /* \"#utility.yul\":15250:15251   */\n      0x01\n        /* \"#utility.yul\":15242:15248   */\n      dup3\n        /* \"#utility.yul\":15238:15252   */\n      add\n        /* \"#utility.yul\":15228:15252   */\n      swap2\n      pop\n        /* \"#utility.yul\":15297:15299   */\n      0x20\n        /* \"#utility.yul\":15286:15295   */\n      dup6\n        /* \"#utility.yul\":15282:15300   */\n      add\n        /* \"#utility.yul\":15269:15300   */\n      swap5\n      pop\n        /* \"#utility.yul\":15143:15147   */\n      0x20\n        /* \"#utility.yul\":15140:15141   */\n      dup2\n        /* \"#utility.yul\":15136:15148   */\n      add\n        /* \"#utility.yul\":15131:15148   */\n      swap1\n      pop\n        /* \"#utility.yul\":15106:15314   */\n      jump(tag_456)\n    tag_458:\n        /* \"#utility.yul\":15342:15348   */\n      dup7\n        /* \"#utility.yul\":15333:15340   */\n      dup4\n        /* \"#utility.yul\":15330:15349   */\n      lt\n        /* \"#utility.yul\":15327:15506   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":15400:15409   */\n      dup5\n        /* \"#utility.yul\":15395:15398   */\n      dup10\n        /* \"#utility.yul\":15391:15410   */\n      add\n        /* \"#utility.yul\":15385:15411   */\n      mload\n        /* \"#utility.yul\":15443:15491   */\n      tag_460\n        /* \"#utility.yul\":15485:15489   */\n      0x1f\n        /* \"#utility.yul\":15477:15483   */\n      dup10\n        /* \"#utility.yul\":15473:15490   */\n      and\n        /* \"#utility.yul\":15462:15471   */\n      dup3\n        /* \"#utility.yul\":15443:15491   */\n      tag_277\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15435:15441   */\n      dup4\n        /* \"#utility.yul\":15428:15492   */\n      sstore\n        /* \"#utility.yul\":15350:15506   */\n      pop\n        /* \"#utility.yul\":15327:15506   */\n    tag_459:\n        /* \"#utility.yul\":15552:15553   */\n      0x01\n        /* \"#utility.yul\":15548:15549   */\n      0x02\n        /* \"#utility.yul\":15540:15546   */\n      dup9\n        /* \"#utility.yul\":15536:15550   */\n      mul\n        /* \"#utility.yul\":15532:15554   */\n      add\n        /* \"#utility.yul\":15526:15530   */\n      dup9\n        /* \"#utility.yul\":15519:15555   */\n      sstore\n        /* \"#utility.yul\":14954:15565   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14917:15804   */\n    tag_451:\n      pop\n        /* \"#utility.yul\":14507:15810   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14415:15810   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15816:15996   */\n    tag_279:\n        /* \"#utility.yul\":15864:15941   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15861:15862   */\n      0x00\n        /* \"#utility.yul\":15854:15942   */\n      mstore\n        /* \"#utility.yul\":15961:15965   */\n      0x11\n        /* \"#utility.yul\":15958:15959   */\n      0x04\n        /* \"#utility.yul\":15951:15966   */\n      mstore\n        /* \"#utility.yul\":15985:15989   */\n      0x24\n        /* \"#utility.yul\":15982:15983   */\n      0x00\n        /* \"#utility.yul\":15975:15990   */\n      revert\n        /* \"#utility.yul\":16002:16104   */\n    tag_280:\n        /* \"#utility.yul\":16044:16052   */\n      0x00\n        /* \"#utility.yul\":16091:16096   */\n      dup2\n        /* \"#utility.yul\":16088:16089   */\n      0x01\n        /* \"#utility.yul\":16084:16097   */\n      shr\n        /* \"#utility.yul\":16063:16097   */\n      swap1\n      pop\n        /* \"#utility.yul\":16002:16104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16110:16958   */\n    tag_281:\n        /* \"#utility.yul\":16171:16176   */\n      0x00\n        /* \"#utility.yul\":16178:16182   */\n      dup1\n        /* \"#utility.yul\":16202:16208   */\n      dup3\n        /* \"#utility.yul\":16193:16208   */\n      swap2\n      pop\n        /* \"#utility.yul\":16226:16231   */\n      dup4\n        /* \"#utility.yul\":16217:16231   */\n      swap1\n      pop\n        /* \"#utility.yul\":16240:16952   */\n    tag_464:\n        /* \"#utility.yul\":16261:16262   */\n      0x01\n        /* \"#utility.yul\":16251:16259   */\n      dup6\n        /* \"#utility.yul\":16248:16263   */\n      gt\n        /* \"#utility.yul\":16240:16952   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16356:16360   */\n      dup1\n        /* \"#utility.yul\":16351:16354   */\n      dup7\n        /* \"#utility.yul\":16347:16361   */\n      div\n        /* \"#utility.yul\":16341:16345   */\n      dup2\n        /* \"#utility.yul\":16338:16362   */\n      gt\n        /* \"#utility.yul\":16335:16385   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":16365:16383   */\n      tag_468\n      tag_279\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16335:16385   */\n    tag_467:\n        /* \"#utility.yul\":16415:16416   */\n      0x01\n        /* \"#utility.yul\":16405:16413   */\n      dup6\n        /* \"#utility.yul\":16401:16417   */\n      and\n        /* \"#utility.yul\":16398:16849   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":16830:16834   */\n      dup1\n        /* \"#utility.yul\":16823:16828   */\n      dup3\n        /* \"#utility.yul\":16819:16835   */\n      mul\n        /* \"#utility.yul\":16810:16835   */\n      swap2\n      pop\n        /* \"#utility.yul\":16398:16849   */\n    tag_469:\n        /* \"#utility.yul\":16880:16884   */\n      dup1\n        /* \"#utility.yul\":16874:16878   */\n      dup2\n        /* \"#utility.yul\":16870:16885   */\n      mul\n        /* \"#utility.yul\":16862:16885   */\n      swap1\n      pop\n        /* \"#utility.yul\":16910:16942   */\n      tag_470\n        /* \"#utility.yul\":16933:16941   */\n      dup6\n        /* \"#utility.yul\":16910:16942   */\n      tag_280\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16898:16942   */\n      swap5\n      pop\n        /* \"#utility.yul\":16240:16952   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":16110:16958   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16964:18037   */\n    tag_282:\n        /* \"#utility.yul\":17018:17023   */\n      0x00\n        /* \"#utility.yul\":17209:17217   */\n      dup3\n        /* \"#utility.yul\":17199:17239   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":17230:17231   */\n      0x01\n        /* \"#utility.yul\":17221:17231   */\n      swap1\n      pop\n        /* \"#utility.yul\":17232:17237   */\n      jump(tag_471)\n        /* \"#utility.yul\":17199:17239   */\n    tag_472:\n        /* \"#utility.yul\":17258:17262   */\n      dup2\n        /* \"#utility.yul\":17248:17284   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":17275:17276   */\n      0x00\n        /* \"#utility.yul\":17266:17276   */\n      swap1\n      pop\n        /* \"#utility.yul\":17277:17282   */\n      jump(tag_471)\n        /* \"#utility.yul\":17248:17284   */\n    tag_473:\n        /* \"#utility.yul\":17344:17348   */\n      dup2\n        /* \"#utility.yul\":17392:17393   */\n      0x01\n        /* \"#utility.yul\":17387:17414   */\n      dup2\n      eq\n      tag_475\n      jumpi\n        /* \"#utility.yul\":17428:17429   */\n      0x02\n        /* \"#utility.yul\":17423:17614   */\n      dup2\n      eq\n      tag_476\n      jumpi\n        /* \"#utility.yul\":17337:17614   */\n      jump(tag_474)\n        /* \"#utility.yul\":17387:17414   */\n    tag_475:\n        /* \"#utility.yul\":17405:17406   */\n      0x01\n        /* \"#utility.yul\":17396:17406   */\n      swap2\n      pop\n        /* \"#utility.yul\":17407:17412   */\n      pop\n      jump(tag_471)\n        /* \"#utility.yul\":17423:17614   */\n    tag_476:\n        /* \"#utility.yul\":17468:17471   */\n      0xff\n        /* \"#utility.yul\":17458:17466   */\n      dup5\n        /* \"#utility.yul\":17455:17472   */\n      gt\n        /* \"#utility.yul\":17452:17495   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":17475:17493   */\n      tag_478\n      tag_279\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17452:17495   */\n    tag_477:\n        /* \"#utility.yul\":17524:17532   */\n      dup4\n        /* \"#utility.yul\":17521:17522   */\n      0x02\n        /* \"#utility.yul\":17517:17533   */\n      exp\n        /* \"#utility.yul\":17508:17533   */\n      swap2\n      pop\n        /* \"#utility.yul\":17559:17562   */\n      dup5\n        /* \"#utility.yul\":17552:17557   */\n      dup3\n        /* \"#utility.yul\":17549:17563   */\n      gt\n        /* \"#utility.yul\":17546:17586   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":17566:17584   */\n      tag_480\n      tag_279\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17546:17586   */\n    tag_479:\n        /* \"#utility.yul\":17599:17604   */\n      pop\n      jump(tag_471)\n        /* \"#utility.yul\":17337:17614   */\n    tag_474:\n      pop\n        /* \"#utility.yul\":17723:17725   */\n      0x20\n        /* \"#utility.yul\":17713:17721   */\n      dup4\n        /* \"#utility.yul\":17710:17726   */\n      lt\n        /* \"#utility.yul\":17704:17707   */\n      0x0133\n        /* \"#utility.yul\":17698:17702   */\n      dup4\n        /* \"#utility.yul\":17695:17708   */\n      lt\n        /* \"#utility.yul\":17691:17727   */\n      and\n        /* \"#utility.yul\":17673:17675   */\n      0x4e\n        /* \"#utility.yul\":17663:17671   */\n      dup5\n        /* \"#utility.yul\":17660:17676   */\n      lt\n        /* \"#utility.yul\":17655:17657   */\n      0x0b\n        /* \"#utility.yul\":17649:17653   */\n      dup5\n        /* \"#utility.yul\":17646:17658   */\n      lt\n        /* \"#utility.yul\":17642:17677   */\n      and\n        /* \"#utility.yul\":17626:17737   */\n      or\n        /* \"#utility.yul\":17623:17869   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":17779:17787   */\n      dup3\n        /* \"#utility.yul\":17773:17777   */\n      dup3\n        /* \"#utility.yul\":17769:17788   */\n      exp\n        /* \"#utility.yul\":17760:17788   */\n      swap1\n      pop\n        /* \"#utility.yul\":17814:17817   */\n      dup4\n        /* \"#utility.yul\":17807:17812   */\n      dup2\n        /* \"#utility.yul\":17804:17818   */\n      gt\n        /* \"#utility.yul\":17801:17841   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":17821:17839   */\n      tag_483\n      tag_279\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17801:17841   */\n    tag_482:\n        /* \"#utility.yul\":17854:17859   */\n      jump(tag_471)\n        /* \"#utility.yul\":17623:17869   */\n    tag_481:\n        /* \"#utility.yul\":17894:17936   */\n      tag_484\n        /* \"#utility.yul\":17932:17935   */\n      dup5\n        /* \"#utility.yul\":17922:17930   */\n      dup5\n        /* \"#utility.yul\":17916:17920   */\n      dup5\n        /* \"#utility.yul\":17913:17914   */\n      0x01\n        /* \"#utility.yul\":17894:17936   */\n      tag_281\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17879:17936   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":17968:17972   */\n      dup2\n        /* \"#utility.yul\":17963:17966   */\n      dup5\n        /* \"#utility.yul\":17959:17973   */\n      div\n        /* \"#utility.yul\":17952:17957   */\n      dup2\n        /* \"#utility.yul\":17949:17974   */\n      gt\n        /* \"#utility.yul\":17946:17997   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":17977:17995   */\n      tag_486\n      tag_279\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":17946:17997   */\n    tag_485:\n        /* \"#utility.yul\":18026:18030   */\n      dup2\n        /* \"#utility.yul\":18019:18024   */\n      dup2\n        /* \"#utility.yul\":18015:18031   */\n      mul\n        /* \"#utility.yul\":18006:18031   */\n      swap1\n      pop\n        /* \"#utility.yul\":16964:18037   */\n    tag_471:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18043:18324   */\n    tag_136:\n        /* \"#utility.yul\":18101:18106   */\n      0x00\n        /* \"#utility.yul\":18125:18148   */\n      tag_488\n        /* \"#utility.yul\":18143:18147   */\n      dup3\n        /* \"#utility.yul\":18125:18148   */\n      tag_241\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18117:18148   */\n      swap2\n      pop\n        /* \"#utility.yul\":18169:18194   */\n      tag_489\n        /* \"#utility.yul\":18185:18193   */\n      dup4\n        /* \"#utility.yul\":18169:18194   */\n      tag_247\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18157:18194   */\n      swap3\n      pop\n        /* \"#utility.yul\":18213:18317   */\n      tag_490\n        /* \"#utility.yul\":18250:18316   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18240:18248   */\n      dup5\n        /* \"#utility.yul\":18234:18238   */\n      dup5\n        /* \"#utility.yul\":18213:18317   */\n      tag_282\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18204:18317   */\n      swap1\n      pop\n        /* \"#utility.yul\":18043:18324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18330:18740   */\n    tag_138:\n        /* \"#utility.yul\":18370:18377   */\n      0x00\n        /* \"#utility.yul\":18393:18413   */\n      tag_492\n        /* \"#utility.yul\":18411:18412   */\n      dup3\n        /* \"#utility.yul\":18393:18413   */\n      tag_241\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18388:18413   */\n      swap2\n      pop\n        /* \"#utility.yul\":18427:18447   */\n      tag_493\n        /* \"#utility.yul\":18445:18446   */\n      dup4\n        /* \"#utility.yul\":18427:18447   */\n      tag_241\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18422:18447   */\n      swap3\n      pop\n        /* \"#utility.yul\":18482:18483   */\n      dup3\n        /* \"#utility.yul\":18479:18480   */\n      dup3\n        /* \"#utility.yul\":18475:18484   */\n      mul\n        /* \"#utility.yul\":18504:18534   */\n      tag_494\n        /* \"#utility.yul\":18522:18533   */\n      dup2\n        /* \"#utility.yul\":18504:18534   */\n      tag_241\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18493:18534   */\n      swap2\n      pop\n        /* \"#utility.yul\":18683:18684   */\n      dup3\n        /* \"#utility.yul\":18674:18681   */\n      dup3\n        /* \"#utility.yul\":18670:18685   */\n      div\n        /* \"#utility.yul\":18667:18668   */\n      dup5\n        /* \"#utility.yul\":18664:18686   */\n      eq\n        /* \"#utility.yul\":18644:18645   */\n      dup4\n        /* \"#utility.yul\":18637:18646   */\n      iszero\n        /* \"#utility.yul\":18617:18700   */\n      or\n        /* \"#utility.yul\":18594:18733   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":18713:18731   */\n      tag_496\n      tag_279\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18594:18733   */\n    tag_495:\n        /* \"#utility.yul\":18378:18740   */\n      pop\n        /* \"#utility.yul\":18330:18740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18746:18925   */\n    tag_283:\n        /* \"#utility.yul\":18886:18917   */\n      0x4e6577206f776e657220697320746865207a65726f2061646472657373000000\n        /* \"#utility.yul\":18882:18883   */\n      0x00\n        /* \"#utility.yul\":18874:18880   */\n      dup3\n        /* \"#utility.yul\":18870:18884   */\n      add\n        /* \"#utility.yul\":18863:18918   */\n      mstore\n        /* \"#utility.yul\":18746:18925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18931:19297   */\n    tag_284:\n        /* \"#utility.yul\":19073:19076   */\n      0x00\n        /* \"#utility.yul\":19094:19161   */\n      tag_499\n        /* \"#utility.yul\":19158:19160   */\n      0x1d\n        /* \"#utility.yul\":19153:19156   */\n      dup4\n        /* \"#utility.yul\":19094:19161   */\n      tag_230\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19087:19161   */\n      swap2\n      pop\n        /* \"#utility.yul\":19170:19263   */\n      tag_500\n        /* \"#utility.yul\":19259:19262   */\n      dup3\n        /* \"#utility.yul\":19170:19263   */\n      tag_283\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19288:19290   */\n      0x20\n        /* \"#utility.yul\":19283:19286   */\n      dup3\n        /* \"#utility.yul\":19279:19291   */\n      add\n        /* \"#utility.yul\":19272:19291   */\n      swap1\n      pop\n        /* \"#utility.yul\":18931:19297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19303:19722   */\n    tag_174:\n        /* \"#utility.yul\":19469:19473   */\n      0x00\n        /* \"#utility.yul\":19507:19509   */\n      0x20\n        /* \"#utility.yul\":19496:19505   */\n      dup3\n        /* \"#utility.yul\":19492:19510   */\n      add\n        /* \"#utility.yul\":19484:19510   */\n      swap1\n      pop\n        /* \"#utility.yul\":19556:19565   */\n      dup2\n        /* \"#utility.yul\":19550:19554   */\n      dup2\n        /* \"#utility.yul\":19546:19566   */\n      sub\n        /* \"#utility.yul\":19542:19543   */\n      0x00\n        /* \"#utility.yul\":19531:19540   */\n      dup4\n        /* \"#utility.yul\":19527:19544   */\n      add\n        /* \"#utility.yul\":19520:19567   */\n      mstore\n        /* \"#utility.yul\":19584:19715   */\n      tag_502\n        /* \"#utility.yul\":19710:19714   */\n      dup2\n        /* \"#utility.yul\":19584:19715   */\n      tag_284\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19576:19715   */\n      swap1\n      pop\n        /* \"#utility.yul\":19303:19722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19728:20170   */\n    tag_184:\n        /* \"#utility.yul\":19877:19881   */\n      0x00\n        /* \"#utility.yul\":19915:19917   */\n      0x60\n        /* \"#utility.yul\":19904:19913   */\n      dup3\n        /* \"#utility.yul\":19900:19918   */\n      add\n        /* \"#utility.yul\":19892:19918   */\n      swap1\n      pop\n        /* \"#utility.yul\":19928:19999   */\n      tag_504\n        /* \"#utility.yul\":19996:19997   */\n      0x00\n        /* \"#utility.yul\":19985:19994   */\n      dup4\n        /* \"#utility.yul\":19981:19998   */\n      add\n        /* \"#utility.yul\":19972:19978   */\n      dup7\n        /* \"#utility.yul\":19928:19999   */\n      tag_258\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20009:20081   */\n      tag_505\n        /* \"#utility.yul\":20077:20079   */\n      0x20\n        /* \"#utility.yul\":20066:20075   */\n      dup4\n        /* \"#utility.yul\":20062:20080   */\n      add\n        /* \"#utility.yul\":20053:20059   */\n      dup6\n        /* \"#utility.yul\":20009:20081   */\n      tag_246\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20091:20163   */\n      tag_506\n        /* \"#utility.yul\":20159:20161   */\n      0x40\n        /* \"#utility.yul\":20148:20157   */\n      dup4\n        /* \"#utility.yul\":20144:20162   */\n      add\n        /* \"#utility.yul\":20135:20141   */\n      dup5\n        /* \"#utility.yul\":20091:20163   */\n      tag_246\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":19728:20170   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20176:20367   */\n    tag_207:\n        /* \"#utility.yul\":20216:20219   */\n      0x00\n        /* \"#utility.yul\":20235:20255   */\n      tag_508\n        /* \"#utility.yul\":20253:20254   */\n      dup3\n        /* \"#utility.yul\":20235:20255   */\n      tag_241\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20230:20255   */\n      swap2\n      pop\n        /* \"#utility.yul\":20269:20289   */\n      tag_509\n        /* \"#utility.yul\":20287:20288   */\n      dup4\n        /* \"#utility.yul\":20269:20289   */\n      tag_241\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":20264:20289   */\n      swap3\n      pop\n        /* \"#utility.yul\":20312:20313   */\n      dup3\n        /* \"#utility.yul\":20309:20310   */\n      dup3\n        /* \"#utility.yul\":20305:20314   */\n      add\n        /* \"#utility.yul\":20298:20314   */\n      swap1\n      pop\n        /* \"#utility.yul\":20333:20336   */\n      dup1\n        /* \"#utility.yul\":20330:20331   */\n      dup3\n        /* \"#utility.yul\":20327:20337   */\n      gt\n        /* \"#utility.yul\":20324:20360   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":20340:20358   */\n      tag_511\n      tag_279\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":20324:20360   */\n    tag_510:\n        /* \"#utility.yul\":20176:20367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20373:20543   */\n    tag_285:\n        /* \"#utility.yul\":20513:20535   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":20509:20510   */\n      0x00\n        /* \"#utility.yul\":20501:20507   */\n      dup3\n        /* \"#utility.yul\":20497:20511   */\n      add\n        /* \"#utility.yul\":20490:20536   */\n      mstore\n        /* \"#utility.yul\":20373:20543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20549:20915   */\n    tag_286:\n        /* \"#utility.yul\":20691:20694   */\n      0x00\n        /* \"#utility.yul\":20712:20779   */\n      tag_514\n        /* \"#utility.yul\":20776:20778   */\n      0x14\n        /* \"#utility.yul\":20771:20774   */\n      dup4\n        /* \"#utility.yul\":20712:20779   */\n      tag_230\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20705:20779   */\n      swap2\n      pop\n        /* \"#utility.yul\":20788:20881   */\n      tag_515\n        /* \"#utility.yul\":20877:20880   */\n      dup3\n        /* \"#utility.yul\":20788:20881   */\n      tag_285\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":20906:20908   */\n      0x20\n        /* \"#utility.yul\":20901:20904   */\n      dup3\n        /* \"#utility.yul\":20897:20909   */\n      add\n        /* \"#utility.yul\":20890:20909   */\n      swap1\n      pop\n        /* \"#utility.yul\":20549:20915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20921:21340   */\n    tag_218:\n        /* \"#utility.yul\":21087:21091   */\n      0x00\n        /* \"#utility.yul\":21125:21127   */\n      0x20\n        /* \"#utility.yul\":21114:21123   */\n      dup3\n        /* \"#utility.yul\":21110:21128   */\n      add\n        /* \"#utility.yul\":21102:21128   */\n      swap1\n      pop\n        /* \"#utility.yul\":21174:21183   */\n      dup2\n        /* \"#utility.yul\":21168:21172   */\n      dup2\n        /* \"#utility.yul\":21164:21184   */\n      sub\n        /* \"#utility.yul\":21160:21161   */\n      0x00\n        /* \"#utility.yul\":21149:21158   */\n      dup4\n        /* \"#utility.yul\":21145:21162   */\n      add\n        /* \"#utility.yul\":21138:21185   */\n      mstore\n        /* \"#utility.yul\":21202:21333   */\n      tag_517\n        /* \"#utility.yul\":21328:21332   */\n      dup2\n        /* \"#utility.yul\":21202:21333   */\n      tag_286\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":21194:21333   */\n      swap1\n      pop\n        /* \"#utility.yul\":20921:21340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208dd5a1273ac50d5a26e1ccf1d2e2f8d593200b7eb49c9be587a86f0975d9cb2864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50611f9f8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c80636161eb18116100a057806395d89b411161006f57806395d89b41146102a6578063a9059cbb146102c4578063b33712c5146102f4578063dd62ed3e146102fe578063f2fde38b1461032e57610114565b80636161eb181461023257806370a082311461024e5780638129fc1c1461027e5780638da5cb5b1461028857610114565b8063313ce567116100e7578063313ce567146101b457806340c10f19146101d2578063439766ce146101ee5780634cd88b76146101f85780635c975abb1461021457610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806323b872dd14610184575b5f80fd5b61012061034a565b60405161012d919061147d565b60405180910390f35b610150600480360381019061014b919061153b565b6103da565b60405161015d9190611593565b60405180910390f35b61016e6103f0565b60405161017b91906115bb565b60405180910390f35b61019e600480360381019061019991906115d4565b6103f9565b6040516101ab9190611593565b60405180910390f35b6101bc61046f565b6040516101c9919061163f565b60405180910390f35b6101ec60048036038101906101e7919061153b565b610477565b005b6101f661055c565b005b610212600480360381019061020d9190611784565b6105f5565b005b61021c610769565b6040516102299190611593565b60405180910390f35b61024c6004803603810190610247919061153b565b61077d565b005b610268600480360381019061026391906117fa565b6107fc565b60405161027591906115bb565b60405180910390f35b610286610842565b005b61029061085c565b60405161029d9190611834565b60405180910390f35b6102ae610884565b6040516102bb919061147d565b60405180910390f35b6102de60048036038101906102d9919061153b565b610914565b6040516102eb9190611593565b60405180910390f35b6102fc610972565b005b6103186004803603810190610313919061184d565b610a0b565b60405161032591906115bb565b60405180910390f35b610348600480360381019061034391906117fa565b610a8d565b005b606060048054610359906118b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906118b8565b80156103d05780601f106103a7576101008083540402835291602001916103d0565b820191905f5260205f20905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b5f6103e6338484610c48565b6001905092915050565b5f600354905090565b5f610402610769565b15610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990611932565b60405180910390fd5b5f61044b610c5a565b9050610458858285610c61565b610463858585610cf4565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd906119c0565b60405180910390fd5b61050e610769565b1561054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611932565b60405180910390fd5b6105588282610de4565b5050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e2906119c0565b60405180910390fd5b6105f3610ec8565b565b81600490816106049190611b7b565b5080600590816106149190611b7b565b503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506012600a6106639190611da6565b633b9aca006106729190611df0565b60038190555060035460015f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405161075d91906115bb565b60405180910390a35050565b5f805f9054906101000a900460ff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ed575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107e49190611834565b60405180910390fd5b6107f8825f83610f69565b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f6101000a81548160ff021916908315150217905550565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610893906118b8565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf906118b8565b801561090a5780601f106108e15761010080835404028352916020019161090a565b820191905f5260205f20905b8154815290600101906020018083116108ed57829003601f168201915b5050505050905090565b5f61091d610769565b1561095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611932565b60405180910390fd5b610968338484610cf4565b6001905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906119c0565b60405180910390fd5b610a09611185565b565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b13906119c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190611e7b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c558383836001611224565b505050565b5f33905090565b5f610c6c8484610a0b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cee5781811015610cdf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cd693929190611e99565b60405180910390fd5b610ced84848484035f611224565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d64575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d5b9190611834565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dcb9190611834565b60405180910390fd5b610ddf838383610f69565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e54575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e4b9190611834565b60405180910390fd5b610e5f5f8383610f69565b8173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebc91906115bb565b60405180910390a35050565b610ed0610769565b15610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0790611932565b60405180910390fd5b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f52610c5a565b604051610f5f9190611834565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb9578060035f828254610fad9190611ece565b92505081905550611089565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611043578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103a93929190611e99565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110d0578060035f828254039250508190555061111b565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161117891906115bb565b60405180910390a3505050565b61118d610769565b6111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390611f4b565b60405180910390fd5b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61120d610c5a565b60405161121a9190611834565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611294575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161128b9190611834565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611304575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112fb9190611834565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113ed578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113e491906115bb565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561142a57808201518184015260208101905061140f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61144f826113f3565b61145981856113fd565b935061146981856020860161140d565b61147281611435565b840191505092915050565b5f6020820190508181035f8301526114958184611445565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d7826114ae565b9050919050565b6114e7816114cd565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f819050919050565b61151a81611508565b8114611524575f80fd5b50565b5f8135905061153581611511565b92915050565b5f8060408385031215611551576115506114a6565b5b5f61155e858286016114f4565b925050602061156f85828601611527565b9150509250929050565b5f8115159050919050565b61158d81611579565b82525050565b5f6020820190506115a65f830184611584565b92915050565b6115b581611508565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b5f805f606084860312156115eb576115ea6114a6565b5b5f6115f8868287016114f4565b9350506020611609868287016114f4565b925050604061161a86828701611527565b9150509250925092565b5f60ff82169050919050565b61163981611624565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61169682611435565b810181811067ffffffffffffffff821117156116b5576116b4611660565b5b80604052505050565b5f6116c761149d565b90506116d3828261168d565b919050565b5f67ffffffffffffffff8211156116f2576116f1611660565b5b6116fb82611435565b9050602081019050919050565b828183375f83830152505050565b5f611728611723846116d8565b6116be565b9050828152602081018484840111156117445761174361165c565b5b61174f848285611708565b509392505050565b5f82601f83011261176b5761176a611658565b5b813561177b848260208601611716565b91505092915050565b5f806040838503121561179a576117996114a6565b5b5f83013567ffffffffffffffff8111156117b7576117b66114aa565b5b6117c385828601611757565b925050602083013567ffffffffffffffff8111156117e4576117e36114aa565b5b6117f085828601611757565b9150509250929050565b5f6020828403121561180f5761180e6114a6565b5b5f61181c848285016114f4565b91505092915050565b61182e816114cd565b82525050565b5f6020820190506118475f830184611825565b92915050565b5f8060408385031215611863576118626114a6565b5b5f611870858286016114f4565b9250506020611881858286016114f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118cf57607f821691505b6020821081036118e2576118e161188b565b5b50919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61191c6010836113fd565b9150611927826118e8565b602082019050919050565b5f6020820190508181035f83015261194981611910565b9050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119aa6021836113fd565b91506119b582611950565b604082019050919050565b5f6020820190508181035f8301526119d78161199e565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826119ff565b611a4486836119ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611a7f611a7a611a7584611508565b611a5c565b611508565b9050919050565b5f819050919050565b611a9883611a65565b611aac611aa482611a86565b848454611a0b565b825550505050565b5f90565b611ac0611ab4565b611acb818484611a8f565b505050565b5b81811015611aee57611ae35f82611ab8565b600181019050611ad1565b5050565b601f821115611b3357611b04816119de565b611b0d846119f0565b81016020851015611b1c578190505b611b30611b28856119f0565b830182611ad0565b50505b505050565b5f82821c905092915050565b5f611b535f1984600802611b38565b1980831691505092915050565b5f611b6b8383611b44565b9150826002028217905092915050565b611b84826113f3565b67ffffffffffffffff811115611b9d57611b9c611660565b5b611ba782546118b8565b611bb2828285611af2565b5f60209050601f831160018114611be3575f8415611bd1578287015190505b611bdb8582611b60565b865550611c42565b601f198416611bf1866119de565b5f5b82811015611c1857848901518255600182019150602085019450602081019050611bf3565b86831015611c355784890151611c31601f891682611b44565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611ccc57808604811115611ca857611ca7611c4a565b5b6001851615611cb75780820291505b8081029050611cc585611c77565b9450611c8c565b94509492505050565b5f82611ce45760019050611d9f565b81611cf1575f9050611d9f565b8160018114611d075760028114611d1157611d40565b6001915050611d9f565b60ff841115611d2357611d22611c4a565b5b8360020a915084821115611d3a57611d39611c4a565b5b50611d9f565b5060208310610133831016604e8410600b8410161715611d755782820a905083811115611d7057611d6f611c4a565b5b611d9f565b611d828484846001611c83565b92509050818404811115611d9957611d98611c4a565b5b81810290505b9392505050565b5f611db082611508565b9150611dbb83611624565b9250611de87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611cd5565b905092915050565b5f611dfa82611508565b9150611e0583611508565b9250828202611e1381611508565b91508282048414831517611e2a57611e29611c4a565b5b5092915050565b7f4e6577206f776e657220697320746865207a65726f20616464726573730000005f82015250565b5f611e65601d836113fd565b9150611e7082611e31565b602082019050919050565b5f6020820190508181035f830152611e9281611e59565b9050919050565b5f606082019050611eac5f830186611825565b611eb960208301856115ac565b611ec660408301846115ac565b949350505050565b5f611ed882611508565b9150611ee383611508565b9250828201905080821115611efb57611efa611c4a565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611f356014836113fd565b9150611f4082611f01565b602082019050919050565b5f6020820190508181035f830152611f6281611f29565b905091905056fea26469706673582212208dd5a1273ac50d5a26e1ccf1d2e2f8d593200b7eb49c9be587a86f0975d9cb2864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9F DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6161EB18 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xB33712C5 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x439766CE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x214 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E6 CALLER DUP5 DUP5 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x402 PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x439 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x44B PUSH2 0xC5A JUMP JUMPDEST SWAP1 POP PUSH2 0x458 DUP6 DUP3 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x463 DUP6 DUP6 DUP6 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50E PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP3 DUP3 PUSH2 0xDE4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F3 PUSH2 0xEC8 JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP3 PUSH0 DUP4 PUSH2 0xF69 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x91D PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x968 CALLER DUP5 DUP5 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F8 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 PUSH2 0x1185 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC6C DUP5 DUP5 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCEE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCED DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1224 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDF DUP4 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5F PUSH0 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF07 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF52 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1089 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1043 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D0 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x111B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x118D PUSH2 0x769 JUMP JUMPDEST PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x120D PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1294 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13ED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x140F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144F DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x1459 DUP2 DUP6 PUSH2 0x13FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1469 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x140D JUMP JUMPDEST PUSH2 0x1472 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1495 DUP2 DUP5 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 DUP3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP2 EQ PUSH2 0x1524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155E DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156F DUP6 DUP3 DUP7 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x161A DUP7 DUP3 DUP8 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1696 DUP3 PUSH2 0x1435 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x16D3 DUP3 DUP3 PUSH2 0x168D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH2 0x16FB DUP3 PUSH2 0x1435 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1728 PUSH2 0x1723 DUP5 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x165C JUMP JUMPDEST JUMPDEST PUSH2 0x174F DUP5 DUP3 DUP6 PUSH2 0x1708 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1658 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x177B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1716 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH2 0x17F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181C DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1847 PUSH0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH2 0x1862 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x188B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191C PUSH1 0x10 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1927 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1949 DUP2 PUSH2 0x1910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AA PUSH1 0x21 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x19B5 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D7 DUP2 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1A44 DUP7 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7F PUSH2 0x1A7A PUSH2 0x1A75 DUP5 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A98 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x1AAC PUSH2 0x1AA4 DUP3 PUSH2 0x1A86 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A0B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AC0 PUSH2 0x1AB4 JUMP JUMPDEST PUSH2 0x1ACB DUP2 DUP5 DUP5 PUSH2 0x1A8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AE3 PUSH0 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B04 DUP2 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1B0D DUP5 PUSH2 0x19F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B1C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B30 PUSH2 0x1B28 DUP6 PUSH2 0x19F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AD0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B38 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH2 0x1B9C PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA7 DUP3 SLOAD PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x1BB2 DUP3 DUP3 DUP6 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B60 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19DE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C18 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C35 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C31 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1CCC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1CB7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1CC5 DUP6 PUSH2 0x1C77 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C8C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CE4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1D9F JUMP JUMPDEST DUP2 PUSH2 0x1CF1 JUMPI PUSH0 SWAP1 POP PUSH2 0x1D9F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1D07 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D11 JUMPI PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1D3A JUMPI PUSH2 0x1D39 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1D9F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D75 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x1D82 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1C83 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB0 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBB DUP4 PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DE8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1CD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFA DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E05 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E13 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E2A JUMPI PUSH2 0x1E29 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E65 PUSH1 0x1D DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E70 DUP3 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E92 DUP2 PUSH2 0x1E59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EAC PUSH0 DUP4 ADD DUP7 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1EB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x1EC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED8 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE3 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F35 PUSH1 0x14 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F40 DUP3 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F62 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xD5 LOG1 0x27 GASPRICE 0xC5 0xD GAS 0x26 0xE1 0xCC CALL 0xD2 0xE2 0xF8 0xD5 SWAP4 KECCAK256 SIGNEXTEND PUSH31 0xB49C9BE587A86F0975D9CB2864736F6C634300081600330000000000000000 ",
							"sourceMap": "1193:11763:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1308": {
									"entryPoint": 3144,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1368": {
									"entryPoint": 4644,
									"id": 1368,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1290": {
									"entryPoint": 1917,
									"id": 1290,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1257": {
									"entryPoint": 3556,
									"id": 1257,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_443": {
									"entryPoint": 3162,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_640": {
									"entryPoint": 3784,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1416": {
									"entryPoint": 3169,
									"id": 1416,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1138": {
									"entryPoint": 3316,
									"id": 1138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_656": {
									"entryPoint": 4485,
									"id": 656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1215": {
									"entryPoint": 3945,
									"id": 1215,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_972": {
									"entryPoint": 2571,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_992": {
									"entryPoint": 986,
									"id": 992,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_932": {
									"entryPoint": 2044,
									"id": 932,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_910": {
									"entryPoint": 1135,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_592": {
									"entryPoint": 2114,
									"id": 592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_883": {
									"entryPoint": 1525,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1009": {
									"entryPoint": 1143,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_892": {
									"entryPoint": 842,
									"id": 892,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1064": {
									"entryPoint": 2140,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseContract_1431": {
									"entryPoint": 1372,
									"id": 1431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_601": {
									"entryPoint": 1897,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_901": {
									"entryPoint": 2180,
									"id": 901,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_919": {
									"entryPoint": 1008,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1056": {
									"entryPoint": 1017,
									"id": 1056,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1091": {
									"entryPoint": 2701,
									"id": 1091,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_955": {
									"entryPoint": 2324,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpauseContract_1440": {
									"entryPoint": 2418,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21343:9",
										"nodeType": "YulBlock",
										"src": "0:21343:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:184:9",
													"nodeType": "YulBlock",
													"src": "349:184:9",
													"statements": [
														{
															"nativeSrc": "359:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:9",
																"nodeType": "YulLiteral",
																"src": "368:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:9",
																	"nodeType": "YulTypedName",
																	"src": "363:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:9",
																"nodeType": "YulBlock",
																"src": "428:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:9"
																					},
																					"nativeSrc": "449:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:9"
																							},
																							"nativeSrc": "468:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:9"
																					},
																					"nativeSrc": "462:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:9"
																			},
																			"nativeSrc": "442:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:9"
																		},
																		"nativeSrc": "442:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:9"
																},
																"nativeSrc": "386:13:9",
																"nodeType": "YulFunctionCall",
																"src": "386:13:9"
															},
															"nativeSrc": "378:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:9",
																"nodeType": "YulBlock",
																"src": "400:19:9",
																"statements": [
																	{
																		"nativeSrc": "402:15:9",
																		"nodeType": "YulAssignment",
																		"src": "402:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:9",
																					"nodeType": "YulLiteral",
																					"src": "414:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:9"
																			},
																			"nativeSrc": "407:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:9",
																"nodeType": "YulBlock",
																"src": "382:3:9",
																"statements": []
															},
															"src": "378:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:9"
																		},
																		"nativeSrc": "507:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:9",
																		"nodeType": "YulLiteral",
																		"src": "525:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																},
																"nativeSrc": "500:27:9",
																"nodeType": "YulFunctionCall",
																"src": "500:27:9"
															},
															"nativeSrc": "500:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:246:9"
											},
											{
												"body": {
													"nativeSrc": "587:54:9",
													"nodeType": "YulBlock",
													"src": "587:54:9",
													"statements": [
														{
															"nativeSrc": "597:38:9",
															"nodeType": "YulAssignment",
															"src": "597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:9",
																				"nodeType": "YulLiteral",
																				"src": "622:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:9"
																		},
																		"nativeSrc": "611:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:9",
																				"nodeType": "YulLiteral",
																				"src": "631:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:9"
																		},
																		"nativeSrc": "627:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:9"
																},
																"nativeSrc": "607:28:9",
																"nodeType": "YulFunctionCall",
																"src": "607:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:9",
														"nodeType": "YulTypedName",
														"src": "570:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:9",
														"nodeType": "YulTypedName",
														"src": "580:6:9",
														"type": ""
													}
												],
												"src": "539:102:9"
											},
											{
												"body": {
													"nativeSrc": "739:285:9",
													"nodeType": "YulBlock",
													"src": "739:285:9",
													"statements": [
														{
															"nativeSrc": "749:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:9"
																},
																"nativeSrc": "763:39:9",
																"nodeType": "YulFunctionCall",
																"src": "763:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:9",
																	"nodeType": "YulTypedName",
																	"src": "753:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:9",
															"nodeType": "YulAssignment",
															"src": "811:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:9"
																},
																"nativeSrc": "818:71:9",
																"nodeType": "YulFunctionCall",
																"src": "818:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:9",
																				"nodeType": "YulLiteral",
																				"src": "944:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:9"
																		},
																		"nativeSrc": "933:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:9"
																},
																"nativeSrc": "898:65:9",
																"nodeType": "YulFunctionCall",
																"src": "898:65:9"
															},
															"nativeSrc": "898:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:9"
														},
														{
															"nativeSrc": "972:46:9",
															"nodeType": "YulAssignment",
															"src": "972:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:9"
																		},
																		"nativeSrc": "988:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:9"
																},
																"nativeSrc": "979:39:9",
																"nodeType": "YulFunctionCall",
																"src": "979:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:9",
														"nodeType": "YulTypedName",
														"src": "720:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:9",
														"nodeType": "YulTypedName",
														"src": "727:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:9",
														"nodeType": "YulTypedName",
														"src": "735:3:9",
														"type": ""
													}
												],
												"src": "647:377:9"
											},
											{
												"body": {
													"nativeSrc": "1148:195:9",
													"nodeType": "YulBlock",
													"src": "1148:195:9",
													"statements": [
														{
															"nativeSrc": "1158:26:9",
															"nodeType": "YulAssignment",
															"src": "1158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:9"
																},
																"nativeSrc": "1166:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:9"
																		},
																		"nativeSrc": "1201:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:9"
																		},
																		"nativeSrc": "1220:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:9"
																},
																"nativeSrc": "1194:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:9"
															},
															"nativeSrc": "1194:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:9"
														},
														{
															"nativeSrc": "1250:86:9",
															"nodeType": "YulAssignment",
															"src": "1250:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:9"
																},
																"nativeSrc": "1258:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:9",
														"nodeType": "YulTypedName",
														"src": "1120:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:9",
														"nodeType": "YulTypedName",
														"src": "1132:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:9",
														"nodeType": "YulTypedName",
														"src": "1143:4:9",
														"type": ""
													}
												],
												"src": "1030:313:9"
											},
											{
												"body": {
													"nativeSrc": "1389:35:9",
													"nodeType": "YulBlock",
													"src": "1389:35:9",
													"statements": [
														{
															"nativeSrc": "1399:19:9",
															"nodeType": "YulAssignment",
															"src": "1399:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:9"
																},
																"nativeSrc": "1409:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:9",
														"nodeType": "YulTypedName",
														"src": "1382:6:9",
														"type": ""
													}
												],
												"src": "1349:75:9"
											},
											{
												"body": {
													"nativeSrc": "1519:28:9",
													"nodeType": "YulBlock",
													"src": "1519:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:9"
																},
																"nativeSrc": "1529:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:9"
															},
															"nativeSrc": "1529:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:9"
											},
											{
												"body": {
													"nativeSrc": "1642:28:9",
													"nodeType": "YulBlock",
													"src": "1642:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:9"
															},
															"nativeSrc": "1652:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:9"
											},
											{
												"body": {
													"nativeSrc": "1721:81:9",
													"nodeType": "YulBlock",
													"src": "1721:81:9",
													"statements": [
														{
															"nativeSrc": "1731:65:9",
															"nodeType": "YulAssignment",
															"src": "1731:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:9"
																},
																"nativeSrc": "1742:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:9",
														"nodeType": "YulTypedName",
														"src": "1703:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:9",
														"nodeType": "YulTypedName",
														"src": "1713:7:9",
														"type": ""
													}
												],
												"src": "1676:126:9"
											},
											{
												"body": {
													"nativeSrc": "1853:51:9",
													"nodeType": "YulBlock",
													"src": "1853:51:9",
													"statements": [
														{
															"nativeSrc": "1863:35:9",
															"nodeType": "YulAssignment",
															"src": "1863:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:9"
																},
																"nativeSrc": "1874:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:9",
														"nodeType": "YulTypedName",
														"src": "1835:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:9",
														"nodeType": "YulTypedName",
														"src": "1845:7:9",
														"type": ""
													}
												],
												"src": "1808:96:9"
											},
											{
												"body": {
													"nativeSrc": "1953:79:9",
													"nodeType": "YulBlock",
													"src": "1953:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:9",
																"nodeType": "YulBlock",
																"src": "2010:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:9"
																			},
																			"nativeSrc": "2012:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:9"
																		},
																		"nativeSrc": "2012:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:9"
																				},
																				"nativeSrc": "1983:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:9"
																		},
																		"nativeSrc": "1973:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:9"
																},
																"nativeSrc": "1966:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:9"
															},
															"nativeSrc": "1963:63:9",
															"nodeType": "YulIf",
															"src": "1963:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:9",
														"nodeType": "YulTypedName",
														"src": "1946:5:9",
														"type": ""
													}
												],
												"src": "1910:122:9"
											},
											{
												"body": {
													"nativeSrc": "2090:87:9",
													"nodeType": "YulBlock",
													"src": "2090:87:9",
													"statements": [
														{
															"nativeSrc": "2100:29:9",
															"nodeType": "YulAssignment",
															"src": "2100:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:9"
																},
																"nativeSrc": "2109:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:9"
																},
																"nativeSrc": "2138:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:9"
															},
															"nativeSrc": "2138:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:9",
														"nodeType": "YulTypedName",
														"src": "2068:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:9",
														"nodeType": "YulTypedName",
														"src": "2076:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:9",
														"nodeType": "YulTypedName",
														"src": "2084:5:9",
														"type": ""
													}
												],
												"src": "2038:139:9"
											},
											{
												"body": {
													"nativeSrc": "2228:32:9",
													"nodeType": "YulBlock",
													"src": "2228:32:9",
													"statements": [
														{
															"nativeSrc": "2238:16:9",
															"nodeType": "YulAssignment",
															"src": "2238:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:9",
																"nodeType": "YulIdentifier",
																"src": "2249:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:9",
														"nodeType": "YulTypedName",
														"src": "2210:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:9",
														"nodeType": "YulTypedName",
														"src": "2220:7:9",
														"type": ""
													}
												],
												"src": "2183:77:9"
											},
											{
												"body": {
													"nativeSrc": "2309:79:9",
													"nodeType": "YulBlock",
													"src": "2309:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:9",
																"nodeType": "YulBlock",
																"src": "2366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:9"
																			},
																			"nativeSrc": "2368:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:9"
																		},
																		"nativeSrc": "2368:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:9"
																				},
																				"nativeSrc": "2339:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:9"
																		},
																		"nativeSrc": "2329:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:9"
																},
																"nativeSrc": "2322:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:9"
															},
															"nativeSrc": "2319:63:9",
															"nodeType": "YulIf",
															"src": "2319:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:9",
														"nodeType": "YulTypedName",
														"src": "2302:5:9",
														"type": ""
													}
												],
												"src": "2266:122:9"
											},
											{
												"body": {
													"nativeSrc": "2446:87:9",
													"nodeType": "YulBlock",
													"src": "2446:87:9",
													"statements": [
														{
															"nativeSrc": "2456:29:9",
															"nodeType": "YulAssignment",
															"src": "2456:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:9"
																},
																"nativeSrc": "2465:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:9"
																},
																"nativeSrc": "2494:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:9"
															},
															"nativeSrc": "2494:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:9",
														"nodeType": "YulTypedName",
														"src": "2424:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:9",
														"nodeType": "YulTypedName",
														"src": "2432:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:9",
														"nodeType": "YulTypedName",
														"src": "2440:5:9",
														"type": ""
													}
												],
												"src": "2394:139:9"
											},
											{
												"body": {
													"nativeSrc": "2622:391:9",
													"nodeType": "YulBlock",
													"src": "2622:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:9",
																"nodeType": "YulBlock",
																"src": "2668:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:9"
																			},
																			"nativeSrc": "2670:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:9"
																		},
																		"nativeSrc": "2670:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nativeSrc": "2639:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:9"
																},
																"nativeSrc": "2635:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:9"
															},
															"nativeSrc": "2632:119:9",
															"nodeType": "YulIf",
															"src": "2632:119:9"
														},
														{
															"nativeSrc": "2761:117:9",
															"nodeType": "YulBlock",
															"src": "2761:117:9",
															"statements": [
																{
																	"nativeSrc": "2776:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:9"
																				},
																				"nativeSrc": "2836:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:9"
																		},
																		"nativeSrc": "2815:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:9",
															"nodeType": "YulBlock",
															"src": "2888:118:9",
															"statements": [
																{
																	"nativeSrc": "2903:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:9"
																				},
																				"nativeSrc": "2964:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:9"
																		},
																		"nativeSrc": "2943:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:9",
														"nodeType": "YulTypedName",
														"src": "2584:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:9",
														"nodeType": "YulTypedName",
														"src": "2595:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:9",
														"nodeType": "YulTypedName",
														"src": "2607:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:9",
														"nodeType": "YulTypedName",
														"src": "2615:6:9",
														"type": ""
													}
												],
												"src": "2539:474:9"
											},
											{
												"body": {
													"nativeSrc": "3061:48:9",
													"nodeType": "YulBlock",
													"src": "3061:48:9",
													"statements": [
														{
															"nativeSrc": "3071:32:9",
															"nodeType": "YulAssignment",
															"src": "3071:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:9"
																		},
																		"nativeSrc": "3089:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:9"
																},
																"nativeSrc": "3082:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:9",
														"nodeType": "YulTypedName",
														"src": "3043:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:9",
														"nodeType": "YulTypedName",
														"src": "3053:7:9",
														"type": ""
													}
												],
												"src": "3019:90:9"
											},
											{
												"body": {
													"nativeSrc": "3174:50:9",
													"nodeType": "YulBlock",
													"src": "3174:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:9"
																		},
																		"nativeSrc": "3196:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:9"
																},
																"nativeSrc": "3184:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:9"
															},
															"nativeSrc": "3184:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:9",
														"nodeType": "YulTypedName",
														"src": "3162:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:9",
														"nodeType": "YulTypedName",
														"src": "3169:3:9",
														"type": ""
													}
												],
												"src": "3115:109:9"
											},
											{
												"body": {
													"nativeSrc": "3322:118:9",
													"nodeType": "YulBlock",
													"src": "3322:118:9",
													"statements": [
														{
															"nativeSrc": "3332:26:9",
															"nodeType": "YulAssignment",
															"src": "3332:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:9"
																},
																"nativeSrc": "3340:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:9"
																		},
																		"nativeSrc": "3415:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:9"
																},
																"nativeSrc": "3368:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:9"
															},
															"nativeSrc": "3368:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:9",
														"nodeType": "YulTypedName",
														"src": "3294:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:9",
														"nodeType": "YulTypedName",
														"src": "3306:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:9",
														"nodeType": "YulTypedName",
														"src": "3317:4:9",
														"type": ""
													}
												],
												"src": "3230:210:9"
											},
											{
												"body": {
													"nativeSrc": "3511:53:9",
													"nodeType": "YulBlock",
													"src": "3511:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:9"
																		},
																		"nativeSrc": "3533:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:9"
																},
																"nativeSrc": "3521:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:9"
															},
															"nativeSrc": "3521:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:9",
														"nodeType": "YulTypedName",
														"src": "3499:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:9",
														"nodeType": "YulTypedName",
														"src": "3506:3:9",
														"type": ""
													}
												],
												"src": "3446:118:9"
											},
											{
												"body": {
													"nativeSrc": "3668:124:9",
													"nodeType": "YulBlock",
													"src": "3668:124:9",
													"statements": [
														{
															"nativeSrc": "3678:26:9",
															"nodeType": "YulAssignment",
															"src": "3678:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:9"
																},
																"nativeSrc": "3686:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:9"
																		},
																		"nativeSrc": "3767:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:9"
																},
																"nativeSrc": "3714:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:9"
															},
															"nativeSrc": "3714:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:9",
														"nodeType": "YulTypedName",
														"src": "3640:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:9",
														"nodeType": "YulTypedName",
														"src": "3652:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:9",
														"nodeType": "YulTypedName",
														"src": "3663:4:9",
														"type": ""
													}
												],
												"src": "3570:222:9"
											},
											{
												"body": {
													"nativeSrc": "3898:519:9",
													"nodeType": "YulBlock",
													"src": "3898:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:9",
																"nodeType": "YulBlock",
																"src": "3944:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:9"
																			},
																			"nativeSrc": "3946:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:9"
																		},
																		"nativeSrc": "3946:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:9"
																		},
																		"nativeSrc": "3915:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:9"
																},
																"nativeSrc": "3911:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:9"
															},
															"nativeSrc": "3908:119:9",
															"nodeType": "YulIf",
															"src": "3908:119:9"
														},
														{
															"nativeSrc": "4037:117:9",
															"nodeType": "YulBlock",
															"src": "4037:117:9",
															"statements": [
																{
																	"nativeSrc": "4052:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:9"
																				},
																				"nativeSrc": "4112:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:9"
																		},
																		"nativeSrc": "4091:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:9",
															"nodeType": "YulBlock",
															"src": "4164:118:9",
															"statements": [
																{
																	"nativeSrc": "4179:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:9"
																				},
																				"nativeSrc": "4240:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:9"
																		},
																		"nativeSrc": "4219:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:9",
															"nodeType": "YulBlock",
															"src": "4292:118:9",
															"statements": [
																{
																	"nativeSrc": "4307:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:9"
																				},
																				"nativeSrc": "4368:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:9"
																		},
																		"nativeSrc": "4347:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:9",
														"nodeType": "YulTypedName",
														"src": "3852:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:9",
														"nodeType": "YulTypedName",
														"src": "3863:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:9",
														"nodeType": "YulTypedName",
														"src": "3875:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:9",
														"nodeType": "YulTypedName",
														"src": "3883:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:9",
														"nodeType": "YulTypedName",
														"src": "3891:6:9",
														"type": ""
													}
												],
												"src": "3798:619:9"
											},
											{
												"body": {
													"nativeSrc": "4466:43:9",
													"nodeType": "YulBlock",
													"src": "4466:43:9",
													"statements": [
														{
															"nativeSrc": "4476:27:9",
															"nodeType": "YulAssignment",
															"src": "4476:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:9"
																},
																"nativeSrc": "4487:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:9",
														"nodeType": "YulTypedName",
														"src": "4448:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:9",
														"nodeType": "YulTypedName",
														"src": "4458:7:9",
														"type": ""
													}
												],
												"src": "4423:86:9"
											},
											{
												"body": {
													"nativeSrc": "4576:51:9",
													"nodeType": "YulBlock",
													"src": "4576:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:9"
																		},
																		"nativeSrc": "4598:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:9"
																},
																"nativeSrc": "4586:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:9"
															},
															"nativeSrc": "4586:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:9",
														"nodeType": "YulTypedName",
														"src": "4564:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:9",
														"nodeType": "YulTypedName",
														"src": "4571:3:9",
														"type": ""
													}
												],
												"src": "4515:112:9"
											},
											{
												"body": {
													"nativeSrc": "4727:120:9",
													"nodeType": "YulBlock",
													"src": "4727:120:9",
													"statements": [
														{
															"nativeSrc": "4737:26:9",
															"nodeType": "YulAssignment",
															"src": "4737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:9"
																},
																"nativeSrc": "4745:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:9"
																		},
																		"nativeSrc": "4822:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:9"
																},
																"nativeSrc": "4773:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:9"
															},
															"nativeSrc": "4773:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:9",
														"nodeType": "YulTypedName",
														"src": "4699:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:9",
														"nodeType": "YulTypedName",
														"src": "4711:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:9",
														"nodeType": "YulTypedName",
														"src": "4722:4:9",
														"type": ""
													}
												],
												"src": "4633:214:9"
											},
											{
												"body": {
													"nativeSrc": "4942:28:9",
													"nodeType": "YulBlock",
													"src": "4942:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4952:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:9"
																},
																"nativeSrc": "4952:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4952:12:9"
															},
															"nativeSrc": "4952:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "4952:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4853:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4853:117:9"
											},
											{
												"body": {
													"nativeSrc": "5065:28:9",
													"nodeType": "YulBlock",
													"src": "5065:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5082:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5082:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5085:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5085:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5075:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:9"
																},
																"nativeSrc": "5075:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5075:12:9"
															},
															"nativeSrc": "5075:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "5075:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4976:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4976:117:9"
											},
											{
												"body": {
													"nativeSrc": "5127:152:9",
													"nodeType": "YulBlock",
													"src": "5127:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5144:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5144:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5147:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5147:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5137:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:9"
																},
																"nativeSrc": "5137:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5137:88:9"
															},
															"nativeSrc": "5137:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5137:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5241:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5241:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5244:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5234:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5234:6:9"
																},
																"nativeSrc": "5234:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5234:15:9"
															},
															"nativeSrc": "5234:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5234:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5265:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5265:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5268:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:9"
																},
																"nativeSrc": "5258:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5258:15:9"
															},
															"nativeSrc": "5258:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5258:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5099:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5099:180:9"
											},
											{
												"body": {
													"nativeSrc": "5328:238:9",
													"nodeType": "YulBlock",
													"src": "5328:238:9",
													"statements": [
														{
															"nativeSrc": "5338:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5338:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5360:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5360:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5390:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5390:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5368:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "5368:21:9"
																		},
																		"nativeSrc": "5368:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5356:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5356:3:9"
																},
																"nativeSrc": "5356:40:9",
																"nodeType": "YulFunctionCall",
																"src": "5356:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5342:10:9",
																	"nodeType": "YulTypedName",
																	"src": "5342:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5507:22:9",
																"nodeType": "YulBlock",
																"src": "5507:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5509:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5509:16:9"
																			},
																			"nativeSrc": "5509:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5509:18:9"
																		},
																		"nativeSrc": "5509:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5509:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5450:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "5450:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5462:18:9",
																				"nodeType": "YulLiteral",
																				"src": "5462:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5447:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5447:2:9"
																		},
																		"nativeSrc": "5447:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5486:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "5486:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5498:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5498:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5483:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5483:2:9"
																		},
																		"nativeSrc": "5483:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5483:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5444:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5444:2:9"
																},
																"nativeSrc": "5444:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5444:62:9"
															},
															"nativeSrc": "5441:88:9",
															"nodeType": "YulIf",
															"src": "5441:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5545:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5545:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5549:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "5549:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5538:6:9"
																},
																"nativeSrc": "5538:22:9",
																"nodeType": "YulFunctionCall",
																"src": "5538:22:9"
															},
															"nativeSrc": "5538:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "5538:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5285:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5314:6:9",
														"nodeType": "YulTypedName",
														"src": "5314:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5322:4:9",
														"nodeType": "YulTypedName",
														"src": "5322:4:9",
														"type": ""
													}
												],
												"src": "5285:281:9"
											},
											{
												"body": {
													"nativeSrc": "5613:88:9",
													"nodeType": "YulBlock",
													"src": "5613:88:9",
													"statements": [
														{
															"nativeSrc": "5623:30:9",
															"nodeType": "YulAssignment",
															"src": "5623:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5633:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5633:18:9"
																},
																"nativeSrc": "5633:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5633:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5623:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5682:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5690:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5690:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5662:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "5662:19:9"
																},
																"nativeSrc": "5662:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5662:33:9"
															},
															"nativeSrc": "5662:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5662:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5572:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5597:4:9",
														"nodeType": "YulTypedName",
														"src": "5597:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5606:6:9",
														"nodeType": "YulTypedName",
														"src": "5606:6:9",
														"type": ""
													}
												],
												"src": "5572:129:9"
											},
											{
												"body": {
													"nativeSrc": "5774:241:9",
													"nodeType": "YulBlock",
													"src": "5774:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5879:22:9",
																"nodeType": "YulBlock",
																"src": "5879:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5881:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:16:9"
																			},
																			"nativeSrc": "5881:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:18:9"
																		},
																		"nativeSrc": "5881:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5881:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5851:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5851:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5859:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5859:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5848:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5848:2:9"
																},
																"nativeSrc": "5848:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5848:30:9"
															},
															"nativeSrc": "5845:56:9",
															"nodeType": "YulIf",
															"src": "5845:56:9"
														},
														{
															"nativeSrc": "5911:37:9",
															"nodeType": "YulAssignment",
															"src": "5911:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5941:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5941:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5919:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "5919:21:9"
																},
																"nativeSrc": "5919:29:9",
																"nodeType": "YulFunctionCall",
																"src": "5919:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5911:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5911:4:9"
																}
															]
														},
														{
															"nativeSrc": "5985:23:9",
															"nodeType": "YulAssignment",
															"src": "5985:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5997:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5997:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6003:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6003:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5993:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5993:3:9"
																},
																"nativeSrc": "5993:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5993:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5985:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5985:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5707:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5758:6:9",
														"nodeType": "YulTypedName",
														"src": "5758:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5769:4:9",
														"nodeType": "YulTypedName",
														"src": "5769:4:9",
														"type": ""
													}
												],
												"src": "5707:308:9"
											},
											{
												"body": {
													"nativeSrc": "6085:82:9",
													"nodeType": "YulBlock",
													"src": "6085:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6108:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6108:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6113:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6113:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6118:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6118:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6095:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6095:12:9"
																},
																"nativeSrc": "6095:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6095:30:9"
															},
															"nativeSrc": "6095:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6095:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6145:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6145:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6150:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6150:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6141:3:9"
																		},
																		"nativeSrc": "6141:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6141:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6159:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6159:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6134:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:9"
																},
																"nativeSrc": "6134:27:9",
																"nodeType": "YulFunctionCall",
																"src": "6134:27:9"
															},
															"nativeSrc": "6134:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "6134:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6021:146:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6067:3:9",
														"nodeType": "YulTypedName",
														"src": "6067:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6072:3:9",
														"nodeType": "YulTypedName",
														"src": "6072:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6077:6:9",
														"nodeType": "YulTypedName",
														"src": "6077:6:9",
														"type": ""
													}
												],
												"src": "6021:146:9"
											},
											{
												"body": {
													"nativeSrc": "6257:341:9",
													"nodeType": "YulBlock",
													"src": "6257:341:9",
													"statements": [
														{
															"nativeSrc": "6267:75:9",
															"nodeType": "YulAssignment",
															"src": "6267:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6334:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6334:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6292:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "6292:41:9"
																		},
																		"nativeSrc": "6292:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6276:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "6276:15:9"
																},
																"nativeSrc": "6276:66:9",
																"nodeType": "YulFunctionCall",
																"src": "6276:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6267:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6267:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6358:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6358:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6365:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6365:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6351:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6351:6:9"
																},
																"nativeSrc": "6351:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6351:21:9"
															},
															"nativeSrc": "6351:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6351:21:9"
														},
														{
															"nativeSrc": "6381:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6381:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6396:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6396:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6403:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6392:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:9"
																},
																"nativeSrc": "6392:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6392:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6385:3:9",
																	"nodeType": "YulTypedName",
																	"src": "6385:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6446:83:9",
																"nodeType": "YulBlock",
																"src": "6446:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6448:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6448:77:9"
																			},
																			"nativeSrc": "6448:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6448:79:9"
																		},
																		"nativeSrc": "6448:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6448:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6427:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6427:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6432:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6432:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6423:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:9"
																		},
																		"nativeSrc": "6423:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6423:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6441:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6420:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6420:2:9"
																},
																"nativeSrc": "6420:25:9",
																"nodeType": "YulFunctionCall",
																"src": "6420:25:9"
															},
															"nativeSrc": "6417:112:9",
															"nodeType": "YulIf",
															"src": "6417:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6575:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6575:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6580:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6580:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6585:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6585:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6538:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "6538:36:9"
																},
																"nativeSrc": "6538:54:9",
																"nodeType": "YulFunctionCall",
																"src": "6538:54:9"
															},
															"nativeSrc": "6538:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "6538:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6173:425:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6230:3:9",
														"nodeType": "YulTypedName",
														"src": "6230:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6235:6:9",
														"nodeType": "YulTypedName",
														"src": "6235:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6243:3:9",
														"nodeType": "YulTypedName",
														"src": "6243:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6251:5:9",
														"nodeType": "YulTypedName",
														"src": "6251:5:9",
														"type": ""
													}
												],
												"src": "6173:425:9"
											},
											{
												"body": {
													"nativeSrc": "6680:278:9",
													"nodeType": "YulBlock",
													"src": "6680:278:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6729:83:9",
																"nodeType": "YulBlock",
																"src": "6729:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6731:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6731:77:9"
																			},
																			"nativeSrc": "6731:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6731:79:9"
																		},
																		"nativeSrc": "6731:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6731:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6708:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6708:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6716:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6716:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6704:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6704:3:9"
																				},
																				"nativeSrc": "6704:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6704:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6723:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6723:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6700:3:9"
																		},
																		"nativeSrc": "6700:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6700:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:9"
																},
																"nativeSrc": "6693:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6693:35:9"
															},
															"nativeSrc": "6690:122:9",
															"nodeType": "YulIf",
															"src": "6690:122:9"
														},
														{
															"nativeSrc": "6821:34:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6821:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6848:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6835:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6835:12:9"
																},
																"nativeSrc": "6835:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6835:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6825:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6825:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6864:88:9",
															"nodeType": "YulAssignment",
															"src": "6864:88:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6925:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6925:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6933:4:9",
																				"nodeType": "YulLiteral",
																				"src": "6933:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6921:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:9"
																		},
																		"nativeSrc": "6921:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6940:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6948:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6948:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6873:47:9",
																	"nodeType": "YulIdentifier",
																	"src": "6873:47:9"
																},
																"nativeSrc": "6873:79:9",
																"nodeType": "YulFunctionCall",
																"src": "6873:79:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6864:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6864:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6618:340:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6658:6:9",
														"nodeType": "YulTypedName",
														"src": "6658:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6666:3:9",
														"nodeType": "YulTypedName",
														"src": "6666:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6674:5:9",
														"nodeType": "YulTypedName",
														"src": "6674:5:9",
														"type": ""
													}
												],
												"src": "6618:340:9"
											},
											{
												"body": {
													"nativeSrc": "7067:731:9",
													"nodeType": "YulBlock",
													"src": "7067:731:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7113:83:9",
																"nodeType": "YulBlock",
																"src": "7113:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7115:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7115:77:9"
																			},
																			"nativeSrc": "7115:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7115:79:9"
																		},
																		"nativeSrc": "7115:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7115:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7088:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7088:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7097:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7097:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7084:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7084:3:9"
																		},
																		"nativeSrc": "7084:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7084:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7109:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7109:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7080:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7080:3:9"
																},
																"nativeSrc": "7080:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7080:32:9"
															},
															"nativeSrc": "7077:119:9",
															"nodeType": "YulIf",
															"src": "7077:119:9"
														},
														{
															"nativeSrc": "7206:287:9",
															"nodeType": "YulBlock",
															"src": "7206:287:9",
															"statements": [
																{
																	"nativeSrc": "7221:45:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7221:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7252:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7252:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7263:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7263:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7248:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7248:3:9"
																				},
																				"nativeSrc": "7248:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7248:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7235:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7235:12:9"
																		},
																		"nativeSrc": "7235:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7235:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7225:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7225:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7313:83:9",
																		"nodeType": "YulBlock",
																		"src": "7313:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7315:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7315:77:9"
																					},
																					"nativeSrc": "7315:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7315:79:9"
																				},
																				"nativeSrc": "7315:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7315:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7285:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7285:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7293:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7293:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7282:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7282:2:9"
																		},
																		"nativeSrc": "7282:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:30:9"
																	},
																	"nativeSrc": "7279:117:9",
																	"nodeType": "YulIf",
																	"src": "7279:117:9"
																},
																{
																	"nativeSrc": "7410:73:9",
																	"nodeType": "YulAssignment",
																	"src": "7410:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7455:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7455:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7466:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7466:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7451:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7451:3:9"
																				},
																				"nativeSrc": "7451:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7451:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7475:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7475:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7420:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "7420:30:9"
																		},
																		"nativeSrc": "7420:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7420:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7410:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7410:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7503:288:9",
															"nodeType": "YulBlock",
															"src": "7503:288:9",
															"statements": [
																{
																	"nativeSrc": "7518:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7518:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7549:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7549:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7560:2:9",
																						"nodeType": "YulLiteral",
																						"src": "7560:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7545:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7545:3:9"
																				},
																				"nativeSrc": "7545:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7545:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7532:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7532:12:9"
																		},
																		"nativeSrc": "7532:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7522:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7522:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7611:83:9",
																		"nodeType": "YulBlock",
																		"src": "7611:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7613:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7613:77:9"
																					},
																					"nativeSrc": "7613:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7613:79:9"
																				},
																				"nativeSrc": "7613:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7613:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7583:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7583:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7591:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7591:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7580:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7580:2:9"
																		},
																		"nativeSrc": "7580:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7580:30:9"
																	},
																	"nativeSrc": "7577:117:9",
																	"nodeType": "YulIf",
																	"src": "7577:117:9"
																},
																{
																	"nativeSrc": "7708:73:9",
																	"nodeType": "YulAssignment",
																	"src": "7708:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7753:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7753:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7764:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7764:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7749:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7749:3:9"
																				},
																				"nativeSrc": "7749:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7749:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7773:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7773:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7718:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "7718:30:9"
																		},
																		"nativeSrc": "7718:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7718:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7708:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7708:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "6964:834:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7029:9:9",
														"nodeType": "YulTypedName",
														"src": "7029:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7040:7:9",
														"nodeType": "YulTypedName",
														"src": "7040:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7052:6:9",
														"nodeType": "YulTypedName",
														"src": "7052:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7060:6:9",
														"nodeType": "YulTypedName",
														"src": "7060:6:9",
														"type": ""
													}
												],
												"src": "6964:834:9"
											},
											{
												"body": {
													"nativeSrc": "7870:263:9",
													"nodeType": "YulBlock",
													"src": "7870:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7916:83:9",
																"nodeType": "YulBlock",
																"src": "7916:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7918:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7918:77:9"
																			},
																			"nativeSrc": "7918:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7918:79:9"
																		},
																		"nativeSrc": "7918:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7918:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7891:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7891:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7900:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7900:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7887:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7887:3:9"
																		},
																		"nativeSrc": "7887:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7912:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7883:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:9"
																},
																"nativeSrc": "7883:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7883:32:9"
															},
															"nativeSrc": "7880:119:9",
															"nodeType": "YulIf",
															"src": "7880:119:9"
														},
														{
															"nativeSrc": "8009:117:9",
															"nodeType": "YulBlock",
															"src": "8009:117:9",
															"statements": [
																{
																	"nativeSrc": "8024:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8024:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8038:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8038:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8028:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8028:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8053:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8053:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8088:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8088:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8099:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8099:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8084:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8084:3:9"
																				},
																				"nativeSrc": "8084:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8084:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8108:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8108:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8063:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8063:20:9"
																		},
																		"nativeSrc": "8063:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8063:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8053:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8053:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7804:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7840:9:9",
														"nodeType": "YulTypedName",
														"src": "7840:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7851:7:9",
														"nodeType": "YulTypedName",
														"src": "7851:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7863:6:9",
														"nodeType": "YulTypedName",
														"src": "7863:6:9",
														"type": ""
													}
												],
												"src": "7804:329:9"
											},
											{
												"body": {
													"nativeSrc": "8204:53:9",
													"nodeType": "YulBlock",
													"src": "8204:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8221:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8221:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8244:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8244:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8226:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8226:17:9"
																		},
																		"nativeSrc": "8226:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8226:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8214:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8214:6:9"
																},
																"nativeSrc": "8214:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8214:37:9"
															},
															"nativeSrc": "8214:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8214:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8139:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8192:5:9",
														"nodeType": "YulTypedName",
														"src": "8192:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8199:3:9",
														"nodeType": "YulTypedName",
														"src": "8199:3:9",
														"type": ""
													}
												],
												"src": "8139:118:9"
											},
											{
												"body": {
													"nativeSrc": "8361:124:9",
													"nodeType": "YulBlock",
													"src": "8361:124:9",
													"statements": [
														{
															"nativeSrc": "8371:26:9",
															"nodeType": "YulAssignment",
															"src": "8371:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8383:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8383:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8394:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8394:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8379:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8379:3:9"
																},
																"nativeSrc": "8379:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8379:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8371:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8371:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8451:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8451:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8464:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8475:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8475:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:9"
																		},
																		"nativeSrc": "8460:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8460:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8407:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8407:43:9"
																},
																"nativeSrc": "8407:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8407:71:9"
															},
															"nativeSrc": "8407:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8407:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8263:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8333:9:9",
														"nodeType": "YulTypedName",
														"src": "8333:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8345:6:9",
														"nodeType": "YulTypedName",
														"src": "8345:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8356:4:9",
														"nodeType": "YulTypedName",
														"src": "8356:4:9",
														"type": ""
													}
												],
												"src": "8263:222:9"
											},
											{
												"body": {
													"nativeSrc": "8574:391:9",
													"nodeType": "YulBlock",
													"src": "8574:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8620:83:9",
																"nodeType": "YulBlock",
																"src": "8620:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8622:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8622:77:9"
																			},
																			"nativeSrc": "8622:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8622:79:9"
																		},
																		"nativeSrc": "8622:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8622:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8595:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8595:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8604:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8604:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8591:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:9"
																		},
																		"nativeSrc": "8591:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8591:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8616:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8587:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8587:3:9"
																},
																"nativeSrc": "8587:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8587:32:9"
															},
															"nativeSrc": "8584:119:9",
															"nodeType": "YulIf",
															"src": "8584:119:9"
														},
														{
															"nativeSrc": "8713:117:9",
															"nodeType": "YulBlock",
															"src": "8713:117:9",
															"statements": [
																{
																	"nativeSrc": "8728:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8728:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8742:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8742:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8732:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8732:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8757:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8757:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8792:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8792:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8803:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8803:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8788:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8788:3:9"
																				},
																				"nativeSrc": "8788:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8788:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8812:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8767:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8767:20:9"
																		},
																		"nativeSrc": "8767:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8767:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8757:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8757:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8840:118:9",
															"nodeType": "YulBlock",
															"src": "8840:118:9",
															"statements": [
																{
																	"nativeSrc": "8855:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8855:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8869:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8869:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8859:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8859:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8885:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8885:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8920:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8920:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8931:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8931:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8916:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8916:3:9"
																				},
																				"nativeSrc": "8916:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8916:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8940:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8940:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8895:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8895:20:9"
																		},
																		"nativeSrc": "8895:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8895:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8885:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8885:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8491:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8536:9:9",
														"nodeType": "YulTypedName",
														"src": "8536:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8547:7:9",
														"nodeType": "YulTypedName",
														"src": "8547:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8559:6:9",
														"nodeType": "YulTypedName",
														"src": "8559:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8567:6:9",
														"nodeType": "YulTypedName",
														"src": "8567:6:9",
														"type": ""
													}
												],
												"src": "8491:474:9"
											},
											{
												"body": {
													"nativeSrc": "8999:152:9",
													"nodeType": "YulBlock",
													"src": "8999:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9016:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9016:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9019:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9019:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9009:6:9"
																},
																"nativeSrc": "9009:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9009:88:9"
															},
															"nativeSrc": "9009:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9009:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9113:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9113:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9116:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9116:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9106:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:9"
																},
																"nativeSrc": "9106:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9106:15:9"
															},
															"nativeSrc": "9106:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9106:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9137:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9137:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9140:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9140:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9130:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:9"
																},
																"nativeSrc": "9130:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9130:15:9"
															},
															"nativeSrc": "9130:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9130:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8971:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8971:180:9"
											},
											{
												"body": {
													"nativeSrc": "9208:269:9",
													"nodeType": "YulBlock",
													"src": "9208:269:9",
													"statements": [
														{
															"nativeSrc": "9218:22:9",
															"nodeType": "YulAssignment",
															"src": "9218:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9232:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9232:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9238:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9238:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9228:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:9"
																},
																"nativeSrc": "9228:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9228:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9218:6:9"
																}
															]
														},
														{
															"nativeSrc": "9249:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9249:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9279:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9285:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9285:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9275:3:9"
																},
																"nativeSrc": "9275:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9275:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9253:18:9",
																	"nodeType": "YulTypedName",
																	"src": "9253:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9326:51:9",
																"nodeType": "YulBlock",
																"src": "9326:51:9",
																"statements": [
																	{
																		"nativeSrc": "9340:27:9",
																		"nodeType": "YulAssignment",
																		"src": "9340:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9354:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9354:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9362:4:9",
																					"nodeType": "YulLiteral",
																					"src": "9362:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9350:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9350:3:9"
																			},
																			"nativeSrc": "9350:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9350:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9340:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9306:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9306:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9299:6:9"
																},
																"nativeSrc": "9299:26:9",
																"nodeType": "YulFunctionCall",
																"src": "9299:26:9"
															},
															"nativeSrc": "9296:81:9",
															"nodeType": "YulIf",
															"src": "9296:81:9"
														},
														{
															"body": {
																"nativeSrc": "9429:42:9",
																"nodeType": "YulBlock",
																"src": "9429:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9443:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9443:16:9"
																			},
																			"nativeSrc": "9443:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9443:18:9"
																		},
																		"nativeSrc": "9443:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9443:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9393:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9393:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9416:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9416:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9424:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9424:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9413:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9413:2:9"
																		},
																		"nativeSrc": "9413:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9413:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9390:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9390:2:9"
																},
																"nativeSrc": "9390:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9390:38:9"
															},
															"nativeSrc": "9387:84:9",
															"nodeType": "YulIf",
															"src": "9387:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9157:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9192:4:9",
														"nodeType": "YulTypedName",
														"src": "9192:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9201:6:9",
														"nodeType": "YulTypedName",
														"src": "9201:6:9",
														"type": ""
													}
												],
												"src": "9157:320:9"
											},
											{
												"body": {
													"nativeSrc": "9589:60:9",
													"nodeType": "YulBlock",
													"src": "9589:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9611:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9611:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9619:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:9"
																		},
																		"nativeSrc": "9607:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "9623:18:9",
																		"nodeType": "YulLiteral",
																		"src": "9623:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:9"
																},
																"nativeSrc": "9600:42:9",
																"nodeType": "YulFunctionCall",
																"src": "9600:42:9"
															},
															"nativeSrc": "9600:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "9600:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "9483:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9581:6:9",
														"nodeType": "YulTypedName",
														"src": "9581:6:9",
														"type": ""
													}
												],
												"src": "9483:166:9"
											},
											{
												"body": {
													"nativeSrc": "9801:220:9",
													"nodeType": "YulBlock",
													"src": "9801:220:9",
													"statements": [
														{
															"nativeSrc": "9811:74:9",
															"nodeType": "YulAssignment",
															"src": "9811:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9877:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9882:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9882:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9818:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9818:58:9"
																},
																"nativeSrc": "9818:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9818:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9983:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "9894:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9894:88:9"
																},
																"nativeSrc": "9894:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9894:93:9"
															},
															"nativeSrc": "9894:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9894:93:9"
														},
														{
															"nativeSrc": "9996:19:9",
															"nodeType": "YulAssignment",
															"src": "9996:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10007:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10012:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10003:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:9"
																},
																"nativeSrc": "10003:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10003:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9655:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9789:3:9",
														"nodeType": "YulTypedName",
														"src": "9789:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9797:3:9",
														"nodeType": "YulTypedName",
														"src": "9797:3:9",
														"type": ""
													}
												],
												"src": "9655:366:9"
											},
											{
												"body": {
													"nativeSrc": "10198:248:9",
													"nodeType": "YulBlock",
													"src": "10198:248:9",
													"statements": [
														{
															"nativeSrc": "10208:26:9",
															"nodeType": "YulAssignment",
															"src": "10208:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10220:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10220:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10231:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10216:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10216:3:9"
																},
																"nativeSrc": "10216:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10216:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10208:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10208:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10255:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10266:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10266:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10251:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:9"
																		},
																		"nativeSrc": "10251:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10251:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10274:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10274:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10280:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10280:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10270:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:9"
																		},
																		"nativeSrc": "10270:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10270:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10244:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:9"
																},
																"nativeSrc": "10244:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10244:47:9"
															},
															"nativeSrc": "10244:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10244:47:9"
														},
														{
															"nativeSrc": "10300:139:9",
															"nodeType": "YulAssignment",
															"src": "10300:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10434:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10434:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10308:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10308:124:9"
																},
																"nativeSrc": "10308:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10308:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10300:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10300:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10027:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10178:9:9",
														"nodeType": "YulTypedName",
														"src": "10178:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10193:4:9",
														"nodeType": "YulTypedName",
														"src": "10193:4:9",
														"type": ""
													}
												],
												"src": "10027:419:9"
											},
											{
												"body": {
													"nativeSrc": "10558:114:9",
													"nodeType": "YulBlock",
													"src": "10558:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10580:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10580:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10588:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10588:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10576:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:9"
																		},
																		"nativeSrc": "10576:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10576:14:9"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "10592:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10592:34:9",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:9"
																},
																"nativeSrc": "10569:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10569:58:9"
															},
															"nativeSrc": "10569:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10569:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10648:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10648:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10656:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10656:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10644:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10644:3:9"
																		},
																		"nativeSrc": "10644:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:15:9"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "10661:3:9",
																		"nodeType": "YulLiteral",
																		"src": "10661:3:9",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10637:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10637:6:9"
																},
																"nativeSrc": "10637:28:9",
																"nodeType": "YulFunctionCall",
																"src": "10637:28:9"
															},
															"nativeSrc": "10637:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "10637:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "10452:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10550:6:9",
														"nodeType": "YulTypedName",
														"src": "10550:6:9",
														"type": ""
													}
												],
												"src": "10452:220:9"
											},
											{
												"body": {
													"nativeSrc": "10824:220:9",
													"nodeType": "YulBlock",
													"src": "10824:220:9",
													"statements": [
														{
															"nativeSrc": "10834:74:9",
															"nodeType": "YulAssignment",
															"src": "10834:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10900:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10900:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10905:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10905:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10841:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10841:58:9"
																},
																"nativeSrc": "10841:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10841:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10834:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10834:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11006:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11006:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "10917:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10917:88:9"
																},
																"nativeSrc": "10917:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10917:93:9"
															},
															"nativeSrc": "10917:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10917:93:9"
														},
														{
															"nativeSrc": "11019:19:9",
															"nodeType": "YulAssignment",
															"src": "11019:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11030:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11030:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11035:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11035:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11026:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11026:3:9"
																},
																"nativeSrc": "11026:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11026:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11019:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10678:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10812:3:9",
														"nodeType": "YulTypedName",
														"src": "10812:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10820:3:9",
														"nodeType": "YulTypedName",
														"src": "10820:3:9",
														"type": ""
													}
												],
												"src": "10678:366:9"
											},
											{
												"body": {
													"nativeSrc": "11221:248:9",
													"nodeType": "YulBlock",
													"src": "11221:248:9",
													"statements": [
														{
															"nativeSrc": "11231:26:9",
															"nodeType": "YulAssignment",
															"src": "11231:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11243:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11243:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11254:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11254:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11239:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11239:3:9"
																},
																"nativeSrc": "11239:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11239:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11231:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11231:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11278:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11289:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11289:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11274:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11274:3:9"
																		},
																		"nativeSrc": "11274:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11274:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11297:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11297:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11303:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11303:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11293:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11293:3:9"
																		},
																		"nativeSrc": "11293:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11293:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11267:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11267:6:9"
																},
																"nativeSrc": "11267:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11267:47:9"
															},
															"nativeSrc": "11267:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11267:47:9"
														},
														{
															"nativeSrc": "11323:139:9",
															"nodeType": "YulAssignment",
															"src": "11323:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11457:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11457:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11331:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11331:124:9"
																},
																"nativeSrc": "11331:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11331:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11323:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11323:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11050:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11201:9:9",
														"nodeType": "YulTypedName",
														"src": "11201:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11216:4:9",
														"nodeType": "YulTypedName",
														"src": "11216:4:9",
														"type": ""
													}
												],
												"src": "11050:419:9"
											},
											{
												"body": {
													"nativeSrc": "11529:87:9",
													"nodeType": "YulBlock",
													"src": "11529:87:9",
													"statements": [
														{
															"nativeSrc": "11539:11:9",
															"nodeType": "YulAssignment",
															"src": "11539:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "11547:3:9",
																"nodeType": "YulIdentifier",
																"src": "11547:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11539:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11567:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11567:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11570:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11570:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11560:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11560:6:9"
																},
																"nativeSrc": "11560:14:9",
																"nodeType": "YulFunctionCall",
																"src": "11560:14:9"
															},
															"nativeSrc": "11560:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "11560:14:9"
														},
														{
															"nativeSrc": "11583:26:9",
															"nodeType": "YulAssignment",
															"src": "11583:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11601:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11601:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11604:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11604:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11591:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "11591:9:9"
																},
																"nativeSrc": "11591:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11591:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11583:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "11475:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11516:3:9",
														"nodeType": "YulTypedName",
														"src": "11516:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11524:4:9",
														"nodeType": "YulTypedName",
														"src": "11524:4:9",
														"type": ""
													}
												],
												"src": "11475:141:9"
											},
											{
												"body": {
													"nativeSrc": "11666:49:9",
													"nodeType": "YulBlock",
													"src": "11666:49:9",
													"statements": [
														{
															"nativeSrc": "11676:33:9",
															"nodeType": "YulAssignment",
															"src": "11676:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11694:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11694:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11701:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11701:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11690:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11690:3:9"
																		},
																		"nativeSrc": "11690:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11690:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11706:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11706:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11686:3:9"
																},
																"nativeSrc": "11686:23:9",
																"nodeType": "YulFunctionCall",
																"src": "11686:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11676:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11676:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "11622:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11649:5:9",
														"nodeType": "YulTypedName",
														"src": "11649:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11659:6:9",
														"nodeType": "YulTypedName",
														"src": "11659:6:9",
														"type": ""
													}
												],
												"src": "11622:93:9"
											},
											{
												"body": {
													"nativeSrc": "11774:54:9",
													"nodeType": "YulBlock",
													"src": "11774:54:9",
													"statements": [
														{
															"nativeSrc": "11784:37:9",
															"nodeType": "YulAssignment",
															"src": "11784:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11809:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11809:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11815:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11815:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11805:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11805:3:9"
																},
																"nativeSrc": "11805:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11805:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11784:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "11784:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "11721:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11749:4:9",
														"nodeType": "YulTypedName",
														"src": "11749:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11755:5:9",
														"nodeType": "YulTypedName",
														"src": "11755:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11765:8:9",
														"nodeType": "YulTypedName",
														"src": "11765:8:9",
														"type": ""
													}
												],
												"src": "11721:107:9"
											},
											{
												"body": {
													"nativeSrc": "11910:317:9",
													"nodeType": "YulBlock",
													"src": "11910:317:9",
													"statements": [
														{
															"nativeSrc": "11920:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11920:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "11941:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "11941:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11953:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11953:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11937:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:9"
																},
																"nativeSrc": "11937:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11937:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "11924:9:9",
																	"nodeType": "YulTypedName",
																	"src": "11924:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11964:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11964:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11995:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11995:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12006:66:9",
																		"nodeType": "YulLiteral",
																		"src": "12006:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11976:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "11976:18:9"
																},
																"nativeSrc": "11976:97:9",
																"nodeType": "YulFunctionCall",
																"src": "11976:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11968:4:9",
																	"nodeType": "YulTypedName",
																	"src": "11968:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12082:51:9",
															"nodeType": "YulAssignment",
															"src": "12082:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12113:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12113:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "12124:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12124:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12094:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "12094:18:9"
																},
																"nativeSrc": "12094:39:9",
																"nodeType": "YulFunctionCall",
																"src": "12094:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "12082:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "12082:8:9"
																}
															]
														},
														{
															"nativeSrc": "12142:30:9",
															"nodeType": "YulAssignment",
															"src": "12142:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12155:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12155:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "12166:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12166:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12162:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12162:3:9"
																		},
																		"nativeSrc": "12162:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12162:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12151:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:9"
																},
																"nativeSrc": "12151:21:9",
																"nodeType": "YulFunctionCall",
																"src": "12151:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12142:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12142:5:9"
																}
															]
														},
														{
															"nativeSrc": "12181:40:9",
															"nodeType": "YulAssignment",
															"src": "12181:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12194:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12194:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "12205:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "12205:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "12215:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12215:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:9"
																		},
																		"nativeSrc": "12201:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12201:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12191:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12191:2:9"
																},
																"nativeSrc": "12191:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12191:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12181:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12181:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "11834:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11871:5:9",
														"nodeType": "YulTypedName",
														"src": "11871:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "11878:10:9",
														"nodeType": "YulTypedName",
														"src": "11878:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "11890:8:9",
														"nodeType": "YulTypedName",
														"src": "11890:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11903:6:9",
														"nodeType": "YulTypedName",
														"src": "11903:6:9",
														"type": ""
													}
												],
												"src": "11834:393:9"
											},
											{
												"body": {
													"nativeSrc": "12265:28:9",
													"nodeType": "YulBlock",
													"src": "12265:28:9",
													"statements": [
														{
															"nativeSrc": "12275:12:9",
															"nodeType": "YulAssignment",
															"src": "12275:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "12282:5:9",
																"nodeType": "YulIdentifier",
																"src": "12282:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12275:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12233:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12251:5:9",
														"nodeType": "YulTypedName",
														"src": "12251:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12261:3:9",
														"nodeType": "YulTypedName",
														"src": "12261:3:9",
														"type": ""
													}
												],
												"src": "12233:60:9"
											},
											{
												"body": {
													"nativeSrc": "12359:82:9",
													"nodeType": "YulBlock",
													"src": "12359:82:9",
													"statements": [
														{
															"nativeSrc": "12369:66:9",
															"nodeType": "YulAssignment",
															"src": "12369:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12427:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12427:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "12409:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "12409:17:9"
																				},
																				"nativeSrc": "12409:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12409:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12400:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "12400:8:9"
																		},
																		"nativeSrc": "12400:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12400:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12382:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12382:17:9"
																},
																"nativeSrc": "12382:53:9",
																"nodeType": "YulFunctionCall",
																"src": "12382:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12369:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "12369:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "12299:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12339:5:9",
														"nodeType": "YulTypedName",
														"src": "12339:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12349:9:9",
														"nodeType": "YulTypedName",
														"src": "12349:9:9",
														"type": ""
													}
												],
												"src": "12299:142:9"
											},
											{
												"body": {
													"nativeSrc": "12494:28:9",
													"nodeType": "YulBlock",
													"src": "12494:28:9",
													"statements": [
														{
															"nativeSrc": "12504:12:9",
															"nodeType": "YulAssignment",
															"src": "12504:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "12511:5:9",
																"nodeType": "YulIdentifier",
																"src": "12511:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12504:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12504:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "12447:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12480:5:9",
														"nodeType": "YulTypedName",
														"src": "12480:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12490:3:9",
														"nodeType": "YulTypedName",
														"src": "12490:3:9",
														"type": ""
													}
												],
												"src": "12447:75:9"
											},
											{
												"body": {
													"nativeSrc": "12604:193:9",
													"nodeType": "YulBlock",
													"src": "12604:193:9",
													"statements": [
														{
															"nativeSrc": "12614:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12614:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "12669:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "12669:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "12638:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "12638:30:9"
																},
																"nativeSrc": "12638:39:9",
																"nodeType": "YulFunctionCall",
																"src": "12638:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "12618:16:9",
																	"nodeType": "YulTypedName",
																	"src": "12618:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12693:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12693:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12733:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "12733:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12727:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "12727:5:9"
																				},
																				"nativeSrc": "12727:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12727:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "12740:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12740:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "12772:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "12772:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "12748:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "12748:23:9"
																				},
																				"nativeSrc": "12748:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12748:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "12699:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "12699:27:9"
																		},
																		"nativeSrc": "12699:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12699:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "12686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12686:6:9"
																},
																"nativeSrc": "12686:105:9",
																"nodeType": "YulFunctionCall",
																"src": "12686:105:9"
															},
															"nativeSrc": "12686:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "12686:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "12528:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12581:4:9",
														"nodeType": "YulTypedName",
														"src": "12581:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12587:6:9",
														"nodeType": "YulTypedName",
														"src": "12587:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12595:7:9",
														"nodeType": "YulTypedName",
														"src": "12595:7:9",
														"type": ""
													}
												],
												"src": "12528:269:9"
											},
											{
												"body": {
													"nativeSrc": "12852:24:9",
													"nodeType": "YulBlock",
													"src": "12852:24:9",
													"statements": [
														{
															"nativeSrc": "12862:8:9",
															"nodeType": "YulAssignment",
															"src": "12862:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "12869:1:9",
																"nodeType": "YulLiteral",
																"src": "12869:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12862:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12862:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "12803:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12848:3:9",
														"nodeType": "YulTypedName",
														"src": "12848:3:9",
														"type": ""
													}
												],
												"src": "12803:73:9"
											},
											{
												"body": {
													"nativeSrc": "12935:136:9",
													"nodeType": "YulBlock",
													"src": "12935:136:9",
													"statements": [
														{
															"nativeSrc": "12945:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12945:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "12959:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "12959:30:9"
																},
																"nativeSrc": "12959:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12959:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "12949:6:9",
																	"nodeType": "YulTypedName",
																	"src": "12949:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13044:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13044:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13050:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13050:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "13058:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13058:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "13000:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13000:43:9"
																},
																"nativeSrc": "13000:65:9",
																"nodeType": "YulFunctionCall",
																"src": "13000:65:9"
															},
															"nativeSrc": "13000:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "13000:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "12882:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12921:4:9",
														"nodeType": "YulTypedName",
														"src": "12921:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12927:6:9",
														"nodeType": "YulTypedName",
														"src": "12927:6:9",
														"type": ""
													}
												],
												"src": "12882:189:9"
											},
											{
												"body": {
													"nativeSrc": "13127:136:9",
													"nodeType": "YulBlock",
													"src": "13127:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13194:63:9",
																"nodeType": "YulBlock",
																"src": "13194:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13238:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "13238:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13245:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13245:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "13208:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "13208:29:9"
																			},
																			"nativeSrc": "13208:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13208:39:9"
																		},
																		"nativeSrc": "13208:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13208:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13147:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13147:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13154:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13154:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13144:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "13144:2:9"
																},
																"nativeSrc": "13144:14:9",
																"nodeType": "YulFunctionCall",
																"src": "13144:14:9"
															},
															"nativeSrc": "13137:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13159:26:9",
																"nodeType": "YulBlock",
																"src": "13159:26:9",
																"statements": [
																	{
																		"nativeSrc": "13161:22:9",
																		"nodeType": "YulAssignment",
																		"src": "13161:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13174:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "13174:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13181:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13181:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13170:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "13170:3:9"
																			},
																			"nativeSrc": "13170:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13170:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "13161:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13161:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13141:2:9",
																"nodeType": "YulBlock",
																"src": "13141:2:9",
																"statements": []
															},
															"src": "13137:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "13077:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13115:5:9",
														"nodeType": "YulTypedName",
														"src": "13115:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13122:3:9",
														"nodeType": "YulTypedName",
														"src": "13122:3:9",
														"type": ""
													}
												],
												"src": "13077:186:9"
											},
											{
												"body": {
													"nativeSrc": "13348:464:9",
													"nodeType": "YulBlock",
													"src": "13348:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13374:431:9",
																"nodeType": "YulBlock",
																"src": "13374:431:9",
																"statements": [
																	{
																		"nativeSrc": "13388:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13388:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "13436:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "13436:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "13404:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "13404:31:9"
																			},
																			"nativeSrc": "13404:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13404:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "13392:8:9",
																				"nodeType": "YulTypedName",
																				"src": "13392:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13455:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13455:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "13478:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "13478:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "13506:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "13506:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "13488:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "13488:17:9"
																					},
																					"nativeSrc": "13488:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "13488:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13474:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "13474:3:9"
																			},
																			"nativeSrc": "13474:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13474:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "13459:11:9",
																				"nodeType": "YulTypedName",
																				"src": "13459:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13675:27:9",
																			"nodeType": "YulBlock",
																			"src": "13675:27:9",
																			"statements": [
																				{
																					"nativeSrc": "13677:23:9",
																					"nodeType": "YulAssignment",
																					"src": "13677:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "13692:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "13692:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13677:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "13677:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13659:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "13659:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13671:2:9",
																					"nodeType": "YulLiteral",
																					"src": "13671:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13656:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "13656:2:9"
																			},
																			"nativeSrc": "13656:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13656:18:9"
																		},
																		"nativeSrc": "13653:49:9",
																		"nodeType": "YulIf",
																		"src": "13653:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "13744:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "13744:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "13761:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "13761:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13789:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "13789:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "13771:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "13771:17:9"
																							},
																							"nativeSrc": "13771:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "13771:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13757:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "13757:3:9"
																					},
																					"nativeSrc": "13757:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "13757:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "13715:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "13715:28:9"
																			},
																			"nativeSrc": "13715:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13715:80:9"
																		},
																		"nativeSrc": "13715:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13715:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "13365:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13365:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13370:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13370:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13362:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "13362:2:9"
																},
																"nativeSrc": "13362:11:9",
																"nodeType": "YulFunctionCall",
																"src": "13362:11:9"
															},
															"nativeSrc": "13359:446:9",
															"nodeType": "YulIf",
															"src": "13359:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "13269:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13324:5:9",
														"nodeType": "YulTypedName",
														"src": "13324:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13331:3:9",
														"nodeType": "YulTypedName",
														"src": "13331:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "13336:10:9",
														"nodeType": "YulTypedName",
														"src": "13336:10:9",
														"type": ""
													}
												],
												"src": "13269:543:9"
											},
											{
												"body": {
													"nativeSrc": "13881:54:9",
													"nodeType": "YulBlock",
													"src": "13881:54:9",
													"statements": [
														{
															"nativeSrc": "13891:37:9",
															"nodeType": "YulAssignment",
															"src": "13891:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13916:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13916:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13922:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13922:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13912:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13912:3:9"
																},
																"nativeSrc": "13912:16:9",
																"nodeType": "YulFunctionCall",
																"src": "13912:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13891:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "13891:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "13818:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13856:4:9",
														"nodeType": "YulTypedName",
														"src": "13856:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13862:5:9",
														"nodeType": "YulTypedName",
														"src": "13862:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13872:8:9",
														"nodeType": "YulTypedName",
														"src": "13872:8:9",
														"type": ""
													}
												],
												"src": "13818:117:9"
											},
											{
												"body": {
													"nativeSrc": "13992:118:9",
													"nodeType": "YulBlock",
													"src": "13992:118:9",
													"statements": [
														{
															"nativeSrc": "14002:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14002:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14051:1:9",
																						"nodeType": "YulLiteral",
																						"src": "14051:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "14054:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "14054:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "14047:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14047:3:9"
																				},
																				"nativeSrc": "14047:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14047:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14066:1:9",
																						"nodeType": "YulLiteral",
																						"src": "14066:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14062:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14062:3:9"
																				},
																				"nativeSrc": "14062:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14062:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "14018:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "14018:28:9"
																		},
																		"nativeSrc": "14018:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14018:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "14014:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14014:3:9"
																},
																"nativeSrc": "14014:56:9",
																"nodeType": "YulFunctionCall",
																"src": "14014:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14006:4:9",
																	"nodeType": "YulTypedName",
																	"src": "14006:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14079:25:9",
															"nodeType": "YulAssignment",
															"src": "14079:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14093:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14093:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "14099:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14099:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14089:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14089:3:9"
																},
																"nativeSrc": "14089:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14089:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14079:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14079:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "13941:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13969:4:9",
														"nodeType": "YulTypedName",
														"src": "13969:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "13975:5:9",
														"nodeType": "YulTypedName",
														"src": "13975:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13985:6:9",
														"nodeType": "YulTypedName",
														"src": "13985:6:9",
														"type": ""
													}
												],
												"src": "13941:169:9"
											},
											{
												"body": {
													"nativeSrc": "14196:214:9",
													"nodeType": "YulBlock",
													"src": "14196:214:9",
													"statements": [
														{
															"nativeSrc": "14329:37:9",
															"nodeType": "YulAssignment",
															"src": "14329:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14356:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14356:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "14362:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14362:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "14337:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "14337:18:9"
																},
																"nativeSrc": "14337:29:9",
																"nodeType": "YulFunctionCall",
																"src": "14337:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14329:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14329:4:9"
																}
															]
														},
														{
															"nativeSrc": "14375:29:9",
															"nodeType": "YulAssignment",
															"src": "14375:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14386:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14386:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14396:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14396:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "14399:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "14399:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "14392:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:9"
																		},
																		"nativeSrc": "14392:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14383:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14383:2:9"
																},
																"nativeSrc": "14383:21:9",
																"nodeType": "YulFunctionCall",
																"src": "14383:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "14375:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14375:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "14115:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14177:4:9",
														"nodeType": "YulTypedName",
														"src": "14177:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14183:3:9",
														"nodeType": "YulTypedName",
														"src": "14183:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "14191:4:9",
														"nodeType": "YulTypedName",
														"src": "14191:4:9",
														"type": ""
													}
												],
												"src": "14115:295:9"
											},
											{
												"body": {
													"nativeSrc": "14507:1303:9",
													"nodeType": "YulBlock",
													"src": "14507:1303:9",
													"statements": [
														{
															"nativeSrc": "14518:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14518:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14565:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14565:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14532:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "14532:32:9"
																},
																"nativeSrc": "14532:37:9",
																"nodeType": "YulFunctionCall",
																"src": "14532:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14522:6:9",
																	"nodeType": "YulTypedName",
																	"src": "14522:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14654:22:9",
																"nodeType": "YulBlock",
																"src": "14654:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14656:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14656:16:9"
																			},
																			"nativeSrc": "14656:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14656:18:9"
																		},
																		"nativeSrc": "14656:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14656:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14626:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14626:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14634:18:9",
																		"nodeType": "YulLiteral",
																		"src": "14634:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14623:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14623:2:9"
																},
																"nativeSrc": "14623:30:9",
																"nodeType": "YulFunctionCall",
																"src": "14623:30:9"
															},
															"nativeSrc": "14620:56:9",
															"nodeType": "YulIf",
															"src": "14620:56:9"
														},
														{
															"nativeSrc": "14686:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14686:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "14732:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14732:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "14726:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "14726:5:9"
																		},
																		"nativeSrc": "14726:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14726:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "14700:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "14700:25:9"
																},
																"nativeSrc": "14700:38:9",
																"nodeType": "YulFunctionCall",
																"src": "14700:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "14690:6:9",
																	"nodeType": "YulTypedName",
																	"src": "14690:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14831:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14831:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "14837:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14837:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "14845:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14845:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "14785:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "14785:45:9"
																},
																"nativeSrc": "14785:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14785:67:9"
															},
															"nativeSrc": "14785:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "14785:67:9"
														},
														{
															"nativeSrc": "14862:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14862:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "14879:1:9",
																"nodeType": "YulLiteral",
																"src": "14879:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14866:9:9",
																	"nodeType": "YulTypedName",
																	"src": "14866:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14890:17:9",
															"nodeType": "YulAssignment",
															"src": "14890:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "14903:4:9",
																"nodeType": "YulLiteral",
																"src": "14903:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14890:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "14890:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14954:611:9",
																		"nodeType": "YulBlock",
																		"src": "14954:611:9",
																		"statements": [
																			{
																				"nativeSrc": "14968:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14968:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14987:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "14987:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14999:4:9",
																									"nodeType": "YulLiteral",
																									"src": "14999:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14995:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "14995:3:9"
																							},
																							"nativeSrc": "14995:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "14995:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14983:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "14983:3:9"
																					},
																					"nativeSrc": "14983:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "14983:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14972:7:9",
																						"nodeType": "YulTypedName",
																						"src": "14972:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15019:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15019:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15065:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "15065:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "15033:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "15033:31:9"
																					},
																					"nativeSrc": "15033:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15033:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15023:6:9",
																						"nodeType": "YulTypedName",
																						"src": "15023:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15083:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15083:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15092:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15092:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15087:1:9",
																						"nodeType": "YulTypedName",
																						"src": "15087:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15151:163:9",
																					"nodeType": "YulBlock",
																					"src": "15151:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15176:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "15176:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15194:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "15194:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15199:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "15199:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15190:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "15190:3:9"
																												},
																												"nativeSrc": "15190:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "15190:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "15184:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "15184:5:9"
																										},
																										"nativeSrc": "15184:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "15184:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15169:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "15169:6:9"
																								},
																								"nativeSrc": "15169:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15169:42:9"
																							},
																							"nativeSrc": "15169:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "15169:42:9"
																						},
																						{
																							"nativeSrc": "15228:24:9",
																							"nodeType": "YulAssignment",
																							"src": "15228:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15242:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "15242:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15250:1:9",
																										"nodeType": "YulLiteral",
																										"src": "15250:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15238:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "15238:3:9"
																								},
																								"nativeSrc": "15238:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15238:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "15228:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "15228:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "15269:31:9",
																							"nodeType": "YulAssignment",
																							"src": "15269:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "15286:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "15286:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15297:2:9",
																										"nodeType": "YulLiteral",
																										"src": "15297:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15282:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "15282:3:9"
																								},
																								"nativeSrc": "15282:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15282:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "15269:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "15269:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15117:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "15117:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15120:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "15120:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15114:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "15114:2:9"
																					},
																					"nativeSrc": "15114:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15114:14:9"
																				},
																				"nativeSrc": "15106:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15129:21:9",
																					"nodeType": "YulBlock",
																					"src": "15129:21:9",
																					"statements": [
																						{
																							"nativeSrc": "15131:17:9",
																							"nodeType": "YulAssignment",
																							"src": "15131:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15140:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "15140:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15143:4:9",
																										"nodeType": "YulLiteral",
																										"src": "15143:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15136:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "15136:3:9"
																								},
																								"nativeSrc": "15136:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15136:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15131:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "15131:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15110:3:9",
																					"nodeType": "YulBlock",
																					"src": "15110:3:9",
																					"statements": []
																				},
																				"src": "15106:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "15350:156:9",
																					"nodeType": "YulBlock",
																					"src": "15350:156:9",
																					"statements": [
																						{
																							"nativeSrc": "15368:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "15368:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15395:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "15395:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15400:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "15400:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15391:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "15391:3:9"
																										},
																										"nativeSrc": "15391:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "15391:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15385:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "15385:5:9"
																								},
																								"nativeSrc": "15385:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15385:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "15372:9:9",
																									"nodeType": "YulTypedName",
																									"src": "15372:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15435:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "15435:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "15462:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "15462:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "15477:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "15477:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "15485:4:9",
																														"nodeType": "YulLiteral",
																														"src": "15485:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "15473:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "15473:3:9"
																												},
																												"nativeSrc": "15473:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "15473:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "15443:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "15443:18:9"
																										},
																										"nativeSrc": "15443:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "15443:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15428:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "15428:6:9"
																								},
																								"nativeSrc": "15428:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15428:64:9"
																							},
																							"nativeSrc": "15428:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "15428:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15333:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "15333:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "15342:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "15342:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15330:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "15330:2:9"
																					},
																					"nativeSrc": "15330:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15330:19:9"
																				},
																				"nativeSrc": "15327:179:9",
																				"nodeType": "YulIf",
																				"src": "15327:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15526:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "15526:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "15540:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "15540:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "15548:1:9",
																											"nodeType": "YulLiteral",
																											"src": "15548:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "15536:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "15536:3:9"
																									},
																									"nativeSrc": "15536:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "15536:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15552:1:9",
																									"nodeType": "YulLiteral",
																									"src": "15552:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15532:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "15532:3:9"
																							},
																							"nativeSrc": "15532:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "15532:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15519:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15519:6:9"
																					},
																					"nativeSrc": "15519:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15519:36:9"
																				},
																				"nativeSrc": "15519:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "15519:36:9"
																			}
																		]
																	},
																	"nativeSrc": "14947:618:9",
																	"nodeType": "YulCase",
																	"src": "14947:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14952:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14952:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15582:222:9",
																		"nodeType": "YulBlock",
																		"src": "15582:222:9",
																		"statements": [
																			{
																				"nativeSrc": "15596:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15596:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15609:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15609:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15600:5:9",
																						"nodeType": "YulTypedName",
																						"src": "15600:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15633:67:9",
																					"nodeType": "YulBlock",
																					"src": "15633:67:9",
																					"statements": [
																						{
																							"nativeSrc": "15651:35:9",
																							"nodeType": "YulAssignment",
																							"src": "15651:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15670:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "15670:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15675:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "15675:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15666:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "15666:3:9"
																										},
																										"nativeSrc": "15666:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "15666:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15660:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "15660:5:9"
																								},
																								"nativeSrc": "15660:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "15660:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "15651:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "15651:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15626:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "15626:6:9"
																				},
																				"nativeSrc": "15623:77:9",
																				"nodeType": "YulIf",
																				"src": "15623:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15720:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "15720:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "15779:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "15779:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "15786:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "15786:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "15726:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "15726:52:9"
																							},
																							"nativeSrc": "15726:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "15726:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15713:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15713:6:9"
																					},
																					"nativeSrc": "15713:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15713:81:9"
																				},
																				"nativeSrc": "15713:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "15713:81:9"
																			}
																		]
																	},
																	"nativeSrc": "15574:230:9",
																	"nodeType": "YulCase",
																	"src": "15574:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14927:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14927:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14935:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14935:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14924:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14924:2:9"
																},
																"nativeSrc": "14924:14:9",
																"nodeType": "YulFunctionCall",
																"src": "14924:14:9"
															},
															"nativeSrc": "14917:887:9",
															"nodeType": "YulSwitch",
															"src": "14917:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "14415:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14496:4:9",
														"nodeType": "YulTypedName",
														"src": "14496:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14502:3:9",
														"nodeType": "YulTypedName",
														"src": "14502:3:9",
														"type": ""
													}
												],
												"src": "14415:1395:9"
											},
											{
												"body": {
													"nativeSrc": "15844:152:9",
													"nodeType": "YulBlock",
													"src": "15844:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15861:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15861:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15864:77:9",
																		"nodeType": "YulLiteral",
																		"src": "15864:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15854:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15854:6:9"
																},
																"nativeSrc": "15854:88:9",
																"nodeType": "YulFunctionCall",
																"src": "15854:88:9"
															},
															"nativeSrc": "15854:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "15854:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15958:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15958:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15961:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15961:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15951:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15951:6:9"
																},
																"nativeSrc": "15951:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15951:15:9"
															},
															"nativeSrc": "15951:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15951:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15982:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15982:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15985:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15985:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15975:6:9"
																},
																"nativeSrc": "15975:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15975:15:9"
															},
															"nativeSrc": "15975:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15975:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15816:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "15816:180:9"
											},
											{
												"body": {
													"nativeSrc": "16053:51:9",
													"nodeType": "YulBlock",
													"src": "16053:51:9",
													"statements": [
														{
															"nativeSrc": "16063:34:9",
															"nodeType": "YulAssignment",
															"src": "16063:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16088:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16088:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16091:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "16091:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16084:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16084:3:9"
																},
																"nativeSrc": "16084:13:9",
																"nodeType": "YulFunctionCall",
																"src": "16084:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16063:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "16063:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "16002:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16034:5:9",
														"nodeType": "YulTypedName",
														"src": "16034:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16044:8:9",
														"nodeType": "YulTypedName",
														"src": "16044:8:9",
														"type": ""
													}
												],
												"src": "16002:102:9"
											},
											{
												"body": {
													"nativeSrc": "16183:775:9",
													"nodeType": "YulBlock",
													"src": "16183:775:9",
													"statements": [
														{
															"nativeSrc": "16193:15:9",
															"nodeType": "YulAssignment",
															"src": "16193:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "16202:6:9",
																"nodeType": "YulIdentifier",
																"src": "16202:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "16193:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16193:5:9"
																}
															]
														},
														{
															"nativeSrc": "16217:14:9",
															"nodeType": "YulAssignment",
															"src": "16217:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "16226:5:9",
																"nodeType": "YulIdentifier",
																"src": "16226:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "16217:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16217:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16275:677:9",
																"nodeType": "YulBlock",
																"src": "16275:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "16363:22:9",
																			"nodeType": "YulBlock",
																			"src": "16363:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "16365:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "16365:16:9"
																						},
																						"nativeSrc": "16365:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "16365:18:9"
																					},
																					"nativeSrc": "16365:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "16365:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "16341:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "16341:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "16351:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "16351:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "16356:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "16356:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "16347:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "16347:3:9"
																					},
																					"nativeSrc": "16347:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "16347:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "16338:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "16338:2:9"
																			},
																			"nativeSrc": "16338:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16338:24:9"
																		},
																		"nativeSrc": "16335:50:9",
																		"nodeType": "YulIf",
																		"src": "16335:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "16430:419:9",
																			"nodeType": "YulBlock",
																			"src": "16430:419:9",
																			"statements": [
																				{
																					"nativeSrc": "16810:25:9",
																					"nodeType": "YulAssignment",
																					"src": "16810:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "16823:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "16823:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "16830:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "16830:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "16819:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "16819:3:9"
																						},
																						"nativeSrc": "16819:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "16819:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "16810:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "16810:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "16405:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "16405:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16415:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16415:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "16401:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "16401:3:9"
																			},
																			"nativeSrc": "16401:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16401:16:9"
																		},
																		"nativeSrc": "16398:451:9",
																		"nodeType": "YulIf",
																		"src": "16398:451:9"
																	},
																	{
																		"nativeSrc": "16862:23:9",
																		"nodeType": "YulAssignment",
																		"src": "16862:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "16874:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "16874:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "16880:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "16880:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "16870:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "16870:3:9"
																			},
																			"nativeSrc": "16870:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16870:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "16862:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16862:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16898:44:9",
																		"nodeType": "YulAssignment",
																		"src": "16898:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "16933:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "16933:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "16910:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "16910:22:9"
																			},
																			"nativeSrc": "16910:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16910:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "16898:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "16898:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "16251:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "16251:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16261:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16261:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16248:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16248:2:9"
																},
																"nativeSrc": "16248:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16248:15:9"
															},
															"nativeSrc": "16240:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16264:2:9",
																"nodeType": "YulBlock",
																"src": "16264:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "16244:3:9",
																"nodeType": "YulBlock",
																"src": "16244:3:9",
																"statements": []
															},
															"src": "16240:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "16110:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "16138:6:9",
														"nodeType": "YulTypedName",
														"src": "16138:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "16146:5:9",
														"nodeType": "YulTypedName",
														"src": "16146:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "16153:8:9",
														"nodeType": "YulTypedName",
														"src": "16153:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "16163:3:9",
														"nodeType": "YulTypedName",
														"src": "16163:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "16171:5:9",
														"nodeType": "YulTypedName",
														"src": "16171:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "16178:4:9",
														"nodeType": "YulTypedName",
														"src": "16178:4:9",
														"type": ""
													}
												],
												"src": "16110:848:9"
											},
											{
												"body": {
													"nativeSrc": "17024:1013:9",
													"nodeType": "YulBlock",
													"src": "17024:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "17219:20:9",
																"nodeType": "YulBlock",
																"src": "17219:20:9",
																"statements": [
																	{
																		"nativeSrc": "17221:10:9",
																		"nodeType": "YulAssignment",
																		"src": "17221:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17230:1:9",
																			"nodeType": "YulLiteral",
																			"src": "17230:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17221:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17221:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17232:5:9",
																		"nodeType": "YulLeave",
																		"src": "17232:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17209:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "17209:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17202:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17202:6:9"
																},
																"nativeSrc": "17202:16:9",
																"nodeType": "YulFunctionCall",
																"src": "17202:16:9"
															},
															"nativeSrc": "17199:40:9",
															"nodeType": "YulIf",
															"src": "17199:40:9"
														},
														{
															"body": {
																"nativeSrc": "17264:20:9",
																"nodeType": "YulBlock",
																"src": "17264:20:9",
																"statements": [
																	{
																		"nativeSrc": "17266:10:9",
																		"nodeType": "YulAssignment",
																		"src": "17266:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "17275:1:9",
																			"nodeType": "YulLiteral",
																			"src": "17275:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17266:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17266:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17277:5:9",
																		"nodeType": "YulLeave",
																		"src": "17277:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17258:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17258:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17251:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17251:6:9"
																},
																"nativeSrc": "17251:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17251:12:9"
															},
															"nativeSrc": "17248:36:9",
															"nodeType": "YulIf",
															"src": "17248:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17394:20:9",
																		"nodeType": "YulBlock",
																		"src": "17394:20:9",
																		"statements": [
																			{
																				"nativeSrc": "17396:10:9",
																				"nodeType": "YulAssignment",
																				"src": "17396:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17405:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17405:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "17396:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "17396:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "17407:5:9",
																				"nodeType": "YulLeave",
																				"src": "17407:5:9"
																			}
																		]
																	},
																	"nativeSrc": "17387:27:9",
																	"nodeType": "YulCase",
																	"src": "17387:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17392:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17392:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17438:176:9",
																		"nodeType": "YulBlock",
																		"src": "17438:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "17473:22:9",
																					"nodeType": "YulBlock",
																					"src": "17473:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "17475:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "17475:16:9"
																								},
																								"nativeSrc": "17475:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17475:18:9"
																							},
																							"nativeSrc": "17475:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "17475:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "17458:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "17458:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17468:3:9",
																							"nodeType": "YulLiteral",
																							"src": "17468:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "17455:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "17455:2:9"
																					},
																					"nativeSrc": "17455:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17455:17:9"
																				},
																				"nativeSrc": "17452:43:9",
																				"nodeType": "YulIf",
																				"src": "17452:43:9"
																			},
																			{
																				"nativeSrc": "17508:25:9",
																				"nodeType": "YulAssignment",
																				"src": "17508:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "17521:1:9",
																							"nodeType": "YulLiteral",
																							"src": "17521:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "17524:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "17524:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "17517:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "17517:3:9"
																					},
																					"nativeSrc": "17517:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17517:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "17508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "17508:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17564:22:9",
																					"nodeType": "YulBlock",
																					"src": "17564:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "17566:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "17566:16:9"
																								},
																								"nativeSrc": "17566:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17566:18:9"
																							},
																							"nativeSrc": "17566:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "17566:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "17552:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "17552:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "17559:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "17559:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "17549:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "17549:2:9"
																					},
																					"nativeSrc": "17549:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17549:14:9"
																				},
																				"nativeSrc": "17546:40:9",
																				"nodeType": "YulIf",
																				"src": "17546:40:9"
																			},
																			{
																				"nativeSrc": "17599:5:9",
																				"nodeType": "YulLeave",
																				"src": "17599:5:9"
																			}
																		]
																	},
																	"nativeSrc": "17423:191:9",
																	"nodeType": "YulCase",
																	"src": "17423:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17428:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17428:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "17344:4:9",
																"nodeType": "YulIdentifier",
																"src": "17344:4:9"
															},
															"nativeSrc": "17337:277:9",
															"nodeType": "YulSwitch",
															"src": "17337:277:9"
														},
														{
															"body": {
																"nativeSrc": "17746:123:9",
																"nodeType": "YulBlock",
																"src": "17746:123:9",
																"statements": [
																	{
																		"nativeSrc": "17760:28:9",
																		"nodeType": "YulAssignment",
																		"src": "17760:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17773:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "17773:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "17779:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "17779:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "17769:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "17769:3:9"
																			},
																			"nativeSrc": "17769:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17769:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "17760:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17760:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17819:22:9",
																			"nodeType": "YulBlock",
																			"src": "17819:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "17821:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "17821:16:9"
																						},
																						"nativeSrc": "17821:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "17821:18:9"
																					},
																					"nativeSrc": "17821:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "17821:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "17807:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "17807:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "17814:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "17814:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17804:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "17804:2:9"
																			},
																			"nativeSrc": "17804:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17804:14:9"
																		},
																		"nativeSrc": "17801:40:9",
																		"nodeType": "YulIf",
																		"src": "17801:40:9"
																	},
																	{
																		"nativeSrc": "17854:5:9",
																		"nodeType": "YulLeave",
																		"src": "17854:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17649:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "17649:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17655:2:9",
																						"nodeType": "YulLiteral",
																						"src": "17655:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17646:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "17646:2:9"
																				},
																				"nativeSrc": "17646:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17646:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "17663:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "17663:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17673:2:9",
																						"nodeType": "YulLiteral",
																						"src": "17673:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17660:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "17660:2:9"
																				},
																				"nativeSrc": "17660:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17660:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17642:3:9"
																		},
																		"nativeSrc": "17642:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17642:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "17698:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "17698:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17704:3:9",
																						"nodeType": "YulLiteral",
																						"src": "17704:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17695:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "17695:2:9"
																				},
																				"nativeSrc": "17695:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17695:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "17713:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "17713:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17723:2:9",
																						"nodeType": "YulLiteral",
																						"src": "17723:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "17710:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "17710:2:9"
																				},
																				"nativeSrc": "17710:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17710:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17691:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17691:3:9"
																		},
																		"nativeSrc": "17691:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17691:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17626:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17626:2:9"
																},
																"nativeSrc": "17626:111:9",
																"nodeType": "YulFunctionCall",
																"src": "17626:111:9"
															},
															"nativeSrc": "17623:246:9",
															"nodeType": "YulIf",
															"src": "17623:246:9"
														},
														{
															"nativeSrc": "17879:57:9",
															"nodeType": "YulAssignment",
															"src": "17879:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17913:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17913:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "17916:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17916:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "17922:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "17922:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "17932:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17932:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "17894:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "17894:18:9"
																},
																"nativeSrc": "17894:42:9",
																"nodeType": "YulFunctionCall",
																"src": "17894:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17879:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "17879:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "17886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17886:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17975:22:9",
																"nodeType": "YulBlock",
																"src": "17975:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17977:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17977:16:9"
																			},
																			"nativeSrc": "17977:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17977:18:9"
																		},
																		"nativeSrc": "17977:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17977:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "17952:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "17952:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "17963:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "17963:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "17968:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17968:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17959:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17959:3:9"
																		},
																		"nativeSrc": "17959:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17959:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17949:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17949:2:9"
																},
																"nativeSrc": "17949:25:9",
																"nodeType": "YulFunctionCall",
																"src": "17949:25:9"
															},
															"nativeSrc": "17946:51:9",
															"nodeType": "YulIf",
															"src": "17946:51:9"
														},
														{
															"nativeSrc": "18006:25:9",
															"nodeType": "YulAssignment",
															"src": "18006:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "18019:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "18019:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "18026:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18026:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18015:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18015:3:9"
																},
																"nativeSrc": "18015:16:9",
																"nodeType": "YulFunctionCall",
																"src": "18015:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18006:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18006:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "16964:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "16994:4:9",
														"nodeType": "YulTypedName",
														"src": "16994:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17000:8:9",
														"nodeType": "YulTypedName",
														"src": "17000:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17010:3:9",
														"nodeType": "YulTypedName",
														"src": "17010:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17018:5:9",
														"nodeType": "YulTypedName",
														"src": "17018:5:9",
														"type": ""
													}
												],
												"src": "16964:1073:9"
											},
											{
												"body": {
													"nativeSrc": "18107:217:9",
													"nodeType": "YulBlock",
													"src": "18107:217:9",
													"statements": [
														{
															"nativeSrc": "18117:31:9",
															"nodeType": "YulAssignment",
															"src": "18117:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18143:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18143:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18125:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "18125:17:9"
																},
																"nativeSrc": "18125:23:9",
																"nodeType": "YulFunctionCall",
																"src": "18125:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "18117:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18117:4:9"
																}
															]
														},
														{
															"nativeSrc": "18157:37:9",
															"nodeType": "YulAssignment",
															"src": "18157:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18185:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "18185:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "18169:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "18169:15:9"
																},
																"nativeSrc": "18169:25:9",
																"nodeType": "YulFunctionCall",
																"src": "18169:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "18157:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "18157:8:9"
																}
															]
														},
														{
															"nativeSrc": "18204:113:9",
															"nodeType": "YulAssignment",
															"src": "18204:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18234:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18234:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "18240:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "18240:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18250:66:9",
																		"nodeType": "YulLiteral",
																		"src": "18250:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "18213:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "18213:20:9"
																},
																"nativeSrc": "18213:104:9",
																"nodeType": "YulFunctionCall",
																"src": "18213:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18204:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18204:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "18043:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18082:4:9",
														"nodeType": "YulTypedName",
														"src": "18082:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18088:8:9",
														"nodeType": "YulTypedName",
														"src": "18088:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18101:5:9",
														"nodeType": "YulTypedName",
														"src": "18101:5:9",
														"type": ""
													}
												],
												"src": "18043:281:9"
											},
											{
												"body": {
													"nativeSrc": "18378:362:9",
													"nodeType": "YulBlock",
													"src": "18378:362:9",
													"statements": [
														{
															"nativeSrc": "18388:25:9",
															"nodeType": "YulAssignment",
															"src": "18388:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18411:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18411:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18393:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "18393:17:9"
																},
																"nativeSrc": "18393:20:9",
																"nodeType": "YulFunctionCall",
																"src": "18393:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18388:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "18388:1:9"
																}
															]
														},
														{
															"nativeSrc": "18422:25:9",
															"nodeType": "YulAssignment",
															"src": "18422:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18445:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18445:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18427:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "18427:17:9"
																},
																"nativeSrc": "18427:20:9",
																"nodeType": "YulFunctionCall",
																"src": "18427:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18422:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "18422:1:9"
																}
															]
														},
														{
															"nativeSrc": "18456:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "18456:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18479:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18479:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18482:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18482:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18475:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18475:3:9"
																},
																"nativeSrc": "18475:9:9",
																"nodeType": "YulFunctionCall",
																"src": "18475:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18460:11:9",
																	"nodeType": "YulTypedName",
																	"src": "18460:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18493:41:9",
															"nodeType": "YulAssignment",
															"src": "18493:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18522:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "18522:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18504:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "18504:17:9"
																},
																"nativeSrc": "18504:30:9",
																"nodeType": "YulFunctionCall",
																"src": "18504:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18493:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "18493:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18711:22:9",
																"nodeType": "YulBlock",
																"src": "18711:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18713:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "18713:16:9"
																			},
																			"nativeSrc": "18713:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18713:18:9"
																		},
																		"nativeSrc": "18713:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "18713:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18644:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "18644:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18637:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "18637:6:9"
																				},
																				"nativeSrc": "18637:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18637:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18667:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "18667:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18674:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "18674:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18683:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "18683:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18670:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "18670:3:9"
																						},
																						"nativeSrc": "18670:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "18670:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18664:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "18664:2:9"
																				},
																				"nativeSrc": "18664:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18664:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18617:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "18617:2:9"
																		},
																		"nativeSrc": "18617:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18617:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18597:6:9"
																},
																"nativeSrc": "18597:113:9",
																"nodeType": "YulFunctionCall",
																"src": "18597:113:9"
															},
															"nativeSrc": "18594:139:9",
															"nodeType": "YulIf",
															"src": "18594:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18330:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18361:1:9",
														"nodeType": "YulTypedName",
														"src": "18361:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18364:1:9",
														"nodeType": "YulTypedName",
														"src": "18364:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18370:7:9",
														"nodeType": "YulTypedName",
														"src": "18370:7:9",
														"type": ""
													}
												],
												"src": "18330:410:9"
											},
											{
												"body": {
													"nativeSrc": "18852:73:9",
													"nodeType": "YulBlock",
													"src": "18852:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18874:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18874:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18882:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18882:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18870:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18870:3:9"
																		},
																		"nativeSrc": "18870:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18870:14:9"
																	},
																	{
																		"hexValue": "4e6577206f776e657220697320746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "18886:31:9",
																		"nodeType": "YulLiteral",
																		"src": "18886:31:9",
																		"type": "",
																		"value": "New owner is the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18863:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18863:6:9"
																},
																"nativeSrc": "18863:55:9",
																"nodeType": "YulFunctionCall",
																"src": "18863:55:9"
															},
															"nativeSrc": "18863:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "18863:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
												"nativeSrc": "18746:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18844:6:9",
														"nodeType": "YulTypedName",
														"src": "18844:6:9",
														"type": ""
													}
												],
												"src": "18746:179:9"
											},
											{
												"body": {
													"nativeSrc": "19077:220:9",
													"nodeType": "YulBlock",
													"src": "19077:220:9",
													"statements": [
														{
															"nativeSrc": "19087:74:9",
															"nodeType": "YulAssignment",
															"src": "19087:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19153:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19153:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19158:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19158:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19094:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19094:58:9"
																},
																"nativeSrc": "19094:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19094:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19087:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19087:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19259:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19259:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
																	"nativeSrc": "19170:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19170:88:9"
																},
																"nativeSrc": "19170:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19170:93:9"
															},
															"nativeSrc": "19170:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19170:93:9"
														},
														{
															"nativeSrc": "19272:19:9",
															"nodeType": "YulAssignment",
															"src": "19272:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19283:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19283:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19288:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19288:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19279:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19279:3:9"
																},
																"nativeSrc": "19279:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19279:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19272:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18931:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19065:3:9",
														"nodeType": "YulTypedName",
														"src": "19065:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19073:3:9",
														"nodeType": "YulTypedName",
														"src": "19073:3:9",
														"type": ""
													}
												],
												"src": "18931:366:9"
											},
											{
												"body": {
													"nativeSrc": "19474:248:9",
													"nodeType": "YulBlock",
													"src": "19474:248:9",
													"statements": [
														{
															"nativeSrc": "19484:26:9",
															"nodeType": "YulAssignment",
															"src": "19484:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19496:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19496:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19507:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19507:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19492:3:9"
																},
																"nativeSrc": "19492:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19492:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19484:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19484:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19531:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19531:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19542:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19542:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19527:3:9"
																		},
																		"nativeSrc": "19527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19527:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19550:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19550:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19556:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19556:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19546:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19546:3:9"
																		},
																		"nativeSrc": "19546:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19546:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19520:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19520:6:9"
																},
																"nativeSrc": "19520:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19520:47:9"
															},
															"nativeSrc": "19520:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19520:47:9"
														},
														{
															"nativeSrc": "19576:139:9",
															"nodeType": "YulAssignment",
															"src": "19576:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19710:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19710:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19584:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19584:124:9"
																},
																"nativeSrc": "19584:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19584:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19576:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19576:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19303:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19454:9:9",
														"nodeType": "YulTypedName",
														"src": "19454:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19469:4:9",
														"nodeType": "YulTypedName",
														"src": "19469:4:9",
														"type": ""
													}
												],
												"src": "19303:419:9"
											},
											{
												"body": {
													"nativeSrc": "19882:288:9",
													"nodeType": "YulBlock",
													"src": "19882:288:9",
													"statements": [
														{
															"nativeSrc": "19892:26:9",
															"nodeType": "YulAssignment",
															"src": "19892:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19904:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19904:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19915:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19915:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19900:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19900:3:9"
																},
																"nativeSrc": "19900:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19900:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19892:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19892:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19972:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19972:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19985:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19985:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19996:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19996:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19981:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19981:3:9"
																		},
																		"nativeSrc": "19981:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19981:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19928:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "19928:43:9"
																},
																"nativeSrc": "19928:71:9",
																"nodeType": "YulFunctionCall",
																"src": "19928:71:9"
															},
															"nativeSrc": "19928:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "19928:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20053:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20053:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20066:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20066:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20077:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20077:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20062:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20062:3:9"
																		},
																		"nativeSrc": "20062:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20062:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20009:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20009:43:9"
																},
																"nativeSrc": "20009:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20009:72:9"
															},
															"nativeSrc": "20009:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20009:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20135:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20135:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20148:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20148:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20159:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20159:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20144:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20144:3:9"
																		},
																		"nativeSrc": "20144:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20144:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20091:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20091:43:9"
																},
																"nativeSrc": "20091:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20091:72:9"
															},
															"nativeSrc": "20091:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20091:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19728:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19838:9:9",
														"nodeType": "YulTypedName",
														"src": "19838:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19850:6:9",
														"nodeType": "YulTypedName",
														"src": "19850:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19858:6:9",
														"nodeType": "YulTypedName",
														"src": "19858:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19866:6:9",
														"nodeType": "YulTypedName",
														"src": "19866:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19877:4:9",
														"nodeType": "YulTypedName",
														"src": "19877:4:9",
														"type": ""
													}
												],
												"src": "19728:442:9"
											},
											{
												"body": {
													"nativeSrc": "20220:147:9",
													"nodeType": "YulBlock",
													"src": "20220:147:9",
													"statements": [
														{
															"nativeSrc": "20230:25:9",
															"nodeType": "YulAssignment",
															"src": "20230:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20253:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20253:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20235:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "20235:17:9"
																},
																"nativeSrc": "20235:20:9",
																"nodeType": "YulFunctionCall",
																"src": "20235:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20230:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "20230:1:9"
																}
															]
														},
														{
															"nativeSrc": "20264:25:9",
															"nodeType": "YulAssignment",
															"src": "20264:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20287:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20287:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20269:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "20269:17:9"
																},
																"nativeSrc": "20269:20:9",
																"nodeType": "YulFunctionCall",
																"src": "20269:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20264:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "20264:1:9"
																}
															]
														},
														{
															"nativeSrc": "20298:16:9",
															"nodeType": "YulAssignment",
															"src": "20298:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20309:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20309:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20312:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20312:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20305:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20305:3:9"
																},
																"nativeSrc": "20305:9:9",
																"nodeType": "YulFunctionCall",
																"src": "20305:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20298:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20298:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20338:22:9",
																"nodeType": "YulBlock",
																"src": "20338:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20340:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "20340:16:9"
																			},
																			"nativeSrc": "20340:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "20340:18:9"
																		},
																		"nativeSrc": "20340:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "20340:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20330:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20330:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20333:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20333:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20327:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "20327:2:9"
																},
																"nativeSrc": "20327:10:9",
																"nodeType": "YulFunctionCall",
																"src": "20327:10:9"
															},
															"nativeSrc": "20324:36:9",
															"nodeType": "YulIf",
															"src": "20324:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20176:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20207:1:9",
														"nodeType": "YulTypedName",
														"src": "20207:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20210:1:9",
														"nodeType": "YulTypedName",
														"src": "20210:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20216:3:9",
														"nodeType": "YulTypedName",
														"src": "20216:3:9",
														"type": ""
													}
												],
												"src": "20176:191:9"
											},
											{
												"body": {
													"nativeSrc": "20479:64:9",
													"nodeType": "YulBlock",
													"src": "20479:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20501:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20501:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20509:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20509:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20497:3:9"
																		},
																		"nativeSrc": "20497:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20497:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "20513:22:9",
																		"nodeType": "YulLiteral",
																		"src": "20513:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20490:6:9"
																},
																"nativeSrc": "20490:46:9",
																"nodeType": "YulFunctionCall",
																"src": "20490:46:9"
															},
															"nativeSrc": "20490:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "20490:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "20373:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20471:6:9",
														"nodeType": "YulTypedName",
														"src": "20471:6:9",
														"type": ""
													}
												],
												"src": "20373:170:9"
											},
											{
												"body": {
													"nativeSrc": "20695:220:9",
													"nodeType": "YulBlock",
													"src": "20695:220:9",
													"statements": [
														{
															"nativeSrc": "20705:74:9",
															"nodeType": "YulAssignment",
															"src": "20705:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20771:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20771:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20776:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20776:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20712:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20712:58:9"
																},
																"nativeSrc": "20712:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20712:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20705:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20705:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20877:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "20788:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20788:88:9"
																},
																"nativeSrc": "20788:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20788:93:9"
															},
															"nativeSrc": "20788:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20788:93:9"
														},
														{
															"nativeSrc": "20890:19:9",
															"nodeType": "YulAssignment",
															"src": "20890:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20901:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20901:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20906:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20897:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20897:3:9"
																},
																"nativeSrc": "20897:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20897:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20890:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20890:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20549:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20683:3:9",
														"nodeType": "YulTypedName",
														"src": "20683:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20691:3:9",
														"nodeType": "YulTypedName",
														"src": "20691:3:9",
														"type": ""
													}
												],
												"src": "20549:366:9"
											},
											{
												"body": {
													"nativeSrc": "21092:248:9",
													"nodeType": "YulBlock",
													"src": "21092:248:9",
													"statements": [
														{
															"nativeSrc": "21102:26:9",
															"nodeType": "YulAssignment",
															"src": "21102:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21114:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21114:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21125:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21125:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21110:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21110:3:9"
																},
																"nativeSrc": "21110:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21110:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21102:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21102:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21149:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21149:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21160:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21160:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21145:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21145:3:9"
																		},
																		"nativeSrc": "21145:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21145:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21168:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21168:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21174:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21174:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21164:3:9"
																		},
																		"nativeSrc": "21164:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21164:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21138:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21138:6:9"
																},
																"nativeSrc": "21138:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21138:47:9"
															},
															"nativeSrc": "21138:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21138:47:9"
														},
														{
															"nativeSrc": "21194:139:9",
															"nodeType": "YulAssignment",
															"src": "21194:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21328:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21328:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21202:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21202:124:9"
																},
																"nativeSrc": "21202:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21202:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21194:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21194:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20921:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21072:9:9",
														"nodeType": "YulTypedName",
														"src": "21072:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21087:4:9",
														"nodeType": "YulTypedName",
														"src": "21087:4:9",
														"type": ""
													}
												],
												"src": "20921:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"New owner is the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c80636161eb18116100a057806395d89b411161006f57806395d89b41146102a6578063a9059cbb146102c4578063b33712c5146102f4578063dd62ed3e146102fe578063f2fde38b1461032e57610114565b80636161eb181461023257806370a082311461024e5780638129fc1c1461027e5780638da5cb5b1461028857610114565b8063313ce567116100e7578063313ce567146101b457806340c10f19146101d2578063439766ce146101ee5780634cd88b76146101f85780635c975abb1461021457610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806323b872dd14610184575b5f80fd5b61012061034a565b60405161012d919061147d565b60405180910390f35b610150600480360381019061014b919061153b565b6103da565b60405161015d9190611593565b60405180910390f35b61016e6103f0565b60405161017b91906115bb565b60405180910390f35b61019e600480360381019061019991906115d4565b6103f9565b6040516101ab9190611593565b60405180910390f35b6101bc61046f565b6040516101c9919061163f565b60405180910390f35b6101ec60048036038101906101e7919061153b565b610477565b005b6101f661055c565b005b610212600480360381019061020d9190611784565b6105f5565b005b61021c610769565b6040516102299190611593565b60405180910390f35b61024c6004803603810190610247919061153b565b61077d565b005b610268600480360381019061026391906117fa565b6107fc565b60405161027591906115bb565b60405180910390f35b610286610842565b005b61029061085c565b60405161029d9190611834565b60405180910390f35b6102ae610884565b6040516102bb919061147d565b60405180910390f35b6102de60048036038101906102d9919061153b565b610914565b6040516102eb9190611593565b60405180910390f35b6102fc610972565b005b6103186004803603810190610313919061184d565b610a0b565b60405161032591906115bb565b60405180910390f35b610348600480360381019061034391906117fa565b610a8d565b005b606060048054610359906118b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906118b8565b80156103d05780601f106103a7576101008083540402835291602001916103d0565b820191905f5260205f20905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b5f6103e6338484610c48565b6001905092915050565b5f600354905090565b5f610402610769565b15610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990611932565b60405180910390fd5b5f61044b610c5a565b9050610458858285610c61565b610463858585610cf4565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd906119c0565b60405180910390fd5b61050e610769565b1561054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611932565b60405180910390fd5b6105588282610de4565b5050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e2906119c0565b60405180910390fd5b6105f3610ec8565b565b81600490816106049190611b7b565b5080600590816106149190611b7b565b503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506012600a6106639190611da6565b633b9aca006106729190611df0565b60038190555060035460015f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405161075d91906115bb565b60405180910390a35050565b5f805f9054906101000a900460ff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ed575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107e49190611834565b60405180910390fd5b6107f8825f83610f69565b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f6101000a81548160ff021916908315150217905550565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610893906118b8565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf906118b8565b801561090a5780601f106108e15761010080835404028352916020019161090a565b820191905f5260205f20905b8154815290600101906020018083116108ed57829003601f168201915b5050505050905090565b5f61091d610769565b1561095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611932565b60405180910390fd5b610968338484610cf4565b6001905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906119c0565b60405180910390fd5b610a09611185565b565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b13906119c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190611e7b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c558383836001611224565b505050565b5f33905090565b5f610c6c8484610a0b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cee5781811015610cdf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cd693929190611e99565b60405180910390fd5b610ced84848484035f611224565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d64575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d5b9190611834565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dcb9190611834565b60405180910390fd5b610ddf838383610f69565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e54575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e4b9190611834565b60405180910390fd5b610e5f5f8383610f69565b8173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebc91906115bb565b60405180910390a35050565b610ed0610769565b15610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0790611932565b60405180910390fd5b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f52610c5a565b604051610f5f9190611834565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb9578060035f828254610fad9190611ece565b92505081905550611089565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611043578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103a93929190611e99565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110d0578060035f828254039250508190555061111b565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161117891906115bb565b60405180910390a3505050565b61118d610769565b6111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390611f4b565b60405180910390fd5b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61120d610c5a565b60405161121a9190611834565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611294575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161128b9190611834565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611304575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112fb9190611834565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113ed578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113e491906115bb565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561142a57808201518184015260208101905061140f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61144f826113f3565b61145981856113fd565b935061146981856020860161140d565b61147281611435565b840191505092915050565b5f6020820190508181035f8301526114958184611445565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d7826114ae565b9050919050565b6114e7816114cd565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f819050919050565b61151a81611508565b8114611524575f80fd5b50565b5f8135905061153581611511565b92915050565b5f8060408385031215611551576115506114a6565b5b5f61155e858286016114f4565b925050602061156f85828601611527565b9150509250929050565b5f8115159050919050565b61158d81611579565b82525050565b5f6020820190506115a65f830184611584565b92915050565b6115b581611508565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b5f805f606084860312156115eb576115ea6114a6565b5b5f6115f8868287016114f4565b9350506020611609868287016114f4565b925050604061161a86828701611527565b9150509250925092565b5f60ff82169050919050565b61163981611624565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61169682611435565b810181811067ffffffffffffffff821117156116b5576116b4611660565b5b80604052505050565b5f6116c761149d565b90506116d3828261168d565b919050565b5f67ffffffffffffffff8211156116f2576116f1611660565b5b6116fb82611435565b9050602081019050919050565b828183375f83830152505050565b5f611728611723846116d8565b6116be565b9050828152602081018484840111156117445761174361165c565b5b61174f848285611708565b509392505050565b5f82601f83011261176b5761176a611658565b5b813561177b848260208601611716565b91505092915050565b5f806040838503121561179a576117996114a6565b5b5f83013567ffffffffffffffff8111156117b7576117b66114aa565b5b6117c385828601611757565b925050602083013567ffffffffffffffff8111156117e4576117e36114aa565b5b6117f085828601611757565b9150509250929050565b5f6020828403121561180f5761180e6114a6565b5b5f61181c848285016114f4565b91505092915050565b61182e816114cd565b82525050565b5f6020820190506118475f830184611825565b92915050565b5f8060408385031215611863576118626114a6565b5b5f611870858286016114f4565b9250506020611881858286016114f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118cf57607f821691505b6020821081036118e2576118e161188b565b5b50919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61191c6010836113fd565b9150611927826118e8565b602082019050919050565b5f6020820190508181035f83015261194981611910565b9050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119aa6021836113fd565b91506119b582611950565b604082019050919050565b5f6020820190508181035f8301526119d78161199e565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826119ff565b611a4486836119ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611a7f611a7a611a7584611508565b611a5c565b611508565b9050919050565b5f819050919050565b611a9883611a65565b611aac611aa482611a86565b848454611a0b565b825550505050565b5f90565b611ac0611ab4565b611acb818484611a8f565b505050565b5b81811015611aee57611ae35f82611ab8565b600181019050611ad1565b5050565b601f821115611b3357611b04816119de565b611b0d846119f0565b81016020851015611b1c578190505b611b30611b28856119f0565b830182611ad0565b50505b505050565b5f82821c905092915050565b5f611b535f1984600802611b38565b1980831691505092915050565b5f611b6b8383611b44565b9150826002028217905092915050565b611b84826113f3565b67ffffffffffffffff811115611b9d57611b9c611660565b5b611ba782546118b8565b611bb2828285611af2565b5f60209050601f831160018114611be3575f8415611bd1578287015190505b611bdb8582611b60565b865550611c42565b601f198416611bf1866119de565b5f5b82811015611c1857848901518255600182019150602085019450602081019050611bf3565b86831015611c355784890151611c31601f891682611b44565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611ccc57808604811115611ca857611ca7611c4a565b5b6001851615611cb75780820291505b8081029050611cc585611c77565b9450611c8c565b94509492505050565b5f82611ce45760019050611d9f565b81611cf1575f9050611d9f565b8160018114611d075760028114611d1157611d40565b6001915050611d9f565b60ff841115611d2357611d22611c4a565b5b8360020a915084821115611d3a57611d39611c4a565b5b50611d9f565b5060208310610133831016604e8410600b8410161715611d755782820a905083811115611d7057611d6f611c4a565b5b611d9f565b611d828484846001611c83565b92509050818404811115611d9957611d98611c4a565b5b81810290505b9392505050565b5f611db082611508565b9150611dbb83611624565b9250611de87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611cd5565b905092915050565b5f611dfa82611508565b9150611e0583611508565b9250828202611e1381611508565b91508282048414831517611e2a57611e29611c4a565b5b5092915050565b7f4e6577206f776e657220697320746865207a65726f20616464726573730000005f82015250565b5f611e65601d836113fd565b9150611e7082611e31565b602082019050919050565b5f6020820190508181035f830152611e9281611e59565b9050919050565b5f606082019050611eac5f830186611825565b611eb960208301856115ac565b611ec660408301846115ac565b949350505050565b5f611ed882611508565b9150611ee383611508565b9250828201905080821115611efb57611efa611c4a565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611f356014836113fd565b9150611f4082611f01565b602082019050919050565b5f6020820190508181035f830152611f6281611f29565b905091905056fea26469706673582212208dd5a1273ac50d5a26e1ccf1d2e2f8d593200b7eb49c9be587a86f0975d9cb2864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6161EB18 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xB33712C5 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x439766CE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x214 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E6 CALLER DUP5 DUP5 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x402 PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x439 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x44B PUSH2 0xC5A JUMP JUMPDEST SWAP1 POP PUSH2 0x458 DUP6 DUP3 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x463 DUP6 DUP6 DUP6 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50E PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP3 DUP3 PUSH2 0xDE4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F3 PUSH2 0xEC8 JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP3 PUSH0 DUP4 PUSH2 0xF69 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x91D PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x968 CALLER DUP5 DUP5 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F8 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 PUSH2 0x1185 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC6C DUP5 DUP5 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCEE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCED DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1224 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDF DUP4 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5F PUSH0 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x769 JUMP JUMPDEST ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF07 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF52 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1089 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1043 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D0 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x111B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x118D PUSH2 0x769 JUMP JUMPDEST PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x120D PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1294 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13ED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x140F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144F DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x1459 DUP2 DUP6 PUSH2 0x13FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1469 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x140D JUMP JUMPDEST PUSH2 0x1472 DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1495 DUP2 DUP5 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 DUP3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP2 EQ PUSH2 0x1524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155E DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156F DUP6 DUP3 DUP7 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x161A DUP7 DUP3 DUP8 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1696 DUP3 PUSH2 0x1435 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x16D3 DUP3 DUP3 PUSH2 0x168D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH2 0x16FB DUP3 PUSH2 0x1435 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1728 PUSH2 0x1723 DUP5 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x165C JUMP JUMPDEST JUMPDEST PUSH2 0x174F DUP5 DUP3 DUP6 PUSH2 0x1708 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1658 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x177B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1716 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH2 0x17F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181C DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1847 PUSH0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH2 0x1862 PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x188B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191C PUSH1 0x10 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1927 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1949 DUP2 PUSH2 0x1910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AA PUSH1 0x21 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x19B5 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D7 DUP2 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1A44 DUP7 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7F PUSH2 0x1A7A PUSH2 0x1A75 DUP5 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A98 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x1AAC PUSH2 0x1AA4 DUP3 PUSH2 0x1A86 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A0B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AC0 PUSH2 0x1AB4 JUMP JUMPDEST PUSH2 0x1ACB DUP2 DUP5 DUP5 PUSH2 0x1A8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AE3 PUSH0 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B04 DUP2 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1B0D DUP5 PUSH2 0x19F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B1C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B30 PUSH2 0x1B28 DUP6 PUSH2 0x19F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AD0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B38 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH2 0x1B9C PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA7 DUP3 SLOAD PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x1BB2 DUP3 DUP3 DUP6 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B60 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19DE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C18 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C35 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C31 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1CCC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1CB7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1CC5 DUP6 PUSH2 0x1C77 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C8C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CE4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1D9F JUMP JUMPDEST DUP2 PUSH2 0x1CF1 JUMPI PUSH0 SWAP1 POP PUSH2 0x1D9F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1D07 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D11 JUMPI PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1D3A JUMPI PUSH2 0x1D39 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1D9F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D75 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x1D82 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1C83 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB0 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBB DUP4 PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DE8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1CD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFA DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E05 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E13 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E2A JUMPI PUSH2 0x1E29 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E65 PUSH1 0x1D DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E70 DUP3 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E92 DUP2 PUSH2 0x1E59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EAC PUSH0 DUP4 ADD DUP7 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1EB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x1EC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED8 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE3 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F35 PUSH1 0x14 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F40 DUP3 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F62 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xD5 LOG1 0x27 GASPRICE 0xC5 0xD GAS 0x26 0xE1 0xCC CALL 0xD2 0xE2 0xF8 0xD5 SWAP4 KECCAK256 SIGNEXTEND PUSH31 0xB49C9BE587A86F0975D9CB2864736F6C634300081600330000000000000000 ",
							"sourceMap": "1193:11763:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4622:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3382:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5678:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3226:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4827:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12740:71;;;:::i;:::-;;1790:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1088:86:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9539:210:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3544:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;924:64:6;;;:::i;:::-;;6006:79:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2485:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3867:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12876:75;;;:::i;:::-;;4151:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6140:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2275:91;2320:13;2353:5;2346:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:91;:::o;4622:197::-;4695:4;4722:36;4731:10;4743:7;4752:5;4722:8;:36::i;:::-;4807:4;4800:11;;4622:197;;;;:::o;3382:99::-;3434:7;3461:12;;3454:19;;3382:99;:::o;5678:273::-;5789:4;1414:8:6;:6;:8::i;:::-;1413:9;1405:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5806:15:8::1;5824:12;:10;:12::i;:::-;5806:30;;5847:37;5863:4;5869:7;5878:5;5847:15;:37::i;:::-;5895:26;5905:4;5911:2;5915:5;5895:9;:26::i;:::-;5939:4;5932:11;;;5678:273:::0;;;;;:::o;3226:91::-;3275:5;1473:2;3293:16;;3226:91;:::o;4827:109::-;5006:6;;;;;;;;;;;4992:20;;:10;:20;;;4984:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1414:8:6::1;:6;:8::i;:::-;1413:9;1405:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4911:21:8::2;4917:7;4926:5;4911;:21::i;:::-;4827:109:::0;;:::o;12740:71::-;5006:6;;;;;;;;;;;4992:20;;:10;:20;;;4984:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;12795:8:::1;:6;:8::i;:::-;12740:71::o:0;1790:415::-;1918:5;1910;:13;;;;;;:::i;:::-;;1944:7;1934;:17;;;;;;:::i;:::-;;1971:10;1962:6;;:19;;;;;;;;;;;;;;;;;;1473:2;2053;:13;;;;:::i;:::-;2040:10;:26;;;;:::i;:::-;2025:12;:41;;;;2117:12;;2097:9;:17;2107:6;;;;;;;;;;;2097:17;;;;;;;;;;;;;;;:32;;;;2166:6;;;;;;;;;;;2145:42;;2162:1;2145:42;;;2174:12;;2145:42;;;;;;:::i;:::-;;;;;;;;1790:415;;:::o;1088:86:6:-;1135:4;1159:7;;;;;;;;;;;1152:14;;1088:86;:::o;9539:210:8:-;9628:1;9609:21;;:7;:21;;;9605:91;;9681:1;9654:30;;;;;;;;;;;:::i;:::-;;;;;;;;9605:91;9706:35;9714:7;9731:1;9735:5;9706:7;:35::i;:::-;9539:210;;:::o;3544:118::-;3609:7;3636:9;:18;3646:7;3636:18;;;;;;;;;;;;;;;;3629:25;;3544:118;;;:::o;924:64:6:-;975:5;965:7;;:15;;;;;;;;;;;;;;;;;;924:64::o;6006:79:8:-;6044:7;6071:6;;;;;;;;;;;6064:13;;6006:79;:::o;2485:95::-;2532:13;2565:7;2558:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:95;:::o;3867:221::-;3960:4;1414:8:6;:6;:8::i;:::-;1413:9;1405:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3987:32:8::1;3997:10;4009:2;4013:5;3987:9;:32::i;:::-;4076:4;4069:11;;3867:221:::0;;;;:::o;12876:75::-;5006:6;;;;;;;;;;;4992:20;;:10;:20;;;4984:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;12933:10:::1;:8;:10::i;:::-;12876:75::o:0;4151:152::-;4236:7;4263:11;:23;4275:10;4263:23;;;;;;;;;;;;;;;:32;4287:7;4263:32;;;;;;;;;;;;;;;;4256:39;;4151:152;;;;:::o;6140:257::-;5006:6;;;;;;;;;;;4992:20;;:10;:20;;;4984:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6245:1:::1;6225:22;;:8;:22;;::::0;6217:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6330:8;6301:38;;6322:6;;;;;;;;;;;6301:38;;;;;;;;;;;;6377:8;6368:6;;:17;;;;;;;;;;;;;;;;;;6140:257:::0;:::o;10302:140::-;10392:42;10401:10;10413:7;10422:5;10429:4;10392:8;:42::i;:::-;10302:140;;;:::o;603:98:3:-;656:7;683:10;676:17;;603:98;:::o;12064:507:8:-;12171:24;12198:32;12208:12;12222:7;12198:9;:32::i;:::-;12171:59;;12264:17;12245:16;:36;12241:323;;;12321:5;12302:16;:24;12298:132;;;12381:7;12390:16;12408:5;12354:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12298:132;12473:64;12482:12;12496:7;12524:5;12505:16;:24;12531:5;12473:8;:64::i;:::-;12241:323;12160:411;12064:507;;;:::o;6781:308::-;6881:1;6865:18;;:4;:18;;;6861:88;;6934:1;6907:30;;;;;;;;;;;:::i;:::-;;;;;;;;6861:88;6977:1;6963:16;;:2;:16;;;6959:88;;7032:1;7003:32;;;;;;;;;;;:::i;:::-;;;;;;;;6959:88;7057:24;7065:4;7071:2;7075:5;7057:7;:24::i;:::-;6781:308;;;:::o;8901:310::-;9011:1;8992:21;;:7;:21;;;8988:93;;9066:1;9037:32;;;;;;;;;;;:::i;:::-;;;;;;;;8988:93;9091:35;9107:1;9111:7;9120:5;9091:7;:35::i;:::-;9163:7;9142:36;;9159:1;9142:36;;;9172:5;9142:36;;;;;;:::i;:::-;;;;;;;;8901:310;;:::o;1888:118:6:-;1414:8;:6;:8::i;:::-;1413:9;1405:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1958:4:::1;1948:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;1978:20;1985:12;:10;:12::i;:::-;1978:20;;;;;;:::i;:::-;;;;;;;;1888:118::o:0;7413:1135:8:-;7519:1;7503:18;;:4;:18;;;7499:552;;7657:5;7641:12;;:21;;;;;;;:::i;:::-;;;;;;;;7499:552;;;7695:19;7717:9;:15;7727:4;7717:15;;;;;;;;;;;;;;;;7695:37;;7765:5;7751:11;:19;7747:117;;;7823:4;7829:11;7842:5;7798:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7747:117;8019:5;8005:11;:19;7987:9;:15;7997:4;7987:15;;;;;;;;;;;;;;;:37;;;;7680:371;7499:552;8081:1;8067:16;;:2;:16;;;8063:435;;8249:5;8233:12;;:21;;;;;;;;;;;8063:435;;;8466:5;8449:9;:13;8459:2;8449:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;8063:435;8530:2;8515:25;;8524:4;8515:25;;;8534:5;8515:25;;;;;;:::i;:::-;;;;;;;;7413:1135;;;:::o;2147:120:6:-;1691:8;:6;:8::i;:::-;1683:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2216:5:::1;2206:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2237:22;2246:12;:10;:12::i;:::-;2237:22;;;;;;:::i;:::-;;;;;;;;2147:120::o:0;11309:463:8:-;11449:1;11427:24;;:10;:24;;;11423:96;;11504:1;11475:32;;;;;;;;;;;:::i;:::-;;;;;;;;11423:96;11552:1;11533:21;;:7;:21;;;11529:92;;11606:1;11578:31;;;;;;;;;;;:::i;:::-;;;;;;;;11529:92;11666:5;11631:11;:23;11643:10;11631:23;;;;;;;;;;;;;;;:32;11655:7;11631:32;;;;;;;;;;;;;;;:40;;;;11686:9;11682:83;;;11738:7;11717:36;;11726:10;11717:36;;;11747:5;11717:36;;;;;;:::i;:::-;;;;;;;;11682:83;11309:463;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:117::-;4962:1;4959;4952:12;4976:117;5085:1;5082;5075:12;5099:180;5147:77;5144:1;5137:88;5244:4;5241:1;5234:15;5268:4;5265:1;5258:15;5285:281;5368:27;5390:4;5368:27;:::i;:::-;5360:6;5356:40;5498:6;5486:10;5483:22;5462:18;5450:10;5447:34;5444:62;5441:88;;;5509:18;;:::i;:::-;5441:88;5549:10;5545:2;5538:22;5328:238;5285:281;;:::o;5572:129::-;5606:6;5633:20;;:::i;:::-;5623:30;;5662:33;5690:4;5682:6;5662:33;:::i;:::-;5572:129;;;:::o;5707:308::-;5769:4;5859:18;5851:6;5848:30;5845:56;;;5881:18;;:::i;:::-;5845:56;5919:29;5941:6;5919:29;:::i;:::-;5911:37;;6003:4;5997;5993:15;5985:23;;5707:308;;;:::o;6021:146::-;6118:6;6113:3;6108;6095:30;6159:1;6150:6;6145:3;6141:16;6134:27;6021:146;;;:::o;6173:425::-;6251:5;6276:66;6292:49;6334:6;6292:49;:::i;:::-;6276:66;:::i;:::-;6267:75;;6365:6;6358:5;6351:21;6403:4;6396:5;6392:16;6441:3;6432:6;6427:3;6423:16;6420:25;6417:112;;;6448:79;;:::i;:::-;6417:112;6538:54;6585:6;6580:3;6575;6538:54;:::i;:::-;6257:341;6173:425;;;;;:::o;6618:340::-;6674:5;6723:3;6716:4;6708:6;6704:17;6700:27;6690:122;;6731:79;;:::i;:::-;6690:122;6848:6;6835:20;6873:79;6948:3;6940:6;6933:4;6925:6;6921:17;6873:79;:::i;:::-;6864:88;;6680:278;6618:340;;;;:::o;6964:834::-;7052:6;7060;7109:2;7097:9;7088:7;7084:23;7080:32;7077:119;;;7115:79;;:::i;:::-;7077:119;7263:1;7252:9;7248:17;7235:31;7293:18;7285:6;7282:30;7279:117;;;7315:79;;:::i;:::-;7279:117;7420:63;7475:7;7466:6;7455:9;7451:22;7420:63;:::i;:::-;7410:73;;7206:287;7560:2;7549:9;7545:18;7532:32;7591:18;7583:6;7580:30;7577:117;;;7613:79;;:::i;:::-;7577:117;7718:63;7773:7;7764:6;7753:9;7749:22;7718:63;:::i;:::-;7708:73;;7503:288;6964:834;;;;;:::o;7804:329::-;7863:6;7912:2;7900:9;7891:7;7887:23;7883:32;7880:119;;;7918:79;;:::i;:::-;7880:119;8038:1;8063:53;8108:7;8099:6;8088:9;8084:22;8063:53;:::i;:::-;8053:63;;8009:117;7804:329;;;;:::o;8139:118::-;8226:24;8244:5;8226:24;:::i;:::-;8221:3;8214:37;8139:118;;:::o;8263:222::-;8356:4;8394:2;8383:9;8379:18;8371:26;;8407:71;8475:1;8464:9;8460:17;8451:6;8407:71;:::i;:::-;8263:222;;;;:::o;8491:474::-;8559:6;8567;8616:2;8604:9;8595:7;8591:23;8587:32;8584:119;;;8622:79;;:::i;:::-;8584:119;8742:1;8767:53;8812:7;8803:6;8792:9;8788:22;8767:53;:::i;:::-;8757:63;;8713:117;8869:2;8895:53;8940:7;8931:6;8920:9;8916:22;8895:53;:::i;:::-;8885:63;;8840:118;8491:474;;;;;:::o;8971:180::-;9019:77;9016:1;9009:88;9116:4;9113:1;9106:15;9140:4;9137:1;9130:15;9157:320;9201:6;9238:1;9232:4;9228:12;9218:22;;9285:1;9279:4;9275:12;9306:18;9296:81;;9362:4;9354:6;9350:17;9340:27;;9296:81;9424:2;9416:6;9413:14;9393:18;9390:38;9387:84;;9443:18;;:::i;:::-;9387:84;9208:269;9157:320;;;:::o;9483:166::-;9623:18;9619:1;9611:6;9607:14;9600:42;9483:166;:::o;9655:366::-;9797:3;9818:67;9882:2;9877:3;9818:67;:::i;:::-;9811:74;;9894:93;9983:3;9894:93;:::i;:::-;10012:2;10007:3;10003:12;9996:19;;9655:366;;;:::o;10027:419::-;10193:4;10231:2;10220:9;10216:18;10208:26;;10280:9;10274:4;10270:20;10266:1;10255:9;10251:17;10244:47;10308:131;10434:4;10308:131;:::i;:::-;10300:139;;10027:419;;;:::o;10452:220::-;10592:34;10588:1;10580:6;10576:14;10569:58;10661:3;10656:2;10648:6;10644:15;10637:28;10452:220;:::o;10678:366::-;10820:3;10841:67;10905:2;10900:3;10841:67;:::i;:::-;10834:74;;10917:93;11006:3;10917:93;:::i;:::-;11035:2;11030:3;11026:12;11019:19;;10678:366;;;:::o;11050:419::-;11216:4;11254:2;11243:9;11239:18;11231:26;;11303:9;11297:4;11293:20;11289:1;11278:9;11274:17;11267:47;11331:131;11457:4;11331:131;:::i;:::-;11323:139;;11050:419;;;:::o;11475:141::-;11524:4;11547:3;11539:11;;11570:3;11567:1;11560:14;11604:4;11601:1;11591:18;11583:26;;11475:141;;;:::o;11622:93::-;11659:6;11706:2;11701;11694:5;11690:14;11686:23;11676:33;;11622:93;;;:::o;11721:107::-;11765:8;11815:5;11809:4;11805:16;11784:37;;11721:107;;;;:::o;11834:393::-;11903:6;11953:1;11941:10;11937:18;11976:97;12006:66;11995:9;11976:97;:::i;:::-;12094:39;12124:8;12113:9;12094:39;:::i;:::-;12082:51;;12166:4;12162:9;12155:5;12151:21;12142:30;;12215:4;12205:8;12201:19;12194:5;12191:30;12181:40;;11910:317;;11834:393;;;;;:::o;12233:60::-;12261:3;12282:5;12275:12;;12233:60;;;:::o;12299:142::-;12349:9;12382:53;12400:34;12409:24;12427:5;12409:24;:::i;:::-;12400:34;:::i;:::-;12382:53;:::i;:::-;12369:66;;12299:142;;;:::o;12447:75::-;12490:3;12511:5;12504:12;;12447:75;;;:::o;12528:269::-;12638:39;12669:7;12638:39;:::i;:::-;12699:91;12748:41;12772:16;12748:41;:::i;:::-;12740:6;12733:4;12727:11;12699:91;:::i;:::-;12693:4;12686:105;12604:193;12528:269;;;:::o;12803:73::-;12848:3;12803:73;:::o;12882:189::-;12959:32;;:::i;:::-;13000:65;13058:6;13050;13044:4;13000:65;:::i;:::-;12935:136;12882:189;;:::o;13077:186::-;13137:120;13154:3;13147:5;13144:14;13137:120;;;13208:39;13245:1;13238:5;13208:39;:::i;:::-;13181:1;13174:5;13170:13;13161:22;;13137:120;;;13077:186;;:::o;13269:543::-;13370:2;13365:3;13362:11;13359:446;;;13404:38;13436:5;13404:38;:::i;:::-;13488:29;13506:10;13488:29;:::i;:::-;13478:8;13474:44;13671:2;13659:10;13656:18;13653:49;;;13692:8;13677:23;;13653:49;13715:80;13771:22;13789:3;13771:22;:::i;:::-;13761:8;13757:37;13744:11;13715:80;:::i;:::-;13374:431;;13359:446;13269:543;;;:::o;13818:117::-;13872:8;13922:5;13916:4;13912:16;13891:37;;13818:117;;;;:::o;13941:169::-;13985:6;14018:51;14066:1;14062:6;14054:5;14051:1;14047:13;14018:51;:::i;:::-;14014:56;14099:4;14093;14089:15;14079:25;;13992:118;13941:169;;;;:::o;14115:295::-;14191:4;14337:29;14362:3;14356:4;14337:29;:::i;:::-;14329:37;;14399:3;14396:1;14392:11;14386:4;14383:21;14375:29;;14115:295;;;;:::o;14415:1395::-;14532:37;14565:3;14532:37;:::i;:::-;14634:18;14626:6;14623:30;14620:56;;;14656:18;;:::i;:::-;14620:56;14700:38;14732:4;14726:11;14700:38;:::i;:::-;14785:67;14845:6;14837;14831:4;14785:67;:::i;:::-;14879:1;14903:4;14890:17;;14935:2;14927:6;14924:14;14952:1;14947:618;;;;15609:1;15626:6;15623:77;;;15675:9;15670:3;15666:19;15660:26;15651:35;;15623:77;15726:67;15786:6;15779:5;15726:67;:::i;:::-;15720:4;15713:81;15582:222;14917:887;;14947:618;14999:4;14995:9;14987:6;14983:22;15033:37;15065:4;15033:37;:::i;:::-;15092:1;15106:208;15120:7;15117:1;15114:14;15106:208;;;15199:9;15194:3;15190:19;15184:26;15176:6;15169:42;15250:1;15242:6;15238:14;15228:24;;15297:2;15286:9;15282:18;15269:31;;15143:4;15140:1;15136:12;15131:17;;15106:208;;;15342:6;15333:7;15330:19;15327:179;;;15400:9;15395:3;15391:19;15385:26;15443:48;15485:4;15477:6;15473:17;15462:9;15443:48;:::i;:::-;15435:6;15428:64;15350:156;15327:179;15552:1;15548;15540:6;15536:14;15532:22;15526:4;15519:36;14954:611;;;14917:887;;14507:1303;;;14415:1395;;:::o;15816:180::-;15864:77;15861:1;15854:88;15961:4;15958:1;15951:15;15985:4;15982:1;15975:15;16002:102;16044:8;16091:5;16088:1;16084:13;16063:34;;16002:102;;;:::o;16110:848::-;16171:5;16178:4;16202:6;16193:15;;16226:5;16217:14;;16240:712;16261:1;16251:8;16248:15;16240:712;;;16356:4;16351:3;16347:14;16341:4;16338:24;16335:50;;;16365:18;;:::i;:::-;16335:50;16415:1;16405:8;16401:16;16398:451;;;16830:4;16823:5;16819:16;16810:25;;16398:451;16880:4;16874;16870:15;16862:23;;16910:32;16933:8;16910:32;:::i;:::-;16898:44;;16240:712;;;16110:848;;;;;;;:::o;16964:1073::-;17018:5;17209:8;17199:40;;17230:1;17221:10;;17232:5;;17199:40;17258:4;17248:36;;17275:1;17266:10;;17277:5;;17248:36;17344:4;17392:1;17387:27;;;;17428:1;17423:191;;;;17337:277;;17387:27;17405:1;17396:10;;17407:5;;;17423:191;17468:3;17458:8;17455:17;17452:43;;;17475:18;;:::i;:::-;17452:43;17524:8;17521:1;17517:16;17508:25;;17559:3;17552:5;17549:14;17546:40;;;17566:18;;:::i;:::-;17546:40;17599:5;;;17337:277;;17723:2;17713:8;17710:16;17704:3;17698:4;17695:13;17691:36;17673:2;17663:8;17660:16;17655:2;17649:4;17646:12;17642:35;17626:111;17623:246;;;17779:8;17773:4;17769:19;17760:28;;17814:3;17807:5;17804:14;17801:40;;;17821:18;;:::i;:::-;17801:40;17854:5;;17623:246;17894:42;17932:3;17922:8;17916:4;17913:1;17894:42;:::i;:::-;17879:57;;;;17968:4;17963:3;17959:14;17952:5;17949:25;17946:51;;;17977:18;;:::i;:::-;17946:51;18026:4;18019:5;18015:16;18006:25;;16964:1073;;;;;;:::o;18043:281::-;18101:5;18125:23;18143:4;18125:23;:::i;:::-;18117:31;;18169:25;18185:8;18169:25;:::i;:::-;18157:37;;18213:104;18250:66;18240:8;18234:4;18213:104;:::i;:::-;18204:113;;18043:281;;;;:::o;18330:410::-;18370:7;18393:20;18411:1;18393:20;:::i;:::-;18388:25;;18427:20;18445:1;18427:20;:::i;:::-;18422:25;;18482:1;18479;18475:9;18504:30;18522:11;18504:30;:::i;:::-;18493:41;;18683:1;18674:7;18670:15;18667:1;18664:22;18644:1;18637:9;18617:83;18594:139;;18713:18;;:::i;:::-;18594:139;18378:362;18330:410;;;;:::o;18746:179::-;18886:31;18882:1;18874:6;18870:14;18863:55;18746:179;:::o;18931:366::-;19073:3;19094:67;19158:2;19153:3;19094:67;:::i;:::-;19087:74;;19170:93;19259:3;19170:93;:::i;:::-;19288:2;19283:3;19279:12;19272:19;;18931:366;;;:::o;19303:419::-;19469:4;19507:2;19496:9;19492:18;19484:26;;19556:9;19550:4;19546:20;19542:1;19531:9;19527:17;19520:47;19584:131;19710:4;19584:131;:::i;:::-;19576:139;;19303:419;;;:::o;19728:442::-;19877:4;19915:2;19904:9;19900:18;19892:26;;19928:71;19996:1;19985:9;19981:17;19972:6;19928:71;:::i;:::-;20009:72;20077:2;20066:9;20062:18;20053:6;20009:72;:::i;:::-;20091;20159:2;20148:9;20144:18;20135:6;20091:72;:::i;:::-;19728:442;;;;;;:::o;20176:191::-;20216:3;20235:20;20253:1;20235:20;:::i;:::-;20230:25;;20269:20;20287:1;20269:20;:::i;:::-;20264:25;;20312:1;20309;20305:9;20298:16;;20333:3;20330:1;20327:10;20324:36;;;20340:18;;:::i;:::-;20324:36;20176:191;;;;:::o;20373:170::-;20513:22;20509:1;20501:6;20497:14;20490:46;20373:170;:::o;20549:366::-;20691:3;20712:67;20776:2;20771:3;20712:67;:::i;:::-;20705:74;;20788:93;20877:3;20788:93;:::i;:::-;20906:2;20901:3;20897:12;20890:19;;20549:366;;;:::o;20921:419::-;21087:4;21125:2;21114:9;21110:18;21102:26;;21174:9;21168:4;21164:20;21160:1;21149:9;21145:17;21138:47;21202:131;21328:4;21202:131;:::i;:::-;21194:139;;20921:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1619000",
								"executionCost": "1692",
								"totalCost": "1620692"
							},
							"external": {
								"_burn(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "361",
								"initialize()": "24475",
								"initialize(string,string)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"pauseContract()": "30127",
								"paused()": "2584",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30708",
								"unpauseContract()": "30122"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_approve(address,address,uint256,bool)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1193,
									"end": 12956,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208dd5a1273ac50d5a26e1ccf1d2e2f8d593200b7eb49c9be587a86f0975d9cb2864736f6c63430008160033",
									".code": [
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "6161EB18"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "B33712C5"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "6161EB18"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "8129FC1C"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "439766CE"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "4CD88B76"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 12956,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2275,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2275,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4622,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4622,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4622,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3382,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3382,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5678,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5678,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3226,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3226,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4827,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4827,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 12740,
											"end": 12811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1790,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1790,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1088,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1088,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 9539,
											"end": 9749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9539,
											"end": 9749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3544,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3544,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3544,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 924,
											"end": 988,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 924,
											"end": 988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 924,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 924,
											"end": 988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 988,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 924,
											"end": 988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 988,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2485,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2485,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3867,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3867,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3867,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 12876,
											"end": 12951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4151,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4151,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 4151,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6140,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6140,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2333,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2346,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2346,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4731,
											"end": 4741,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4750,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4757,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4722,
											"end": 4758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4758,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4722,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4800,
											"end": 4811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3454,
											"end": 3473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3454,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1405,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5824,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5824,
											"end": 5836,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5824,
											"end": 5836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5863,
											"end": 5867,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 5876,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5883,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5847,
											"end": 5884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5847,
											"end": 5884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5905,
											"end": 5909,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5913,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5920,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5895,
											"end": 5921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5895,
											"end": 5921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5939,
											"end": 5943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5932,
											"end": 5943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3293,
											"end": 3309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4984,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1414,
											"end": 1420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1414,
											"end": 1422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1422,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1405,
											"end": 1443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1405,
											"end": 1443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4917,
											"end": 4924,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4926,
											"end": 4931,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4911,
											"end": 4932,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4984,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12795,
											"end": 12803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 12795,
											"end": 12801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 12795,
											"end": 12803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12795,
											"end": 12803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 12795,
											"end": 12803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1910,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1941,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1934,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2053,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "3B9ACA00"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2040,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2037,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2025,
											"end": 2066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2066,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2117,
											"end": 2129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2117,
											"end": 2129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2129,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2174,
											"end": 2186,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2174,
											"end": 2186,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2145,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2187,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 2205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1159,
											"end": 1166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9630,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9609,
											"end": 9630,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9630,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9609,
											"end": 9630,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9630,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 9605,
											"end": 9696,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH",
											"source": 8,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 9654,
											"end": 9684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9684,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 9696,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 9605,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 9714,
											"end": 9721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9706,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9741,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 9706,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 988,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 924,
											"end": 988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 975,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 965,
											"end": 972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 980,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 965,
											"end": 980,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 965,
											"end": 980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2558,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2558,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1405,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3997,
											"end": 4007,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4011,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4018,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3987,
											"end": 4019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3987,
											"end": 4019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4069,
											"end": 4080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4080,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 12876,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4984,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 12933,
											"end": 12941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 12933,
											"end": 12943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 12933,
											"end": 12943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4236,
											"end": 4243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4274,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4286,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4984,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4984,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6217,
											"end": 6281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 6217,
											"end": 6281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6338,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6322,
											"end": 6328,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6339,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6368,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10442,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 10302,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10392,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10401,
											"end": 10411,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10422,
											"end": 10427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10433,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10392,
											"end": 10434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10392,
											"end": 10434,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10392,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 603,
											"end": 701,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 603,
											"end": 701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 656,
											"end": 663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 693,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 676,
											"end": 693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 603,
											"end": 701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 603,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12064,
											"end": 12571,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12064,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12208,
											"end": 12220,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12222,
											"end": 12229,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12198,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 12198,
											"end": 12230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12171,
											"end": 12230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12171,
											"end": 12230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12264,
											"end": 12281,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12245,
											"end": 12261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12245,
											"end": 12281,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 12241,
											"end": 12564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12321,
											"end": 12326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 12298,
											"end": 12430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12390,
											"end": 12406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12408,
											"end": 12413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH",
											"source": 8,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 12354,
											"end": 12414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12414,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12430,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 12298,
											"end": 12430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12496,
											"end": 12503,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12524,
											"end": 12529,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12505,
											"end": 12521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12531,
											"end": 12536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12473,
											"end": 12537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 12473,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12564,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 12241,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12160,
											"end": 12571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 7089,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6781,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6881,
											"end": 6882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6861,
											"end": 6949,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6907,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6937,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6949,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6861,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6979,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6959,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6959,
											"end": 7047,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH",
											"source": 8,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7003,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6959,
											"end": 7047,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6959,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7073,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7057,
											"end": 7081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 7089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 7089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 7089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 9211,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8901,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 8999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8988,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8988,
											"end": 9081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH",
											"source": 8,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 9037,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9069,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8988,
											"end": 9081,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8988,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9091,
											"end": 9126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9126,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9091,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9159,
											"end": 9160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9172,
											"end": 9177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 9142,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9178,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 9211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 9211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 9211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1888,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1405,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1948,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1985,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1985,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1985,
											"end": 1997,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 1997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1985,
											"end": 1997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1978,
											"end": 1998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1998,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 8548,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7413,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7507,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7641,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7726,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7770,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7864,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 7747,
											"end": 7864,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH",
											"source": 8,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7798,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7848,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7864,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 7747,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8019,
											"end": 8024,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 7996,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8024,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8024,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 8024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7680,
											"end": 8051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7499,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8067,
											"end": 8083,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8067,
											"end": 8083,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8083,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8067,
											"end": 8083,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8083,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8245,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8233,
											"end": 8245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8466,
											"end": 8471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8461,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 8063,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8528,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 8515,
											"end": 8540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8540,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 8548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 8548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 8548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 8548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2147,
											"end": 2267,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2147,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1691,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1699,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1691,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1683,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1683,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2246,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2246,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2246,
											"end": 2258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2246,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2237,
											"end": 2259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2259,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11427,
											"end": 11451,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11427,
											"end": 11451,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11451,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11427,
											"end": 11451,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11451,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 11475,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11507,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11533,
											"end": 11554,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11533,
											"end": 11554,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11540,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11554,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11533,
											"end": 11554,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 11529,
											"end": 11621,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11606,
											"end": 11607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH",
											"source": 8,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 11578,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11578,
											"end": 11609,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11621,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 11529,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11642,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11653,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11654,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11655,
											"end": 11662,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11663,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11671,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11631,
											"end": 11671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11686,
											"end": 11695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11682,
											"end": 11765,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11682,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 11682,
											"end": 11765,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11726,
											"end": 11736,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11747,
											"end": 11752,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 11717,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11753,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 11682,
											"end": 11765,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 11682,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4970,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4853,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 5093,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4976,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5279,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5099,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5147,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5248,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 5249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5272,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5368,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5483,
											"end": 5505,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5447,
											"end": 5481,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5506,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5509,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5549,
											"end": 5559,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5328,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5606,
											"end": 5612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5633,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5662,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 6015,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5707,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5901,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5845,
											"end": 5901,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5881,
											"end": 5899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5901,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5845,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5919,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5948,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5919,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5993,
											"end": 6008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 6015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 6015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 6015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 6015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6167,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6021,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6111,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6125,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6156,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 6292,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6292,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6341,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6292,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6276,
											"end": 6342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6342,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 6276,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6396,
											"end": 6401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6408,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6417,
											"end": 6529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 6448,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6448,
											"end": 6527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6527,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 6448,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6529,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6417,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6538,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6578,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6538,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6538,
											"end": 6592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6538,
											"end": 6592,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6538,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6708,
											"end": 6714,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6704,
											"end": 6721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6727,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6690,
											"end": 6812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6731,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6812,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6690,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6855,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 6873,
											"end": 6952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7088,
											"end": 7095,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7107,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7112,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7115,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7248,
											"end": 7265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7235,
											"end": 7266,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7285,
											"end": 7291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7312,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7396,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7279,
											"end": 7396,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7315,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7396,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7279,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 7475,
											"end": 7482,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 7472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7420,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7483,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 7420,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7549,
											"end": 7558,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7564,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7609,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7610,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7694,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7577,
											"end": 7694,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7613,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7694,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7577,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7773,
											"end": 7780,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7764,
											"end": 7770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7718,
											"end": 7781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7781,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7718,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7503,
											"end": 7791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7898,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7910,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7915,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7880,
											"end": 7999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7918,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7918,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7997,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7918,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7999,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7880,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8108,
											"end": 8115,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8099,
											"end": 8105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8063,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8053,
											"end": 8116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8053,
											"end": 8116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 8133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8139,
											"end": 8257,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8139,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8226,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8244,
											"end": 8249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8226,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 8226,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8226,
											"end": 8250,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8226,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8139,
											"end": 8257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8139,
											"end": 8257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8139,
											"end": 8257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8379,
											"end": 8397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 8475,
											"end": 8476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8407,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8478,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 8407,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 8565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8618,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8604,
											"end": 8613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8602,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8614,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8619,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8703,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8584,
											"end": 8703,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8622,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 8622,
											"end": 8701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8701,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8622,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8703,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8584,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8742,
											"end": 8743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8812,
											"end": 8819,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8803,
											"end": 8809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8788,
											"end": 8810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8767,
											"end": 8820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8820,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8767,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8820,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8940,
											"end": 8947,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8920,
											"end": 8929,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8916,
											"end": 8938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8895,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8895,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8840,
											"end": 8958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9151,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8971,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9096,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9120,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9106,
											"end": 9121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9145,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9477,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 9157,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9201,
											"end": 9207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9238,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9232,
											"end": 9236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9240,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9285,
											"end": 9286,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9287,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 9296,
											"end": 9377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9362,
											"end": 9366,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9354,
											"end": 9360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9367,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9377,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 9296,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9424,
											"end": 9426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9427,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9428,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 9387,
											"end": 9471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 9443,
											"end": 9461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9471,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 9387,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9649,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 9483,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9882,
											"end": 9884,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9877,
											"end": 9880,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 9818,
											"end": 9885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 9894,
											"end": 9987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 10021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10193,
											"end": 10197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10229,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10290,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10244,
											"end": 10291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 10308,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10672,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10452,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10592,
											"end": 10626,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10576,
											"end": 10590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10569,
											"end": 10627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10664,
											"name": "PUSH",
											"source": 9,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 11044,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10678,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 10905,
											"end": 10907,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 10900,
											"end": 10903,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10841,
											"end": 10908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10908,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 10841,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10834,
											"end": 10908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10834,
											"end": 10908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11006,
											"end": 11009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10917,
											"end": 11010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11010,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10917,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11030,
											"end": 11033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11019,
											"end": 11038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11019,
											"end": 11038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 11044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 11044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 11044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 11044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11469,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 11050,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11256,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11231,
											"end": 11257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11231,
											"end": 11257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11293,
											"end": 11313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11290,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11274,
											"end": 11291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11267,
											"end": 11314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11457,
											"end": 11461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 11331,
											"end": 11462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11462,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11331,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11323,
											"end": 11462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11323,
											"end": 11462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11616,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11475,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11560,
											"end": 11574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11604,
											"end": 11608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11601,
											"end": 11602,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11583,
											"end": 11609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11583,
											"end": 11609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11715,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11622,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11706,
											"end": 11708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11694,
											"end": 11699,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 11704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 11709,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11676,
											"end": 11709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11676,
											"end": 11709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11622,
											"end": 11715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11815,
											"end": 11820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 11821,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11721,
											"end": 11828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11953,
											"end": 11954,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11941,
											"end": 11951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11955,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12006,
											"end": 12072,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11995,
											"end": 12004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 11976,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12073,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 11976,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12124,
											"end": 12132,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12122,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 12094,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12133,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12094,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12082,
											"end": 12133,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12082,
											"end": 12133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12166,
											"end": 12170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12155,
											"end": 12160,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12205,
											"end": 12213,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12201,
											"end": 12220,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12194,
											"end": 12199,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12221,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12221,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12293,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12233,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12282,
											"end": 12287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12441,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12299,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 12400,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 12409,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 12427,
											"end": 12432,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12409,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 12409,
											"end": 12433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12409,
											"end": 12433,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 12409,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12400,
											"end": 12434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12434,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 12400,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12382,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 12382,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12382,
											"end": 12435,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 12382,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12447,
											"end": 12522,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12447,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12447,
											"end": 12522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12447,
											"end": 12522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12447,
											"end": 12522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12447,
											"end": 12522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12797,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12528,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12638,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 12669,
											"end": 12676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12638,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12638,
											"end": 12677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12638,
											"end": 12677,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 12638,
											"end": 12677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12748,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 12772,
											"end": 12788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12748,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12748,
											"end": 12789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12748,
											"end": 12789,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 12748,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12740,
											"end": 12746,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12733,
											"end": 12737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12727,
											"end": 12738,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12699,
											"end": 12790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12790,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12699,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12791,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12604,
											"end": 12797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12876,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 12803,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12848,
											"end": 12851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12803,
											"end": 12876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12882,
											"end": 13071,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12882,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12959,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 12959,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 12959,
											"end": 12991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12959,
											"end": 12991,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 12959,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 13058,
											"end": 13064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13056,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 13000,
											"end": 13065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13065,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 13000,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12882,
											"end": 13071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12882,
											"end": 13071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12882,
											"end": 13071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13077,
											"end": 13263,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 13077,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13154,
											"end": 13157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13147,
											"end": 13152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13144,
											"end": 13158,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 13245,
											"end": 13246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 13208,
											"end": 13247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13247,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 13208,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13181,
											"end": 13182,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13174,
											"end": 13179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13161,
											"end": 13183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13161,
											"end": 13183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 13137,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13077,
											"end": 13263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13077,
											"end": 13263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13077,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13812,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 13269,
											"end": 13812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13365,
											"end": 13368,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13373,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 13359,
											"end": 13805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13404,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 13436,
											"end": 13441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13404,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13404,
											"end": 13442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13404,
											"end": 13442,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 13404,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 13506,
											"end": 13516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 13488,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13517,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 13488,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13478,
											"end": 13486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13474,
											"end": 13518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13671,
											"end": 13673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13659,
											"end": 13669,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13656,
											"end": 13674,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13702,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13653,
											"end": 13702,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 13700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13702,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13653,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13789,
											"end": 13792,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 13771,
											"end": 13793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13761,
											"end": 13769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13757,
											"end": 13794,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13744,
											"end": 13755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 13715,
											"end": 13795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13795,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13715,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13805,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 13359,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13872,
											"end": 13880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13922,
											"end": 13927,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13912,
											"end": 13928,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 13991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 14066,
											"end": 14067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14068,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14059,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14051,
											"end": 14052,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 14047,
											"end": 14060,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 14018,
											"end": 14069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14069,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 14018,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14014,
											"end": 14070,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14099,
											"end": 14103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14097,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14089,
											"end": 14104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 14110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 14110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14191,
											"end": 14195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14337,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14356,
											"end": 14360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 14337,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14366,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 14337,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14396,
											"end": 14397,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 14392,
											"end": 14403,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14404,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 14404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 14404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 15810,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 14415,
											"end": 15810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14532,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 14565,
											"end": 14568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14532,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14532,
											"end": 14569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14532,
											"end": 14569,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 14532,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14634,
											"end": 14652,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14626,
											"end": 14632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14623,
											"end": 14653,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14620,
											"end": 14676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14620,
											"end": 14676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 14620,
											"end": 14676,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14656,
											"end": 14674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14620,
											"end": 14676,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 14620,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14700,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14732,
											"end": 14736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14726,
											"end": 14737,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14700,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 14700,
											"end": 14738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14700,
											"end": 14738,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14700,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14845,
											"end": 14851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 14785,
											"end": 14852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 14852,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14785,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14879,
											"end": 14880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14903,
											"end": 14907,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14890,
											"end": 14907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 14907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 14937,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14927,
											"end": 14933,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14938,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14952,
											"end": 14953,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15609,
											"end": 15610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15626,
											"end": 15632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 15623,
											"end": 15700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15675,
											"end": 15684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15670,
											"end": 15673,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15666,
											"end": 15685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15660,
											"end": 15686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15700,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 15623,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 15786,
											"end": 15792,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15779,
											"end": 15784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 15726,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 15793,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 15726,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15720,
											"end": 15724,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15713,
											"end": 15794,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15582,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 15804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 14917,
											"end": 15804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14947,
											"end": 15565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15003,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14995,
											"end": 15004,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 14993,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 15005,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15065,
											"end": 15069,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15033,
											"end": 15070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15070,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15033,
											"end": 15070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15092,
											"end": 15093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15120,
											"end": 15127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15117,
											"end": 15118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15114,
											"end": 15128,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15199,
											"end": 15208,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15197,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15184,
											"end": 15210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15176,
											"end": 15182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15169,
											"end": 15211,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15250,
											"end": 15251,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15242,
											"end": 15248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15238,
											"end": 15252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15228,
											"end": 15252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15228,
											"end": 15252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15297,
											"end": 15299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15269,
											"end": 15300,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15269,
											"end": 15300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15143,
											"end": 15147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15140,
											"end": 15141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15136,
											"end": 15148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15131,
											"end": 15148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15131,
											"end": 15148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15106,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15342,
											"end": 15348,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15333,
											"end": 15340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15330,
											"end": 15349,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15327,
											"end": 15506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15327,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15327,
											"end": 15506,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15400,
											"end": 15409,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15398,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15443,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15485,
											"end": 15489,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15477,
											"end": 15483,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15473,
											"end": 15490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15462,
											"end": 15471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15443,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 15443,
											"end": 15491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15443,
											"end": 15491,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15443,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15435,
											"end": 15441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15428,
											"end": 15492,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15350,
											"end": 15506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15327,
											"end": 15506,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15327,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15552,
											"end": 15553,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15548,
											"end": 15549,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 15540,
											"end": 15546,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15536,
											"end": 15550,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15532,
											"end": 15554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15526,
											"end": 15530,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15519,
											"end": 15555,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 15565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 15565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 15565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 15804,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 14917,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 15810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 15810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 15810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 15810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 15810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 15810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15816,
											"end": 15996,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 15816,
											"end": 15996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15864,
											"end": 15941,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15861,
											"end": 15862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15961,
											"end": 15965,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 15958,
											"end": 15959,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15951,
											"end": 15966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15985,
											"end": 15989,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15975,
											"end": 15990,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16104,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 16002,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16044,
											"end": 16052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 16096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16088,
											"end": 16089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16084,
											"end": 16097,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 16063,
											"end": 16097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16063,
											"end": 16097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16171,
											"end": 16176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16178,
											"end": 16182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16193,
											"end": 16208,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16193,
											"end": 16208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16217,
											"end": 16231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16217,
											"end": 16231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16262,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16251,
											"end": 16259,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16248,
											"end": 16263,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16356,
											"end": 16360,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16354,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16347,
											"end": 16361,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16338,
											"end": 16362,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16335,
											"end": 16385,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16335,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 16335,
											"end": 16385,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16365,
											"end": 16383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 16365,
											"end": 16383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 16365,
											"end": 16383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16365,
											"end": 16383,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 16365,
											"end": 16383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16335,
											"end": 16385,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 16335,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16415,
											"end": 16416,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16405,
											"end": 16413,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16417,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16849,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16398,
											"end": 16849,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16823,
											"end": 16828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16819,
											"end": 16835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16810,
											"end": 16835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16810,
											"end": 16835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16849,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16398,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16880,
											"end": 16884,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16874,
											"end": 16878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16870,
											"end": 16885,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16910,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16933,
											"end": 16941,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16910,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 16910,
											"end": 16942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16910,
											"end": 16942,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16910,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 16240,
											"end": 16952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16110,
											"end": 16958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17018,
											"end": 17023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 17199,
											"end": 17239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17221,
											"end": 17231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17221,
											"end": 17231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17232,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17232,
											"end": 17237,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17239,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 17199,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17258,
											"end": 17262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17275,
											"end": 17276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17277,
											"end": 17282,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17344,
											"end": 17348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17429,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17337,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 17337,
											"end": 17614,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17405,
											"end": 17406,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17396,
											"end": 17406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17396,
											"end": 17406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17407,
											"end": 17412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17407,
											"end": 17412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17407,
											"end": 17412,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17423,
											"end": 17614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17468,
											"end": 17471,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 17458,
											"end": 17466,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17455,
											"end": 17472,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17452,
											"end": 17495,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17452,
											"end": 17495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 17452,
											"end": 17495,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17475,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17475,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 17475,
											"end": 17493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17475,
											"end": 17493,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17475,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17452,
											"end": 17495,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 17452,
											"end": 17495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17524,
											"end": 17532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17521,
											"end": 17522,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 17517,
											"end": 17533,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17508,
											"end": 17533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17508,
											"end": 17533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17559,
											"end": 17562,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17552,
											"end": 17557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17549,
											"end": 17563,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17586,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17546,
											"end": 17586,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 17566,
											"end": 17584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17586,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17546,
											"end": 17586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17599,
											"end": 17604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17599,
											"end": 17604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17599,
											"end": 17604,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17337,
											"end": 17614,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 17337,
											"end": 17614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17337,
											"end": 17614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17725,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17713,
											"end": 17721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17710,
											"end": 17726,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17704,
											"end": 17707,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 17698,
											"end": 17702,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17708,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17691,
											"end": 17727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17673,
											"end": 17675,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 17663,
											"end": 17671,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17676,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17657,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 17649,
											"end": 17653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17646,
											"end": 17658,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17642,
											"end": 17677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17626,
											"end": 17737,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17869,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17623,
											"end": 17869,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17779,
											"end": 17787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 17777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17788,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17760,
											"end": 17788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17760,
											"end": 17788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17814,
											"end": 17817,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17804,
											"end": 17818,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17801,
											"end": 17841,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17801,
											"end": 17841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17801,
											"end": 17841,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17821,
											"end": 17839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 17821,
											"end": 17839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 17821,
											"end": 17839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17821,
											"end": 17839,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 17821,
											"end": 17839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17801,
											"end": 17841,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17801,
											"end": 17841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17854,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17854,
											"end": 17859,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17869,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17623,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17894,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17932,
											"end": 17935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 17930,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17916,
											"end": 17920,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17914,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17894,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 17894,
											"end": 17936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17894,
											"end": 17936,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17894,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17936,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17968,
											"end": 17972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17963,
											"end": 17966,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17959,
											"end": 17973,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17952,
											"end": 17957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17949,
											"end": 17974,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17946,
											"end": 17997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17946,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17946,
											"end": 17997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 17977,
											"end": 17995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17946,
											"end": 17997,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17946,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18030,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18019,
											"end": 18024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18015,
											"end": 18031,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 18037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18101,
											"end": 18106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18125,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 18143,
											"end": 18147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18125,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18125,
											"end": 18148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18125,
											"end": 18148,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 18125,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18117,
											"end": 18148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18117,
											"end": 18148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18169,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 18185,
											"end": 18193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18169,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 18169,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18169,
											"end": 18194,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 18169,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18194,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18213,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18250,
											"end": 18316,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18240,
											"end": 18248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18238,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18213,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 18213,
											"end": 18317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18213,
											"end": 18317,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18213,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18204,
											"end": 18317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18204,
											"end": 18317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18411,
											"end": 18412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18393,
											"end": 18413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18427,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 18445,
											"end": 18446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18427,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18427,
											"end": 18447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18427,
											"end": 18447,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 18427,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18422,
											"end": 18447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18422,
											"end": 18447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18482,
											"end": 18483,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18479,
											"end": 18480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18475,
											"end": 18484,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18504,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 18522,
											"end": 18533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18504,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18504,
											"end": 18534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18504,
											"end": 18534,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 18504,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18683,
											"end": 18684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18674,
											"end": 18681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18670,
											"end": 18685,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18667,
											"end": 18668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18664,
											"end": 18686,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18644,
											"end": 18645,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18637,
											"end": 18646,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18617,
											"end": 18700,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 18594,
											"end": 18733,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 18713,
											"end": 18731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18733,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 18594,
											"end": 18733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18378,
											"end": 18740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18746,
											"end": 18925,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 18746,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18886,
											"end": 18917,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577206F776E657220697320746865207A65726F2061646472657373000000"
										},
										{
											"begin": 18882,
											"end": 18883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18874,
											"end": 18880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18870,
											"end": 18884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18863,
											"end": 18918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18746,
											"end": 18925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18746,
											"end": 18925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19297,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 18931,
											"end": 19297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19094,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 19158,
											"end": 19160,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 19153,
											"end": 19156,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19094,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 19094,
											"end": 19161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19094,
											"end": 19161,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 19094,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 19259,
											"end": 19262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 19170,
											"end": 19263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19263,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 19170,
											"end": 19263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19288,
											"end": 19290,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19283,
											"end": 19286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19279,
											"end": 19291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19272,
											"end": 19291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19272,
											"end": 19291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19297,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 19297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19722,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 19303,
											"end": 19722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19469,
											"end": 19473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19507,
											"end": 19509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19496,
											"end": 19505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19484,
											"end": 19510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19484,
											"end": 19510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19556,
											"end": 19565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19550,
											"end": 19554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19546,
											"end": 19566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19542,
											"end": 19543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19520,
											"end": 19567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19584,
											"end": 19715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 19710,
											"end": 19714,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19584,
											"end": 19715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 19584,
											"end": 19715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19584,
											"end": 19715,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 19584,
											"end": 19715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19576,
											"end": 19715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19576,
											"end": 19715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19722,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19877,
											"end": 19881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19915,
											"end": 19917,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 19904,
											"end": 19913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 19918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19892,
											"end": 19918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19892,
											"end": 19918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19928,
											"end": 19999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 19996,
											"end": 19997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19985,
											"end": 19994,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19981,
											"end": 19998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19972,
											"end": 19978,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 19928,
											"end": 19999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 19928,
											"end": 19999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19928,
											"end": 19999,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 19928,
											"end": 19999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20009,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20077,
											"end": 20079,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20066,
											"end": 20075,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20062,
											"end": 20080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20053,
											"end": 20059,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20009,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 20009,
											"end": 20081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20009,
											"end": 20081,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20009,
											"end": 20081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 20159,
											"end": 20161,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20148,
											"end": 20157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20141,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 20091,
											"end": 20163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19728,
											"end": 20170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20216,
											"end": 20219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 20253,
											"end": 20254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 20235,
											"end": 20255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20235,
											"end": 20255,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 20235,
											"end": 20255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20230,
											"end": 20255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20230,
											"end": 20255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20269,
											"end": 20289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 20287,
											"end": 20288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20269,
											"end": 20289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 20269,
											"end": 20289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20269,
											"end": 20289,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 20269,
											"end": 20289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20264,
											"end": 20289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20264,
											"end": 20289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20312,
											"end": 20313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20309,
											"end": 20310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20305,
											"end": 20314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20298,
											"end": 20314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20298,
											"end": 20314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20333,
											"end": 20336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20330,
											"end": 20331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20327,
											"end": 20337,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 20324,
											"end": 20360,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20324,
											"end": 20360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20324,
											"end": 20360,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20340,
											"end": 20358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20324,
											"end": 20360,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20324,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20176,
											"end": 20367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20373,
											"end": 20543,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 20373,
											"end": 20543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20513,
											"end": 20535,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 20509,
											"end": 20510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20501,
											"end": 20507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20497,
											"end": 20511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20490,
											"end": 20536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20373,
											"end": 20543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20373,
											"end": 20543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20549,
											"end": 20915,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 20549,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20691,
											"end": 20694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20712,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 20776,
											"end": 20778,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 20771,
											"end": 20774,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20712,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 20712,
											"end": 20779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20712,
											"end": 20779,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 20712,
											"end": 20779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20705,
											"end": 20779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20705,
											"end": 20779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20788,
											"end": 20881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 20877,
											"end": 20880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20788,
											"end": 20881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 20788,
											"end": 20881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20788,
											"end": 20881,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 20788,
											"end": 20881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20906,
											"end": 20908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20901,
											"end": 20904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20897,
											"end": 20909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20890,
											"end": 20909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20890,
											"end": 20909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20549,
											"end": 20915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20549,
											"end": 20915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20549,
											"end": 20915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20549,
											"end": 20915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 21340,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 20921,
											"end": 21340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21087,
											"end": 21091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21125,
											"end": 21127,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21114,
											"end": 21123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21102,
											"end": 21128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21102,
											"end": 21128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21174,
											"end": 21183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21160,
											"end": 21161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21149,
											"end": 21158,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21145,
											"end": 21162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21138,
											"end": 21185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21202,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 21328,
											"end": 21332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21202,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 21202,
											"end": 21333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21202,
											"end": 21333,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 21202,
											"end": 21333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21194,
											"end": 21333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21194,
											"end": 21333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 21340,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 21340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 21340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 21340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Context.sol",
								"contracts/IERC20.sol",
								"contracts/IERC20Metadata.sol",
								"contracts/Pausable.sol",
								"contracts/draft-IERC6093.sol",
								"contracts/nabla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_burn(address,uint256)": "6161eb18",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"initialize()": "8129fc1c",
							"initialize(string,string)": "4cd88b76",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pauseContract()": "439766ce",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpauseContract()": "b33712c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAllow\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"_burn(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, lowering the total supply. Relies on the `_update` mechanism. Emits a {Transfer} event with `to` set to the zero address. NOTE: This function is not virtual, {_update} should be overridden instead\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"initialize()\":{\"details\":\"Initializes the contract in unpaused state.\"},\"initialize(string,string)\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nabla.sol\":\"NABLASYSTEMS\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xf835db18ee1e1a300b59475595dd90c7dbd6b6b5915d2c757abe9a6ad354a608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37487cc9dd89b75dc19366b84e1996eed23312e13b5b14ded452b801c9192671\",\"dweb:/ipfs/QmbFrBJ4RaRp5yBGvhQyjpaAqvzx1DHJ1VXU1ERwHxDtvy\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x23e6fd4345638753dded4bc89e6e019356eb7643b550eafae56dc88632e1f517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec87872cc0a4e15930c250d17e091fd22ac48118136241f3b07dfe350583be8\",\"dweb:/ipfs/QmXHjVwbiSi3RMt9awiWYntKBGi7qrM8tMcmb92Qc4LRCz\"]},\"contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x34f462b71426c5f4d3bfed6a9d4b3a3b80c5a7bf3b68d64c3683654337fa4287\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37eafdf3b8adcadac4c7b0018c564d6110e9d07d99a21039544240c9fd323f9f\",\"dweb:/ipfs/QmPuuFcofEXax4t872srhA5548umhucpHFmnExBDWHxMzk\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0xaa8f89f2fd0611b7fc05f7c54b376a048bf97af6c7bf5fe843f29ffabd336ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c12ffe7a57afa15402cc1d22e9cafc4b8de006fff519ac319a6d1b524f00f82f\",\"dweb:/ipfs/QmYbEeipTro3Gkj5X8Dxsh9C59UtqKPvqfv7mdmQEH47Hd\"]},\"contracts/draft-IERC6093.sol\":{\"keccak256\":\"0xf7981dc5818a66ce9106400d672d1b89c3ef2a3824572e98435f8a68825f569c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d686da8d731d90aa7116d949b58dea537acef1a63f23e3369d2f0a7a6a3d5af6\",\"dweb:/ipfs/QmTu51rPgjHzuGnZmrVbLD6pLiMAa8Yj8cAVJJJkUYXZwj\"]},\"contracts/nabla.sol\":{\"keccak256\":\"0x5e30738a778645145e23f998d1f95ea21d596cbba9ca55ef0e5fc6e1d62b5995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a529ca864788260b22a552979985d25f29b93740ec1f3aa6a5118f6bb73d7da\",\"dweb:/ipfs/QmZct1bYhKop3ADV2CV6Ey67bvZtZoAPsXXSAZMjTJcUby\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 583,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 821,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 827,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 832,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 836,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 838,
								"contract": "contracts/nabla.sol:NABLASYSTEMS",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							431
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 432,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 431,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 431,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								431
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							401
						]
					},
					"id": 402,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 158,
									"members": [
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 153,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 156,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 401,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 161,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 159,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 164,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 167,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 172,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 169,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 176,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 175,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 158,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 158,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 178,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$158_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 181,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 183,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 187,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"expression": {
														"id": 189,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 154,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 192,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 197,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													201
												],
												"declarations": [
													{
														"constant": false,
														"id": 201,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 200,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 202,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 207,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$401",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$401",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 205,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 215,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 217,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 220,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 222,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 225,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 231,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 182,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 232,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 237,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 240,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 241,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 182,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 242,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 248,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 251,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 255,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 261,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 260,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 158,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 158,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$158_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 268,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 270,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 273,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 275,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 278,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 284,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 290,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 291,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 298,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 297,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 257,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 305,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 308,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 310,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 314,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 317,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 319,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 401,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													329
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 328,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 327,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 158,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 158,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 330,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$158_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 333,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 157,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 335,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 337,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 340,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 343,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 342,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 348,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 154,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 352,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 351,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 357,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 361,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 360,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 359,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 358,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 365,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 401,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 375,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$158_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 154,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 374,
												"id": 378,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 372,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 401,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 386,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$158_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 157,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 389,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 401,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 396,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 398,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 158,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 158,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$158_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 401,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 402,
							"src": "2349:6560:1",
							"usedErrors": [
								164,
								167
							],
							"usedEvents": [
								172
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							431
						]
					},
					"id": 432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 403,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 404,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 431,
							"linearizedBaseContracts": [
								431
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 409,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 408,
												"id": 411,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 431,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 418,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 417,
												"id": 420,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 431,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 426,
												"id": 428,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 431,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 432,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							461
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "63:505:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 461,
							"linearizedBaseContracts": [
								461
							],
							"name": "Context",
							"nameLocation": "588:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "665:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 439,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "683:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "687:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "683:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 438,
												"id": 441,
												"nodeType": "Return",
												"src": "676:17:3"
											}
										]
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "612:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "656:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:9:3"
									},
									"scope": 461,
									"src": "603:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "776:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 448,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "794:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "798:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "794:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 447,
												"id": 450,
												"nodeType": "Return",
												"src": "787:15:3"
											}
										]
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "718:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:2:3"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "760:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:16:3"
									},
									"scope": 461,
									"src": "709:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "890:27:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "908:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 456,
												"id": 458,
												"nodeType": "Return",
												"src": "901:8:3"
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "827:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "881:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:9:3"
									},
									"scope": 461,
									"src": "818:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 462,
							"src": "570:350:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:885:3"
				},
				"id": 3
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							539
						]
					},
					"id": 540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 464,
								"nodeType": "StructuredDocumentation",
								"src": "63:73:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "IERC20",
							"nameLocation": "148:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "162:163:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 473,
									"name": "Transfer",
									"nameLocation": "337:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "362:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "346:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "384:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "368:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "396:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "388:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:57:4"
									},
									"src": "331:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "411:151:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 482,
									"name": "Approval",
									"nameLocation": "574:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "583:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "622:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "606:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "639:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "631:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:63:4"
									},
									"src": "568:78:4"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "654:67:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "736:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:2:4"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:9:4"
									},
									"scope": 539,
									"src": "727:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "790:73:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "878:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "896:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "888:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:17:4"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "928:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:9:4"
									},
									"scope": 539,
									"src": "869:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "945:219:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1179:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1196:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1188:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1208:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1200:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:27:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1233:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:4"
									},
									"scope": 539,
									"src": "1170:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1247:270:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1532:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1550:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1542:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1565:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1557:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:32:4"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1597:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:9:4"
									},
									"scope": 539,
									"src": "1523:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1614:681:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2310:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2343:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2335:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:32:4"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2368:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2368:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:6:4"
									},
									"scope": 539,
									"src": "2301:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2382:305:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2702:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2723:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2715:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2737:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2729:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2749:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:41:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2774:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2774:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:6:4"
									},
									"scope": 539,
									"src": "2693:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "138:2645:4",
							"usedErrors": [],
							"usedEvents": [
								473,
								482
							]
						}
					],
					"src": "35:2748:4"
				},
				"id": 4
			},
			"contracts/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							539
						],
						"IERC20Metadata": [
							565
						]
					},
					"id": 566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 540,
							"src": "63:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 539,
										"src": "71:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 545,
										"name": "IERC20",
										"nameLocations": [
											"222:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "222:6:5"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "222:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 544,
								"nodeType": "StructuredDocumentation",
								"src": "103:89:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 565,
							"linearizedBaseContracts": [
								565,
								539
							],
							"name": "IERC20Metadata",
							"nameLocation": "204:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "236:56:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "307:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:5"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "337:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:15:5"
									},
									"scope": 565,
									"src": "298:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "360:58:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "433:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:5"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "465:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "465:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:5"
									},
									"scope": 565,
									"src": "424:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "488:67:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "570:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:5"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "604:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 561,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "604:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:7:5"
									},
									"scope": 565,
									"src": "561:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 566,
							"src": "194:420:5",
							"usedErrors": [],
							"usedEvents": [
								473,
								482
							]
						}
					],
					"src": "35:579:5"
				},
				"id": 5
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							461
						],
						"Pausable": [
							657
						]
					},
					"id": 658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 462,
							"src": "62:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 570,
										"name": "Context",
										"nameLocations": [
											"568:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 461,
										"src": "568:7:6"
									},
									"id": 571,
									"nodeType": "InheritanceSpecifier",
									"src": "568:7:6"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "89:447:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 657,
							"linearizedBaseContracts": [
								657,
								461
							],
							"name": "Pausable",
							"nameLocation": "556:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "583:75:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 576,
									"name": "Paused",
									"nameLocation": "670:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "685:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "677:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:17:6"
									},
									"src": "664:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "702:72:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 581,
									"name": "Unpaused",
									"nameLocation": "786:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "803:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "795:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:17:6"
									},
									"src": "780:32:6"
								},
								{
									"constant": false,
									"id": 583,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "833:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "820:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 582,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "820:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "954:34:6",
										"statements": [
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 587,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "975:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "965:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "965:15:6"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "849:69:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"functionSelector": "8129fc1c",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "933:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:6"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:0:6"
									},
									"scope": 657,
									"src": "924:64:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "1141:33:6",
										"statements": [
											{
												"expression": {
													"id": 598,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 583,
													"src": "1159:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 597,
												"id": 599,
												"nodeType": "Return",
												"src": "1152:14:6"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "996:86:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1097:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1103:2:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1135:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1135:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:6:6"
									},
									"scope": 657,
									"src": "1088:86:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "1394:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1413:9:6",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 605,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1414:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1414:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1424:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1405:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1405:38:6"
											},
											{
												"id": 611,
												"nodeType": "PlaceholderStatement",
												"src": "1454:1:6"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1182:181:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 613,
									"name": "whenNotPaused",
									"nameLocation": "1378:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:2:6"
									},
									"src": "1369:94:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "1672:72:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "1691:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:8:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1701:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1683:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "1683:41:6"
											},
											{
												"id": 622,
												"nodeType": "PlaceholderStatement",
												"src": "1735:1:6"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1471:173:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 624,
									"name": "whenPaused",
									"nameLocation": "1659:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:2:6"
									},
									"src": "1650:94:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "1937:69:6",
										"statements": [
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 630,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1948:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1958:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1948:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "1948:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 635,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "1985:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1985:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1978:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "1973:25:6"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "1752:130:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 628,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 627,
												"name": "whenNotPaused",
												"nameLocations": [
													"1923:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "1923:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "1897:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:6"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:0:6"
									},
									"scope": 657,
									"src": "1888:118:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2195:72:6",
										"statements": [
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "2206:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2216:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2206:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "2206:15:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2246:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2246:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 650,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2237:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "EmitStatement",
												"src": "2232:27:6"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2014:127:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 643,
												"name": "whenPaused",
												"nameLocations": [
													"2184:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 624,
												"src": "2184:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2184:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "2156:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2164:2:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2195:0:6"
									},
									"scope": 657,
									"src": "2147:120:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 658,
							"src": "538:1732:6",
							"usedErrors": [],
							"usedEvents": [
								576,
								581
							]
						}
					],
					"src": "35:2235:6"
				},
				"id": 6
			},
			"contracts/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							794
						],
						"IERC20Errors": [
							699
						],
						"IERC721Errors": [
							747
						]
					},
					"id": 795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 660,
								"nodeType": "StructuredDocumentation",
								"src": "61:144:7",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IERC20Errors",
							"nameLocation": "217:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "237:314:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 669,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "563:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "596:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "588:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "612:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "604:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "629:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "621:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:49:7"
									},
									"src": "557:80:7"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "645:155:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 674,
									"name": "ERC20InvalidSender",
									"nameLocation": "812:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "839:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "831:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:7"
									},
									"src": "806:41:7"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "855:162:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 679,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1029:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1058:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1050:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:18:7"
									},
									"src": "1023:45:7"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1076:350:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 688,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1438:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1465:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1490:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1482:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1509:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1501:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:52:7"
									},
									"src": "1432:85:7"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1525:177:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 693,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1714:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1743:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1735:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:18:7"
									},
									"src": "1708:45:7"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "1761:198:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 698,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1971:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1999:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1991:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:17:7"
									},
									"src": "1965:43:7"
								}
							],
							"scope": 795,
							"src": "207:1804:7",
							"usedErrors": [
								669,
								674,
								679,
								688,
								693,
								698
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "2015:146:7",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC721Errors",
							"nameLocation": "2173:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "2194:223:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 705,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2429:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:15:7"
									},
									"src": "2423:40:7"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "2471:135:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 710,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2618:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2649:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2641:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:17:7"
									},
									"src": "2612:46:7"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2666:294:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 719,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2972:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3001:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3017:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3009:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2992:48:7"
									},
									"src": "2966:75:7"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "3049:155:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 724,
									"name": "ERC721InvalidSender",
									"nameLocation": "3216:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3244:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3236:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:16:7"
									},
									"src": "3210:42:7"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "3260:162:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 729,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3434:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3464:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3456:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:18:7"
									},
									"src": "3428:46:7"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "3482:251:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 736,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3745:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3780:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3772:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3772:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3798:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3790:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:35:7"
									},
									"src": "3739:68:7"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "3815:177:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 741,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4004:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4034:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4026:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:18:7"
									},
									"src": "3998:46:7"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "4052:200:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 746,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4264:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4294:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4286:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:18:7"
									},
									"src": "4258:46:7"
								}
							],
							"scope": 795,
							"src": "2163:2144:7",
							"usedErrors": [
								705,
								710,
								719,
								724,
								729,
								736,
								741,
								746
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 748,
								"nodeType": "StructuredDocumentation",
								"src": "4311:148:7",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 794,
							"linearizedBaseContracts": [
								794
							],
							"name": "IERC1155Errors",
							"nameLocation": "4471:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4493:367:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 759,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4872:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4907:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4899:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4940:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4932:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4956:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4948:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:66:7"
									},
									"src": "4866:99:7"
								},
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "4973:155:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 764,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5140:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5169:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "5161:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:16:7"
									},
									"src": "5134:43:7"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "5185:162:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 769,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5359:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5390:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "5382:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5382:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5381:18:7"
									},
									"src": "5353:47:7"
								},
								{
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "5408:260:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 776,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5680:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5717:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5709:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5727:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:33:7"
									},
									"src": "5674:68:7"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "5750:177:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 781,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5939:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5970:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5962:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5962:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:18:7"
									},
									"src": "5933:47:7"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "5988:200:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 786,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6200:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6231:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6223:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6222:18:7"
									},
									"src": "6194:47:7"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6249:285:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 793,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6546:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6580:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "6572:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6599:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "6591:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6571:41:7"
									},
									"src": "6540:73:7"
								}
							],
							"scope": 795,
							"src": "4461:2155:7",
							"usedErrors": [
								759,
								764,
								769,
								776,
								781,
								786,
								793
							],
							"usedEvents": []
						}
					],
					"src": "33:6583:7"
				},
				"id": 7
			},
			"contracts/nabla.sol": {
				"ast": {
					"absolutePath": "contracts/nabla.sol",
					"exportedSymbols": {
						"Context": [
							431
						],
						"IERC20": [
							539
						],
						"IERC20Errors": [
							699
						],
						"IERC20Metadata": [
							565
						],
						"Initializable": [
							401
						],
						"NABLASYSTEMS": [
							1441
						],
						"Ownable": [
							147
						],
						"Pausable": [
							657
						]
					},
					"id": 1442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 402,
							"src": "59:63:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 148,
							"src": "124:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 540,
							"src": "180:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 799,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 539,
										"src": "188:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 566,
							"src": "218:52:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 565,
										"src": "226:14:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/draft-IERC6093.sol",
							"file": "./draft-IERC6093.sol",
							"id": 804,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 795,
							"src": "315:50:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 803,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 699,
										"src": "323:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 658,
							"src": "367:40:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 805,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 657,
										"src": "375:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 808,
										"name": "Initializable",
										"nameLocations": [
											"1218:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 401,
										"src": "1218:13:8"
									},
									"id": 809,
									"nodeType": "InheritanceSpecifier",
									"src": "1218:13:8"
								},
								{
									"baseName": {
										"id": 810,
										"name": "IERC20",
										"nameLocations": [
											"1233:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "1233:6:8"
									},
									"id": 811,
									"nodeType": "InheritanceSpecifier",
									"src": "1233:6:8"
								},
								{
									"baseName": {
										"id": 812,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1241:14:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 565,
										"src": "1241:14:8"
									},
									"id": 813,
									"nodeType": "InheritanceSpecifier",
									"src": "1241:14:8"
								},
								{
									"baseName": {
										"id": 814,
										"name": "IERC20Errors",
										"nameLocations": [
											"1257:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "1257:12:8"
									},
									"id": 815,
									"nodeType": "InheritanceSpecifier",
									"src": "1257:12:8"
								},
								{
									"baseName": {
										"id": 816,
										"name": "Pausable",
										"nameLocations": [
											"1271:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 657,
										"src": "1271:8:8"
									},
									"id": 817,
									"nodeType": "InheritanceSpecifier",
									"src": "1271:8:8"
								}
							],
							"canonicalName": "NABLASYSTEMS",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "411:774:8",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1441,
							"linearizedBaseContracts": [
								1441,
								657,
								461,
								699,
								565,
								539,
								401
							],
							"name": "NABLASYSTEMS",
							"nameLocation": "1202:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 821,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1330:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1286:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 820,
										"keyName": "account",
										"keyNameLocation": "1302:7:8",
										"keyType": {
											"id": 818,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1294:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1286:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 819,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1313:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1420:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1348:83:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 826,
										"keyName": "account",
										"keyNameLocation": "1364:7:8",
										"keyType": {
											"id": 822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1356:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1348:63:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 825,
											"keyName": "spender",
											"keyNameLocation": "1391:7:8",
											"keyType": {
												"id": 823,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1383:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1375:35:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 824,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1402:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 830,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "1461:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1438:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 828,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1438:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 829,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1473:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1498:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1482:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1482:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1532:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1517:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 833,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1517:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1559:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1544:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 835,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1544:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 838,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1589:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "1573:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "1861:344:8",
										"statements": [
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 846,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1910:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 847,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "1918:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1910:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "1910:13:8"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1934:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 851,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "1944:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1934:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1934:17:8"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1962:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 855,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1971:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1975:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1971:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1962:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "1962:19:8"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "2025:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2053:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 862,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2057:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2053:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2040:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2025:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2025:41:8"
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2097:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "2107:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2097:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "2117:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2097:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "2097:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "2166:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2174:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2145:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "EmitStatement",
												"src": "2140:47:8"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1608:176:8",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"functionSelector": "4cd88b76",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1799:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1824:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "1810:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1810:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1845:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "1831:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1831:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:44:8"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1861:0:8"
									},
									"scope": 1441,
									"src": "1790:415:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										552
									],
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "2335:31:8",
										"statements": [
											{
												"expression": {
													"id": 889,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "2353:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 888,
												"id": 890,
												"nodeType": "Return",
												"src": "2346:12:8"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2213:56:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2284:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2288:2:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2320:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:15:8"
									},
									"scope": 1441,
									"src": "2275:91:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										558
									],
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2547:33:8",
										"statements": [
											{
												"expression": {
													"id": 898,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "2565:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 897,
												"id": 899,
												"nodeType": "Return",
												"src": "2558:14:8"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "2374:105:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2494:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2500:2:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2532:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2532:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:15:8"
									},
									"scope": 1441,
									"src": "2485:95:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										564
									],
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "3282:35:8",
										"statements": [
											{
												"expression": {
													"id": 907,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 830,
													"src": "3300:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 906,
												"id": 908,
												"nodeType": "Return",
												"src": "3293:16:8"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2586:634:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3235:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:2:8"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "3275:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 904,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3275:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3274:7:8"
									},
									"scope": 1441,
									"src": "3226:91:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										488
									],
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "3443:38:8",
										"statements": [
											{
												"expression": {
													"id": 916,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "3461:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "3454:19:8"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "3325:51:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3391:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3402:2:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "3434:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:9:8"
									},
									"scope": 1441,
									"src": "3382:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										496
									],
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3618:44:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 927,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3636:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 929,
													"indexExpression": {
														"id": 928,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3646:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3636:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 930,
												"nodeType": "Return",
												"src": "3629:25:8"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "3489:49:8",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3553:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3571:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3563:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:17:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3609:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3608:9:8"
									},
									"scope": 1441,
									"src": "3544:118:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										506
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3966:122:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 946,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3997:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4001:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3997:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4009:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "4013:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "3987:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3987:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "3987:32:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4076:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 944,
												"id": 953,
												"nodeType": "Return",
												"src": "4069:11:8"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3670:191:8",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 941,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 940,
												"name": "whenNotPaused",
												"nameLocations": [
													"3937:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "3937:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3937:13:8"
										}
									],
									"name": "transfer",
									"nameLocation": "3876:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 939,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3927:8:8"
									},
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3893:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3885:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3905:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3897:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:27:8"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3960:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3959:6:8"
									},
									"scope": 1441,
									"src": "3867:221:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										516
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4245:58:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 965,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4263:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 966,
															"name": "ownerAllow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4275:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4263:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4287:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4263:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 970,
												"nodeType": "Return",
												"src": "4256:39:8"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4096:49:8",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4160:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "ownerAllow",
												"nameLocation": "4178:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4170:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4198:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4190:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4169:37:8"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4236:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:9:8"
									},
									"scope": 1441,
									"src": "4151:152:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										526
									],
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "4701:118:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4731:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4735:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4731:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4743:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4752:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1308,
															1368
														],
														"referencedDeclaration": 1308,
														"src": "4722:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4722:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "4722:36:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4807:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 981,
												"id": 990,
												"nodeType": "Return",
												"src": "4800:11:8"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4311:305:8",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4631:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4647:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4639:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4664:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4656:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:32:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4695:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4695:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4694:6:8"
									},
									"scope": 1441,
									"src": "4622:197:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "4904:32:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "4917:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "4926:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "4911:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "4911:21:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "onlyOwner",
												"nameLocations": [
													"4880:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1021,
												"src": "4880:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4880:9:8"
										},
										{
											"id": 1001,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1000,
												"name": "whenNotPaused",
												"nameLocations": [
													"4890:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "4890:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4890:13:8"
										}
									],
									"name": "mint",
									"nameLocation": "4836:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4849:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4841:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4866:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4858:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4840:32:8"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4904:0:8"
									},
									"scope": 1441,
									"src": "4827:109:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "4963:107:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1012,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4992:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4996:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1014,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "5006:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4992:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5014:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4984:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4984:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "4984:66:8"
											},
											{
												"id": 1019,
												"nodeType": "PlaceholderStatement",
												"src": "5061:1:8"
											}
										]
									},
									"id": 1021,
									"name": "onlyOwner",
									"nameLocation": "4951:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4960:2:8"
									},
									"src": "4942:128:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										538
									],
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "5795:156:8",
										"statements": [
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5814:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "5806:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1036,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5806:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1038,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "5824:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5824:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5806:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "5863:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5869:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5878:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "5847:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5847:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "5847:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "5905:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "5911:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5915:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "5895:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5895:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "5895:26:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1035,
												"id": 1054,
												"nodeType": "Return",
												"src": "5932:11:8"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "5076:596:8",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1032,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1031,
												"name": "whenNotPaused",
												"nameLocations": [
													"5766:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "5766:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5766:13:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5687:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1030,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5757:8:8"
									},
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5708:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5700:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5722:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5714:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5734:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5726:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5699:41:8"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5789:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5789:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:6:8"
									},
									"scope": 1441,
									"src": "5678:273:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "6053:32:8",
										"statements": [
											{
												"expression": {
													"id": 1061,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 838,
													"src": "6071:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1062,
												"nodeType": "Return",
												"src": "6064:13:8"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "6015:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6020:2:8"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "6044:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6044:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:9:8"
									},
									"scope": 1441,
									"src": "6006:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "6202:195:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "6225:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6245:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6237:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1073,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6237:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6237:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6225:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6249:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
																"typeString": "literal_string \"New owner is the zero address\""
															},
															"value": "New owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
																"typeString": "literal_string \"New owner is the zero address\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6217:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6217:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6217:64:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1082,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6322:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "6330:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1081,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "6301:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "EmitStatement",
												"src": "6296:43:8"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1086,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "6368:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1087,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "6377:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6368:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "6368:17:8"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyOwner",
												"nameLocations": [
													"6192:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1021,
												"src": "6192:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6192:9:8"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6149:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6175:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "6167:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6167:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:18:8"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6202:0:8"
									},
									"scope": 1441,
									"src": "6140:257:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "6850:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "6865:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6881:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6873:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1102,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6873:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6873:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6865:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1115,
												"nodeType": "IfStatement",
												"src": "6861:88:8",
												"trueBody": {
													"id": 1114,
													"nodeType": "Block",
													"src": "6885:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6934:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6926:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1108,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6926:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6926:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1107,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "6907:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6907:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1113,
															"nodeType": "RevertStatement",
															"src": "6900:37:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "6963:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6977:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6969:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1117,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6969:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6969:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6963:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "6959:88:8",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "6981:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7032:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7024:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1123,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7024:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7024:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1122,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "7003:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7003:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1128,
															"nodeType": "RevertStatement",
															"src": "6996:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "7065:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "7071:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "7075:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7057:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7057:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "7057:24:8"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "6404:371:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6790:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6808:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6800:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6800:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6822:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6814:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6814:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6834:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6826:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6799:41:8"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:0:8"
									},
									"scope": 1441,
									"src": "6781:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "7488:1060:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1148,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7503:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7519:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7511:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1149,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7511:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7511:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7503:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "7680:371:8",
													"statements": [
														{
															"assignments": [
																1160
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1160,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7703:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "7695:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1159,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7695:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1164,
															"initialValue": {
																"baseExpression": {
																	"id": 1161,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "7717:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1163,
																"indexExpression": {
																	"id": 1162,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "7727:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7717:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7695:37:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1165,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "7751:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "7765:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7751:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "7747:117:8",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "7772:92:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1169,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7823:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1170,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "7829:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1171,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "7842:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1168,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "7798:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7798:50:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "7791:57:8"
																	}
																]
															}
														},
														{
															"id": 1184,
															"nodeType": "UncheckedBlock",
															"src": "7878:162:8",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1176,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "7987:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1178,
																			"indexExpression": {
																				"id": 1177,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "7997:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7987:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1179,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "8005:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1180,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "8019:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8005:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7987:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "7987:37:8"
																}
															]
														}
													]
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "7499:552:8",
												"trueBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "7523:151:8",
													"statements": [
														{
															"expression": {
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1154,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "7641:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "7657:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7641:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "7641:21:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "8067:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8081:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8073:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1188,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8073:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8073:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8067:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "8287:211:8",
													"statements": [
														{
															"id": 1205,
															"nodeType": "UncheckedBlock",
															"src": "8302:185:8",
															"statements": [
																{
																	"expression": {
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1199,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "8449:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1201,
																			"indexExpression": {
																				"id": 1200,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "8459:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8449:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8466:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8449:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1204,
																	"nodeType": "ExpressionStatement",
																	"src": "8449:22:8"
																}
															]
														}
													]
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "8063:435:8",
												"trueBody": {
													"id": 1198,
													"nodeType": "Block",
													"src": "8085:196:8",
													"statements": [
														{
															"id": 1197,
															"nodeType": "UncheckedBlock",
															"src": "8100:170:8",
															"statements": [
																{
																	"expression": {
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1193,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "8233:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1194,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8249:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8233:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"nodeType": "ExpressionStatement",
																	"src": "8233:21:8"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1209,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "8524:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "8530:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "8534:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "8515:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8515:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "EmitStatement",
												"src": "8510:30:8"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "7097:310:8",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7422:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7438:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7430:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7452:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7444:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7444:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "7456:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7429:41:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7488:0:8"
									},
									"scope": 1441,
									"src": "7413:1135:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "8957:254:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1223,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "8992:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9011:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1224,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9003:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9003:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8992:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "8988:93:8",
												"trueBody": {
													"id": 1236,
													"nodeType": "Block",
													"src": "9015:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9066:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1230,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1229,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "9037:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9037:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1235,
															"nodeType": "RevertStatement",
															"src": "9030:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9107:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9099:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1239,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9099:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9099:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "9111:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "9120:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1238,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "9091:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9091:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "9091:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9159:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9151:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9151:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9151:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "9163:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "9172:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "9142:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9142:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "EmitStatement",
												"src": "9137:41:8"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "8556:339:8",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8910:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8924:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "8916:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8941:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "8933:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8933:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8915:32:8"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8957:0:8"
									},
									"scope": 1441,
									"src": "8901:310:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "9594:155:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "9609:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9628:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9620:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1266,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9620:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9620:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9609:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "IfStatement",
												"src": "9605:91:8",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "9632:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9681:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9673:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1272,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9673:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9673:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1271,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "9654:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9654:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1277,
															"nodeType": "RevertStatement",
															"src": "9647:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "9714:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9731:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9723:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9723:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9723:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "9735:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "9706:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9706:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "9706:35:8"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "9219:314:8",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"functionSelector": "6161eb18",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9548:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9562:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "9554:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9579:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "9571:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9553:32:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9594:0:8"
									},
									"scope": 1441,
									"src": "9539:210:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "10381:61:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "approveOwn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "10401:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "10413:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "10422:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10429:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1300,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1308,
															1368
														],
														"referencedDeclaration": 1368,
														"src": "10392:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10392:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "10392:42:8"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "9757:539:8",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10311:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "approveOwn",
												"nameLocation": "10328:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "10320:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10320:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10348:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "10340:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10340:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10365:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "10357:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10319:52:8"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10381:0:8"
									},
									"scope": 1441,
									"src": "10302:140:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "11412:360:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1320,
														"name": "approveOwn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "11427:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11441:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1321,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11441:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11441:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11427:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "11423:96:8",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "11453:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11504:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11496:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1327,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11496:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11496:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1326,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "11475:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11475:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "RevertStatement",
															"src": "11468:39:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1335,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "11533:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11552:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11544:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1336,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11544:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11544:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11533:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "IfStatement",
												"src": "11529:92:8",
												"trueBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "11556:65:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11606:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11598:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1342,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11598:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11598:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1341,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "11578:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11578:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1347,
															"nodeType": "RevertStatement",
															"src": "11571:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1350,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "11631:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1353,
															"indexExpression": {
																"id": 1351,
																"name": "approveOwn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "11643:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11631:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1354,
														"indexExpression": {
															"id": 1352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "11655:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11631:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "11666:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11631:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "11631:40:8"
											},
											{
												"condition": {
													"id": 1358,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1317,
													"src": "11686:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1366,
												"nodeType": "IfStatement",
												"src": "11682:83:8",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "11697:68:8",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1360,
																		"name": "approveOwn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "11726:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "11738:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "11747:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1359,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "11717:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11717:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1364,
															"nodeType": "EmitStatement",
															"src": "11712:41:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "10450:853:8",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11318:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "approveOwn",
												"nameLocation": "11335:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "11327:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11355:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "11347:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11347:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11372:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "11364:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11364:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11384:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "11379:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11379:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11326:68:8"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11412:0:8"
									},
									"scope": 1441,
									"src": "11309:463:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "12160:411:8",
										"statements": [
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12179:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "12171:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12171:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [
														{
															"id": 1381,
															"name": "allowanceAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "12208:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "12222:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1380,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "12198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12198:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12171:59:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "12245:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12269:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1387,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12269:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1386,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12264:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12264:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12278:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12264:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12245:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "12241:323:8",
												"trueBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "12283:281:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1392,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "12302:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "12321:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12302:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1402,
															"nodeType": "IfStatement",
															"src": "12298:132:8",
															"trueBody": {
																"id": 1401,
																"nodeType": "Block",
																"src": "12328:102:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1396,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1373,
																					"src": "12381:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1397,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "12390:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1398,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1375,
																					"src": "12408:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1395,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "12354:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12354:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1400,
																		"nodeType": "RevertStatement",
																		"src": "12347:67:8"
																	}
																]
															}
														},
														{
															"id": 1412,
															"nodeType": "UncheckedBlock",
															"src": "12444:109:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1404,
																				"name": "allowanceAdr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "12482:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1405,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1373,
																				"src": "12496:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1406,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "12505:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1407,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1375,
																					"src": "12524:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12505:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12531:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1403,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1308,
																				1368
																			],
																			"referencedDeclaration": 1368,
																			"src": "12473:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12473:64:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "12473:64:8"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "11780:278:8",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12073:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "allowanceAdr",
												"nameLocation": "12097:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "12089:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12089:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12119:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "12111:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12136:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "12128:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12088:54:8"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12160:0:8"
									},
									"scope": 1441,
									"src": "12064:507:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1422,
									"name": "OwnershipTransferred",
									"nameLocation": "12595:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "12632:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12616:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12616:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "12663:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12647:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12647:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12615:57:8"
									},
									"src": "12589:84:8"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "12784:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1427,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "12795:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12795:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "12795:8:8"
											}
										]
									},
									"functionSelector": "439766ce",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1424,
												"name": "onlyOwner",
												"nameLocations": [
													"12774:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1021,
												"src": "12774:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "12774:9:8"
										}
									],
									"name": "pauseContract",
									"nameLocation": "12749:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12762:2:8"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12784:0:8"
									},
									"scope": 1441,
									"src": "12740:71:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "12922:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1436,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "12933:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12933:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "12933:10:8"
											}
										]
									},
									"functionSelector": "b33712c5",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1433,
												"name": "onlyOwner",
												"nameLocations": [
													"12912:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1021,
												"src": "12912:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "12912:9:8"
										}
									],
									"name": "unpauseContract",
									"nameLocation": "12885:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12900:2:8"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12922:0:8"
									},
									"scope": 1441,
									"src": "12876:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1442,
							"src": "1193:11763:8",
							"usedErrors": [
								164,
								167,
								669,
								674,
								679,
								688,
								693,
								698
							],
							"usedEvents": [
								172,
								473,
								482,
								576,
								581,
								1422
							]
						}
					],
					"src": "33:12923:8"
				},
				"id": 8
			}
		}
	}
}